{"version":3,"file":"blocks/custom-code/index.js","mappings":"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AACA;AACoD;AACoB;AAEzD,SAASK,aAAaA,CAAAzK,IAAA,EAAY;EAAA,IAAX;IAAEa;EAAM,CAAC,GAAAb,IAAA;EAC9C,IAAI,CAACwK,wDAAQ,CAACE,KAAK,EAAE,OAAO,IAAI;EAEhC,MAAMC,YAAY,GACjB,OAAON,8DAAS,CAACO,wBAAwB,KAAK,WAAW,GACtDN,8DAAU,CAACD,8DAAS,CAACO,wBAAwB,CAAC,GAC9C/C,QAAQ,CAACtD,aAAa,CAAC,MAAM,CAAC;EAElC,MAAMsG,QAAQ,GAAGA,CAAA,KAAM;IACtB,OAAOpK,iEAAA,gBAAQI,KAAa,CAAC;EAC9B,CAAC;EAED,OAAOA,KAAK,IAAI8J,YAAY,GAAGJ,gEAAY,CAAC9J,iEAAA,CAACoK,QAAQ,MAAE,CAAC,EAAEF,YAAY,CAAC,GAAG,IAAI;AAC/E;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,OAAO;AACxD;AACA,+BAA+B,kDAAkD;AACjF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA,qCAAqC;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA,oBAAoB;AACpB,oBAAoB;AACpB,cAAc;;AAEd;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA,yBAAyB;AACzB,yBAAyB;AACzB,yBAAyB;AACzB,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM,kBAAkB;AACxB;AACA,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB,KAAK,wBAAwB;AAC7B;AACA;AACA,YAAY,UAAU;AACtB;AACA,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,SAAS,+DAA+D,IAAI;AAC5G,yBAAyB,gDAAgD;;AAEzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA,0BAA0B,kCAAkC,SAAS,cAAc;AACnF;;AAEA;AACA;AACA,SAAS,MAAM,QAAQ,kBAAkB;AACzC,YAAY,cAAc;AAC1B,YAAY,cAAc;AAC1B,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gDAAgD;AAChD;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8CAA8C;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C,2CAA2C;AACzF;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA,mDAAmD;;AAEnD;AACA;;AAEA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,4CAA4C,cAAc;AAC1D;AACA;AACA;AACA;AACA,oBAAoB;;AAEpB,2CAA2C;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;;AAEA;AACA,2DAA2D,yCAAyC;AACpG;AACA;;AAEA;AACA;AACA;;AAEA,iEAAiE;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;;AAEA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,GAAG,KAAK;AACvD,gBAAgB,EAAE,MAAM,EAAE,sCAAsC;AAChE;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;;AAEA,iBAAiB;;AAEjB;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,YAAY;AACZ;AACA;AACA,gDAAgD,oDAAoD;AACpG;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6BAA6B,gBAAgB;;AAE7C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;;AAEA;AACA,+CAA+C,mBAAmB;AAClE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD,qBAAqB;AACvE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B,uCAAuC;;AAEvC;;AAEA,6BAA6B,gDAAgD;AAC7E;AACA;;AAEA;AACA,kCAAkC,eAAe;AACjD;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,cAAc;AAC1B,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA,yEAAyE,+CAA+C;AACxH;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,YAAY;AACvB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,aAAa,aAAa;AAC1B;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,qCAAqC,6BAA6B;AAClE;;AAEA;AACA,sBAAsB,GAAG;AACzB,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,MAA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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,6DAA6D;AAC7D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,YAAY,MAAM;AAClB;;AAEA,YAAY,MAAM;AAClB;;AAEA,YAAY,MAAM;AAClB;;AAEA;;AAEA;AACA,uCAAuC,qCAAqC;AAC5E;AACA;;AAEA,6BAA6B,cAAc,oBAAoB,kBAAkB,oBAAoB,YAAY,oBAAoB,eAAe,oBAAoB,eAAe,oBAAoB,cAAc,oBAAoB,eAAe,oBAAoB,gBAAgB,oBAAoB,oBAAoB,oBAAoB,cAAc;;AAE1W;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI;AACN;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,yBAAyB;AACrC,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,6BAA6B;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,kBAAkB;AAC9B;AACA,YAAY,yBAAyB;AACrC,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,qEAAqE,wBAAwB;AAC7F;AACA;;AAEA;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;;AAEA,4CAA4C,0CAA0C;;AAEtF;AACA,2CAA2C,8CAA8C;AACzF;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA,WAAW,qBAAqB;AAChC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,yBAAyB;AACrC,YAAY,GAAG;AACf,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,QAAQ;;AAErC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB;AACjB,iBAAiB;;AAEjB;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA,iDAAiD;AACjD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB,sBAAsB;AACtB,kBAAkB;;AAElB;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB;AACjB,mBAAmB;AACnB,iBAAiB;;AAEjB;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,SAAS;AACrB;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc;;AAEd;AACA;AACA,YAAY,cAAc;AAC1B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB;AACnB,mBAAmB;AACnB,iBAAiB;AACjB,mBAAmB;AACnB,iBAAiB;AACjB,mBAAmB;;AAEnB;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2BAA2B,YAAY;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,iBAAiB;AAC5B;AACA;AACA;;AAEA;AACA,8CAA8C,wDAAwD;AACtG,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;;AAEA;AACA;AACA,6CAA6C,kCAAkC;AAC/E,MAAM;AACN,mDAAmD,sCAAsC;AACzF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kDAAkD,uCAAuC;AACzF,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA,oBAAoB,2BAA2B;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,yBAAyB,2BAA2B;AACpD,0CAA0C,2BAA2B;;AAErE;AACA;;AAEA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA;AACA;AACA,8BAA8B,oDAAoD;AAClF;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA,oBAAoB,2BAA2B;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC,gCAAgC;AAChC;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,uDAAuD;AACzE,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,KAAK;AAC9D,kDAAkD,SAAS,KAAK;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,KAAK;AAC1D,8CAA8C,SAAS,KAAK;AAC5D;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,gDAAgD,4BAA4B;AAC5E;AACA;;AAEA,mCAAmC,oBAAoB,oEAAoE;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,gCAAgC;AAChC;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,cAAc;AACd,uCAAuC,OAAO,OAAO;AACrD,iCAAiC,EAAE,EAAE;AACrC;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,qBAAqB;;AAErB;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;;AAEA,cAAc;;AAEd;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB,sBAAsB;AACtB,oBAAoB;;AAEpB;AACA,wBAAwB,IAAI;AAC5B,YAAY,cAAc;AAC1B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;;AAEvB;;AAEA;AACA;AACA;AACA,wDAAwD,MAAM;AAC9D,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB;AAClB,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B;AAC5C,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,iBAAiB;AACjB,gBAAgB;AAChB;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB,sBAAsB;AACtB,oBAAoB;;AAEpB;AACA;AACA,YAAY,cAAc;AAC1B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,qCAAqC,QAAQ;AAC7C;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB,wBAAwB;AACxB,wBAAwB;AACxB,wBAAwB;AACxB,wBAAwB;;AAExB;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,+BAA+B;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB;;AAEnB;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;AACtB,oBAAoB;AACpB,kBAAkB;;AAElB;AACA,wBAAwB,IAAI;AAC5B,YAAY,cAAc;AAC1B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;AACrB,qBAAqB;AACrB,qBAAqB;AACrB,qBAAqB;;AAErB;;AAEA;AACA;AACA;AACA,wDAAwD,MAAM;AAC9D,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB;AAClB,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ,IAAI;AACJ;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B;AAC5C,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,iBAAiB;AACjB,gBAAgB;AAChB;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB,oBAAoB;AACpB,kBAAkB;;AAElB;AACA;AACA,YAAY,cAAc;AAC1B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,qCAAqC,QAAQ;AAC7C;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;AACtB,sBAAsB;AACtB,sBAAsB;AACtB,sBAAsB;AACtB,sBAAsB;;AAEtB;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6BAA6B;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,kBAAkB;AAC9B,YAAY,MAAM;AAClB;;AAEA;AACA,gCAAgC,qCAAqC;AACrE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,kBAAkB;AACtC;AACA;;AAEA;AACA,qDAAqD,oBAAoB;AACzE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB,uBAAuB;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB;AACtB,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY;AACrC,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;;AAErD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,SAAS;AACrB;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA,uDAAuD;AACvD;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,UAAU;AACtB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,UAAU;AACtB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE,IAAI;;AAEN;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B,kCAAkC;AAClC;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,wBAAwB;AACrD,+BAA+B,mCAAmC,yEAAyE;AAC3I;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB,YAAY;AACZ;AACA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA,oBAAoB,gDAAgD;AACpE;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,uDAAuD,qCAAqC;;AAE5F,wCAAwC,kEAAkE;AAC1G;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA,2DAA2D,sDAAsD;AACjH;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,UAAU;AACtB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,wFAAwF;AAC/H;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA,wDAAwD,gCAAgC;AACxF;;AAEA;AACA;;AAEA,0BAA0B;;AAE1B;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,GAAG,KAAK;AACvD,gBAAgB,EAAE,MAAM,EAAE,sCAAsC;AAChE;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kDAAkD,yBAAyB;AAC3E;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB,YAAY,iBAAiB;AAC7B;AACA,YAAY;AACZ;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iEAAiE,IAAI;AACrE,wDAAwD,IAAI;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,UAAU;AACtB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA,8BAA8B,kEAAkE;;AAEhG;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA,cAAc;;AAEd;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,8CAA8C;AAC9C,8CAA8C;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;;AAE3B,6BAA6B,gCAAgC;;AAE7D;AACA,6BAA6B,oDAAoD;;AAEjF;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,KAAK;AACjB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,KAAK;AACjB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA,6BAA6B,wBAAwB;AACrD,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,OAAO;AACjC,wBAAwB,GAAG,KAAK,EAAE;AAClC;AACA,4BAA4B,GAAG,KAAK,EAAE;AACtC,gCAAgC,GAAG,KAAK,GAAG,OAAO,MAAM,OAAO,KAAK;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,KAAK,uBAAuB,QAAQ,gBAAgB,EAAE,YAAY;AACzF,UAAU,OAAO,GAAG,IAAI;AACxB;AACA;AACA,8BAA8B,EAAE;AAChC,6BAA6B,EAAE;AAC/B,6BAA6B,EAAE;AAC/B,0BAA0B,EAAE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC,6BAA6B,QAAQ;AACrC,qEAAqE,cAAc;AACnF,uDAAuD,gBAAgB;AACvE,kDAAkD,cAAc;AAChE,4EAA4E,UAAU;AACtF,+EAA+E,WAAW;AAC1F,iDAAiD,YAAY;AAC7D;AACA,8DAA8D;AAC9D,iDAAiD,eAAe,kBAAkB,MAAM;AACxF,4DAA4D,OAAO;AACnE,sCAAsC,UAAU;AAChD,uDAAuD,MAAM,qBAAqB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS;AACtD;AACA,yCAAyC,cAAc;AACvD,mDAAmD,SAAS;AAC5D;AACA,0DAA0D,SAAS;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,gBAAgB;AAC1B;AACA;AACA;AACA,YAAY,cAAc,EAAE,aAAa;AACzC,cAAc,oBAAoB,EAAE,iBAAiB;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc;;AAEd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY;AACZ;AACA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oDAAoD;AACpD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B,UAAU;AACtC;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA,gCAAgC,wCAAwC;AACxE;AACA;;AAEA;AACA;AACA;;AAEA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B,SAAS;AACtC;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA,iDAAiD,QAAQ;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA,0BAA0B,gBAAgB;AAC1C,6BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,kDAAkD,QAAQ;AAC1D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,CAAC;AACD;AACA,WAAW,gBAAgB;AAC3B,8BAA8B,qBAAqB;AACnD;AACA;AACA,iCAAiC,oBAAoB;AACrD;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,eAAe,QAAQ;AACvB,oEAAoE;AACpE,6EAA6E;AAC7E;AACA,UAAU;AACV,UAAU;AACV;AACA;AACA;AACA;AACA,iCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,2DAA2D,8DAA8D;AACzH;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA,SAAS,IAAI;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,gCAAgC;AAChC;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,gCAAgC;AAChC;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,mBAAmB,0CAA0C;AAClE;;AAEsF;;;;;;;;;;;AClxMtF,4HAA0F,mBAAmB,sCAAsC,mBAAmB,oBAAoB,uBAAuB,8CAA8C,kBAAkB,4CAA4C,mCAAmC,qBAAqB,kBAAkB,6BAA6B,kBAAkB,+FAA+F,+BAA+B,2BAA2B,iBAAiB,iBAAiB,SAAS,YAAY,uBAAuB,yBAAyB,oBAAoB,uBAAuB,kGAAkG,wCAAwC,SAAS,kBAAkB,iCAAiC,gCAAgC,8BAA8B,cAAc;AACn/B,kBAAkB,QAAQ,QAAQ,uCAAuC,WAAW,MAAM,iBAAiB,WAAW,qBAAqB,KAAK,MAAM,gBAAgB,KAAK,QAAQ,WAAW,MAAM,KAAK,QAAQ,WAAW,qBAAqB,KAAK,MAAM,gBAAgB,oEAAoE,gBAAgB,kDAAkD,IAAI,wBAAwB;AAC9a,eAAe,oDAAoD,kBAAkB,aAAa,uBAAuB,cAAc,oCAAoC,EAAE,+BAA+B,wBAAwB,KAAK,IAAI,sBAAsB,KAAK,qCAAqC,IAAI,wBAAwB,KAAK,IAAI,IAAI;AACtV,oBAAoB,0CAA0C,MAAM,oBAAoB,MAAM,OAAO,yCAAyC,iLAAiL,iBAAiB,sBAAsB,6CAA6C,SAAS,SAAS,aAAa,aAAa,SAAS,YAAY,cAAc,MAAM,kBAAkB,MAAM,MAAM,gBAAgB,MAAM,KAAK,cAAc,+BAA+B,cAAc,cAAc,0BAA0B,iBAAiB,mBAAmB,6DAA6D,uBAAuB,gBAAgB,SAAS,SAAS,WAAW,2CAA2C,0CAA0C,eAAe,4CAA4C,cAAc,SAAS,kBAAkB,YAAY,WAAW,KAAK,+BAA+B,8DAA8D,mBAAmB,cAAc,eAAe,cAAc,eAAe,8CAA8C;AACttC,eAAe,qBAAqB,qNAAqN,YAAY,iBAAiB,SAAS,oCAAoC,SAAS,kBAAkB,qBAAqB,sBAAsB,eAAe,oCAAoC,eAAe,cAAc,QAAQ,iEAAiE,kCAAkC,WAAW,gBAAgB,kBAAkB,qCAAqC,eAAe,cAAc,UAAU,mBAAmB,WAAW,mCAAmC,aAAa,qBAAqB,UAAU,gBAAgB,SAAS,SAAS,wBAAwB,qBAAqB,SAAS,cAAc,kBAAkB,cAAc,qBAAqB,kBAAkB,YAAY,aAAa,gBAAgB,WAAW,YAAY,mBAAmB,SAAS,UAAU,oBAAoB,mBAAmB,uBAAuB,wBAAwB,2BAA2B,IAAI,wBAAwB,SAAS,SAAS,SAAS,SAAS,cAAc,iBAAiB,6BAA6B,iEAAiE,aAAa,0DAA0D,iCAAiC,YAAY,IAAI,EAAE,IAAI,qCAAqC,oBAAoB,EAAE,oCAAoC,4BAA4B,SAAS,YAAY,SAAS,GAAG,0BAA0B,SAAS,SAAS,SAAS,SAAS,oBAAoB,UAAU,cAAc,eAAe,iCAAiC,4BAA4B,4BAA4B,4BAA4B,4BAA4B,qCAAqC,OAAO,yBAAyB,0CAA0C,OAAO,yBAAyB,2BAA2B,OAAO,yBAAyB,gCAAgC;AACznE,KAAK,yBAAyB,UAAU,UAAU,UAAU,UAAU,OAAO,yBAAyB,QAAQ,aAAa,aAAa,6EAA6E,+EAA+E,SAAS,6BAA6B,kCAAkC,0CAA0C,WAAW;AACja,mBAAmB,6EAA6E,SAAS,cAAc,8CAA8C,6DAA6D,wGAAwG,eAAe,wBAAwB,QAAQ,QAAQ,gBAAgB,wBAAwB,YAAY,YAAY,YAAY,YAAY,UAAU,QAAQ,kBAAkB,SAAS,SAAS,SAAS,iBAAiB,SAAS,WAAW,0BAA0B,aAAa,8IAA8I,oBAAoB,UAAU;AAChxB,0BAA0B,aAAa,QAAQ,yGAAyG,sDAAsD,WAAW,sBAAsB,UAAU,eAAe,qIAAqI,eAAe,SAAS,cAAc,SAAS,iBAAiB,8BAA8B,wCAAwC,qBAAqB,sBAAsB;AAC9jB,uBAAuB,eAAe,kCAAkC,4BAA4B,0BAA0B,KAAK,cAAc,WAAW,WAAW,QAAQ,WAAW,KAAK,8BAA8B,wDAAwD,qBAAqB,OAAO,gCAAgC;AACjV,kCAAkC,UAAU,kFAAkF,UAAU,QAAQ,WAAW,kBAAkB,IAAI,mBAAmB,qBAAqB,MAAM,qCAAqC,aAAa,IAAI,eAAe,IAAI,8BAA8B,cAAc,GAAG,iBAAiB,SAAS;AACjX,8BAA8B,aAAa,wBAAwB,mCAAmC,iBAAiB,WAAW,KAAK,sBAAsB,uHAAuH,KAAK,2BAA2B,IAAI,KAAK,yCAAyC,MAAM,YAAY,0FAA0F;AACld,cAAc,WAAW,MAAM,+BAA+B,YAAY,iBAAiB,SAAS,SAAS,8BAA8B,wEAAwE,SAAS,IAAI,eAAe,IAAI,wBAAwB,SAAS,IAAI,eAAe,IAAI,4DAA4D,WAAW,8BAA8B,yBAAyB,eAAe,OAAO,GAAG,iBAAiB,qBAAqB,UAAU,UAAU,aAAa,0CAA0C,iBAAiB,uBAAuB,IAAI,KAAK,sBAAsB,+BAA+B,SAAS,+BAA+B;AACjsB,eAAe,kDAAkD,sCAAsC,8BAA8B,IAAI,qCAAqC,+BAA+B,4CAA4C,oDAAoD,UAAU,eAAe,SAAS,UAAU;AACzV,QAAQ,8KAA8K,KAAK,4RAA4R,KAAK,kCAAkC;AAC9f;AACA,eAAe,yBAAyB,IAAI,KAAK,2DAA2D,gBAAgB,MAAM,WAAW,KAAK,2CAA2C,IAAI,KAAK,MAAM,OAAO,wBAAwB,+BAA+B,gBAAgB,KAAK,OAAO,2BAA2B,OAAO,wBAAwB,kDAAkD,kBAAkB,UAAU,aAAa,kBAAkB;AAC7c,wCAAwC,8BAA8B,QAAQ,WAAW,+BAA+B,iBAAiB,SAAS,SAAS,QAAQ,8BAA8B,8BAA8B,wEAAwE,QAAQ,gBAAgB,MAAM,gBAAgB,eAAe,cAAc,GAAG,iBAAiB,SAAS,SAAS,8BAA8B,2BAA2B,2EAA2E,WAAW,0DAA0D,sBAAsB,iBAAiB,WAAW,iCAAiC,WAAW,0BAA0B,IAAI,gBAAgB,8BAA8B,EAAE,UAAU,MAAM,aAAa,iBAAiB,SAAS,SAAS,UAAU,8BAA8B,kCAAkC,+DAA+D,+CAA+C,6BAA6B,IAAI,KAAK,iBAAiB,mDAAmD,wBAAwB,OAAO,8FAA8F,SAAS,UAAU,qBAAqB,2BAA2B,oBAAoB,6BAA6B,oBAAoB,6BAA6B,oBAAoB,4BAA4B,oBAAoB,2BAA2B,oBAAoB,OAAO,kBAAkB,KAAsC,CAAC,mCAAO,WAAW,SAAS;AAAA,kGAAC,CAAC,CAAkI,EAAE;;;;;;;;;;;AChBruD;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACxBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACqC;AACiB;AACC;AACC;AACK;AACqC;;AAElG;AACA;AACA;AACoC;AACE;AACc;AACX;AACG;AAE5C,MAAM5B,MAAM,GAAG,CAAC,CAACvF,MAAM,CAACwF,YAAY,EAAEC,KAAK,IAAI,KAAK;;AAEpD;AACA;AACA;AACA,MAAM4C,SAAS,GAAG,GAAG;AACrB,MAAMC,SAAS,GAAG,IAAI;AAEtB,MAAMC,OAAO,GAAG,CACf;EACC5C,IAAI,EAAE,KAAK;EACXK,IAAI,EAAE4B,wDAAK;EACXY,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE;AACP,CAAC,EACD;EACC9C,IAAI,EAAE,IAAI;EACVK,IAAI,EAAE+B,wDAAO;EACbS,KAAK,EAAER,wDAAO;EACdS,IAAI,EAAE;AACP,CAAC,EACD;EACC9C,IAAI,EAAE,IAAI;EACVK,IAAI,EAAE8B,wDAAM;EACZU,KAAK,EAAEP,wDAAS;EAChBQ,IAAI,EAAE;AACP,CAAC,EACD;EACC9C,IAAI,EAAE,IAAI;EACVK,IAAI,EAAE6B,yDAAM;EACZW,KAAK,EAAEP,wDAAS;EAChBQ,IAAI,EAAE;AACP,CAAC,EACD;EACC9C,IAAI,EAAE,QAAQ;EACdK,IAAI,EAAEkC,yDAAI;EACVM,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE1F,mDAAE,CAAC,gBAAgB,EAAE,cAAc;AAC1C,CAAC,CACD;;AAED;AACA;AACA;AACA,SAAS2F,aAAaA,CAACC,IAAI,EAAE;EAC5B,IAAIC,GAAG,GAAG,EAAE;EACZ,IAAID,IAAI,EAAEE,GAAG,EAAE;IACdD,GAAG,IAAID,IAAI,CAACE,GAAG;EAChB;EACA,IAAIF,IAAI,EAAE7J,MAAM,EAAE;IACjB8J,GAAG,IAAID,IAAI,CAAC7J,MAAM;EACnB;EACA,IAAI6J,IAAI,EAAEG,EAAE,EAAE;IACbF,GAAG,IAAK;AACV;AACA,MAAMD,IAAI,CAACG,EAAG;AACd,KAAK;EACJ;EACA,IAAIH,IAAI,EAAEI,EAAE,EAAE;IACbH,GAAG,IAAK;AACV;AACA,MAAMD,IAAI,CAACI,EAAG;AACd,KAAK;EACJ;EACA,IAAIJ,IAAI,EAAEK,EAAE,EAAE;IACbJ,GAAG,IAAK;AACV;AACA,MAAMD,IAAI,CAACK,EAAG;AACd,KAAK;EACJ;EAEA,OAAOJ,GAAG;AACX;AACA;AACA;AACA;AACA,MAAMnM,SAAS,GAAG,uBAAuB;AACzC6K,oEAAiB,CAACa,8CAAa,EAAE;EAChCvC,KAAK,EAAE7C,mDAAE,CAAC,aAAa,EAAE,cAAc,CAAC;EACxCkG,WAAW,EAAElG,mDAAE,CAAC,6BAA6B,EAAE,cAAc,CAAC;EAC9DiD,IAAI,EAAEtD,6CAAS;EACfgD,UAAU;EACVwC,IAAI,EAAE1L,IAAA,IAAgE;IAAA,IAA/D;MAAEqJ,UAAU;MAAEqD,aAAa;MAAEpM,UAAU;MAAEqM;IAAgB,CAAC,GAAA3M,IAAA;IAChE;IACA,MAAM;MAAEsJ,SAAS;MAAEsD,OAAO;MAAET,IAAI;MAAErL;IAAO,CAAC,GAAGuI,UAAU;IAEvD,MAAM,CAACjJ,UAAU,EAAEyM,aAAa,CAAC,GAAG9N,4DAAQ,CAAC,KAAK,CAAC;IACnD,MAAM,CAAC+N,WAAW,EAAEC,cAAc,CAAC,GAAGhO,4DAAQ,CAAC,EAAE,CAAC;IAElD,MAAMiO,KAAK,GAAG,KAAK,KAAK1D,SAAS;IACjC,MAAM2D,IAAI,GAAG,YAAY,KAAK3D,SAAS;IAEvC,IAAI4D,aAAa,GAAGhH,6CAAS;IAC7B,IAAIiH,aAAa,GAAG,MAAM;IAE1B,IAAIH,KAAK,EAAE;MACVE,aAAa,GAAG7G,2CAAO;MACvB8G,aAAa,GAAG,KAAK;IACtB,CAAC,MAAM,IAAIF,IAAI,EAAE;MAChBC,aAAa,GAAG5G,0CAAM;MACtB6G,aAAa,GAAG,IAAI;MACpB,IAAI,CAACpE,MAAM,EAAEoE,aAAa,IAAI,aAAa;IAC5C;IAEA,MAAMC,UAAU,GAAGpC,sEAAa,CAAC;MAAEpK,SAAS,EAAG,GAAEX,SAAU,KAAIqJ,SAAU;IAAE,CAAC,CAAC;IAE7E,MAAM+D,UAAU,GAAG7J,MAAM,CAACwF,YAAY,EAAEsE,OAAO,IAAIN,KAAK,IACvDvM,iEAAA,CAAAC,wDAAA,QACCD,iEAAA;MAAKG,SAAS,EAAC;IAAa,GAAEkM,WAAiB,CAAC,EAChDrM,iEAAA;MAAUG,SAAS,EAAC;IAAc,GAChCmL,OAAO,CAACwB,GAAG,CAAEC,MAAM,IAAK;MACxB,MAAMC,OAAO,GAAG,CAAC,EAAEb,OAAO,CAACY,MAAM,CAACrE,IAAI,CAAC,IAAI,EAAE,CAAC;MAC9C,OACC1I,iEAAA,CAACyK,yDAAM;QACNwC,SAAS,EAAEtN,UAAU,KAAKoN,MAAM,CAACrE,IAAK;QACtC,iBAAesE,OAAQ;QACvBE,OAAO,EAAEA,CAAA,KAAM;UACdd,aAAa,CAACW,MAAM,CAACrE,IAAI,CAAC;UAC1B4D,cAAc,CAACS,MAAM,CAACvB,IAAI,CAAC;QAC5B,CAAE;QACFrD,GAAG,EAAG,cAAa4E,MAAM,CAACrE,IAAK;MAAE,GAEjC1I,iEAAA,CAAC0K,yDAAI;QAAC3B,IAAI,EAAEgE,MAAM,CAAChE,IAAK;QAACrI,IAAI,EAAC,KAAK;QAACP,SAAS,EAAC;MAAc,CAAE,CAAC,EAC9D4M,MAAM,CAACxB,KAAK,IACZvL,iEAAA,CAAC0K,yDAAI;QAAC3B,IAAI,EAAEgE,MAAM,CAACxB,KAAM;QAAC7K,IAAI,EAAC,KAAK;QAACP,SAAS,EAAC;MAAa,CAAE,CAExD,CAAC;IAEX,CAAC,CACQ,CACT,CACF;IAED,IAAIc,OAAO;IACX,IAAIsL,KAAK,EAAE;MACVtL,OAAO,GAAIkM,OAAO,IAAK;QACtBlB,aAAa,CAAC;UAAEE,OAAO,EAAE;YAAE,GAAGA,OAAO;YAAE,CAACxM,UAAU,GAAGwN;UAAQ;QAAE,CAAC,CAAC;MAClE,CAAC;IACF,CAAC,MAAM;MACNlM,OAAO,GAAIkM,OAAO,IAAK;QACtBlB,aAAa,CAAC;UAAEP,IAAI,EAAEyB;QAAQ,CAAC,CAAC;MACjC,CAAC;IACF;IAEA,IAAIpN,WAAW;IACf,IAAIwM,KAAK,EAAE;MACVxM,WAAW,GAAGoM,OAAO,CAACxM,UAAU,CAAC,IAAI,EAAE;IACxC,CAAC,MAAM;MACNI,WAAW,GAAG2L,IAAI,IAAI,EAAE;IACzB;IAEA,MAAM0B,aAAa,GAAGb,KAAK,IAAId,aAAa,CAACU,OAAO,CAAC;IAErD,IAAIrM,SAAS,GAAG,IAAI;IACpB,IAAI,CAACwI,MAAM,EAAE;MACZ,IAAIkE,IAAI,IAAKD,KAAK,IAAI,QAAQ,KAAK5M,UAAW,EAAE;QAC/CG,SAAS,GAAG,KAAK;MAClB;IACD;IAEA,OACCE,iEAAA,QAAS2M,UAAU,EACjBS,aAAa,IAAIpN,iEAAA,CAACgK,oDAAa;MAAC5J,KAAK,EAAEgN;IAAc,CAAE,CAAC,EACzDpN,iEAAA;MAAKG,SAAS,EAAG,GAAEX,SAAU;IAAS,GACrCQ,iEAAA;MAAMG,SAAS,EAAC;IAAS,GACxBH,iEAAA,CAAC0K,yDAAI;MAAC3B,IAAI,EAAE0D,aAAc;MAACtM,SAAS,EAAC;IAAQ,CAAE,CAAC,EAChDH,iEAAA,eAAO0M,aAAoB,CACtB,CAAC,EACNE,UACG,CAAC,EACN5M,iEAAA,CAACwK,+DAAY;MACZ9J,IAAI,EAAE;QAAEL;MAAO,CAAE;MACjB+K,SAAS,EAAEA,SAAU;MACrBiC,MAAM,EAAE;QACP/N,GAAG,EAAE,KAAK;QACVgO,KAAK,EAAE,KAAK;QACZC,MAAM,EAAE,IAAI;QACZC,IAAI,EAAE,KAAK;QACXC,QAAQ,EAAE,KAAK;QACfC,WAAW,EAAE,KAAK;QAClBC,UAAU,EAAE,KAAK;QACjBC,OAAO,EAAE;MACV,CAAE;MACFC,aAAa,EAAE3B,eAAgB;MAC/B4B,YAAY,EAAEA,CAACC,KAAK,EAAEC,SAAS,EAAEC,GAAG,EAAEC,KAAK,KAAK;QAC/C;QACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CACzBD,IAAI,CAACE,GAAG,CAACC,QAAQ,CAAClO,MAAM,GAAG6N,KAAK,CAAC7N,MAAM,EAAE,EAAE,CAAC,EAAE+K,SAAS,CAAC,EACxDC,SACD,CAAC;QACDY,aAAa,CAAC;UAAE5L,MAAM,EAAE8N;QAAU,CAAC,CAAC;MACrC,CAAE;MACFK,UAAU,EAAE3O;IAAW,GAEvBG,iEAAA,CAACmL,2DAAM;MACN3L,SAAS,EAAEA,SAAU;MACrBE,IAAI,EAAEmJ,SAAU;MAChBpJ,KAAK,EAAEM,WAAY;MACnBH,QAAQ,EAAEqB,OAAQ;MAClBtB,UAAU,EAAEA,UAAW;MACvBE,UAAU,EAAEA,UAAW;MACvBC,SAAS,EAAEA;IAAU,CACrB,CACY,CACV,CAAC;EAER,CAAC;EAED2O,IAAI,EAAEC,KAAA,IAAoB;IAAA,IAAnB;MAAE9F;IAAW,CAAC,GAAA8F,KAAA;IACpB,MAAM;MAAE7F,SAAS;MAAE6C;IAAK,CAAC,GAAG9C,UAAU;IACtC,IAAI,KAAK,KAAKC,SAAS,EAAE;MACxB,OAAO,IAAI;IACZ;IACA,OAAO7I,iEAAA,CAACsK,uDAAO,QAAEoB,IAAc,CAAC;EACjC;AACD,CAAC,CAAC,C","sources":["webpack://arkhe-blocks/./node_modules/@wordpress/icons/build-module/icon/index.js","webpack://arkhe-blocks/./node_modules/@wordpress/icons/build-module/library/arrow-down.js","webpack://arkhe-blocks/./node_modules/@wordpress/icons/build-module/library/arrow-up.js","webpack://arkhe-blocks/./node_modules/@wordpress/icons/build-module/library/desktop.js","webpack://arkhe-blocks/./node_modules/@wordpress/icons/build-module/library/edit.js","webpack://arkhe-blocks/./node_modules/@wordpress/icons/build-module/library/globe.js","webpack://arkhe-blocks/./node_modules/@wordpress/icons/build-module/library/mobile.js","webpack://arkhe-blocks/./node_modules/@wordpress/icons/build-module/library/pencil.js","webpack://arkhe-blocks/./node_modules/@wordpress/icons/build-module/library/tablet.js","webpack://arkhe-blocks/./src/gutenberg/blocks/custom-code/components/Editor.js","webpack://arkhe-blocks/./src/gutenberg/blocks/custom-code/icon/index.js","webpack://arkhe-blocks/./src/gutenberg/blocks/custom-code/loader.js","webpack://arkhe-blocks/./src/gutenberg/blocks/custom-code/themes/index.js","webpack://arkhe-blocks/./src/gutenberg/blocks/custom-code/variations.js","webpack://arkhe-blocks/./src/gutenberg/components/ArkbProOnly.js","webpack://arkhe-blocks/./src/gutenberg/components/DynamicStyles.js","webpack://arkhe-blocks/./node_modules/emmet-monaco-es/dist/emmet-monaco.esm.js","webpack://arkhe-blocks/./node_modules/webfontloader/webfontloader.js","webpack://arkhe-blocks/./src/gutenberg/blocks/custom-code/themes/ sync ^\\.\\/.*\\.json$","webpack://arkhe-blocks/external window [\"wp\",\"blockEditor\"]","webpack://arkhe-blocks/external window [\"wp\",\"blocks\"]","webpack://arkhe-blocks/external window [\"wp\",\"components\"]","webpack://arkhe-blocks/external window [\"wp\",\"compose\"]","webpack://arkhe-blocks/external window [\"wp\",\"element\"]","webpack://arkhe-blocks/external window [\"wp\",\"i18n\"]","webpack://arkhe-blocks/external window [\"wp\",\"primitives\"]","webpack://arkhe-blocks/webpack/bootstrap","webpack://arkhe-blocks/webpack/runtime/compat get default export","webpack://arkhe-blocks/webpack/runtime/define property getters","webpack://arkhe-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://arkhe-blocks/webpack/runtime/make namespace object","webpack://arkhe-blocks/./src/gutenberg/blocks/custom-code/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { cloneElement } from '@wordpress/element';\n/** @typedef {{icon: JSX.Element, size?: number} & import('@wordpress/primitives').SVGProps} IconProps */\n\n/**\n * Return an SVG icon.\n *\n * @param {IconProps} props icon is the SVG component to render\n *                          size is a number specifiying the icon size in pixels\n *                          Other props will be passed to wrapped SVG component\n *\n * @return {JSX.Element}  Icon component\n */\n\nfunction Icon({\n  icon,\n  size = 24,\n  ...props\n}) {\n  return cloneElement(icon, {\n    width: size,\n    height: size,\n    ...props\n  });\n}\n\nexport default Icon;\n//# sourceMappingURL=index.js.map","import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst arrowDown = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"m16.5 13.5-3.7 3.7V4h-1.5v13.2l-3.8-3.7-1 1 5.5 5.6 5.5-5.6z\"\n}));\nexport default arrowDown;\n//# sourceMappingURL=arrow-down.js.map","import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst arrowUp = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M12 3.9 6.5 9.5l1 1 3.8-3.7V20h1.5V6.8l3.7 3.7 1-1z\"\n}));\nexport default arrowUp;\n//# sourceMappingURL=arrow-up.js.map","import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst desktop = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M20.5 16h-.7V8c0-1.1-.9-2-2-2H6.2c-1.1 0-2 .9-2 2v8h-.7c-.8 0-1.5.7-1.5 1.5h20c0-.8-.7-1.5-1.5-1.5zM5.7 8c0-.3.2-.5.5-.5h11.6c.3 0 .5.2.5.5v7.6H5.7V8z\"\n}));\nexport default desktop;\n//# sourceMappingURL=desktop.js.map","/**\n * Internal dependencies\n */\nimport { default as pencil } from './pencil';\nexport default pencil;\n//# sourceMappingURL=edit.js.map","import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst globe = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M12 3.3c-4.8 0-8.8 3.9-8.8 8.8 0 4.8 3.9 8.8 8.8 8.8 4.8 0 8.8-3.9 8.8-8.8s-4-8.8-8.8-8.8zm6.5 5.5h-2.6C15.4 7.3 14.8 6 14 5c2 .6 3.6 2 4.5 3.8zm.7 3.2c0 .6-.1 1.2-.2 1.8h-2.9c.1-.6.1-1.2.1-1.8s-.1-1.2-.1-1.8H19c.2.6.2 1.2.2 1.8zM12 18.7c-1-.7-1.8-1.9-2.3-3.5h4.6c-.5 1.6-1.3 2.9-2.3 3.5zm-2.6-4.9c-.1-.6-.1-1.1-.1-1.8 0-.6.1-1.2.1-1.8h5.2c.1.6.1 1.1.1 1.8s-.1 1.2-.1 1.8H9.4zM4.8 12c0-.6.1-1.2.2-1.8h2.9c-.1.6-.1 1.2-.1 1.8 0 .6.1 1.2.1 1.8H5c-.2-.6-.2-1.2-.2-1.8zM12 5.3c1 .7 1.8 1.9 2.3 3.5H9.7c.5-1.6 1.3-2.9 2.3-3.5zM10 5c-.8 1-1.4 2.3-1.8 3.8H5.5C6.4 7 8 5.6 10 5zM5.5 15.3h2.6c.4 1.5 1 2.8 1.8 3.7-1.8-.6-3.5-2-4.4-3.7zM14 19c.8-1 1.4-2.2 1.8-3.7h2.6C17.6 17 16 18.4 14 19z\"\n}));\nexport default globe;\n//# sourceMappingURL=globe.js.map","import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst mobile = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M15 4H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm.5 14c0 .3-.2.5-.5.5H9c-.3 0-.5-.2-.5-.5V6c0-.3.2-.5.5-.5h6c.3 0 .5.2.5.5v12zm-4.5-.5h2V16h-2v1.5z\"\n}));\nexport default mobile;\n//# sourceMappingURL=mobile.js.map","import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst pencil = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"m19 7-3-3-8.5 8.5-1 4 4-1L19 7Zm-7 11.5H5V20h7v-1.5Z\"\n}));\nexport default pencil;\n//# sourceMappingURL=pencil.js.map","import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst tablet = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M17 4H7c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm.5 14c0 .3-.2.5-.5.5H7c-.3 0-.5-.2-.5-.5V6c0-.3.2-.5.5-.5h10c.3 0 .5.2.5.5v12zm-7.5-.5h4V16h-4v1.5z\"\n}));\nexport default tablet;\n//# sourceMappingURL=tablet.js.map","/**\n * @others dependencies\n */\nimport webfontloader from 'webfontloader';\nimport { emmetCSS } from 'emmet-monaco-es';\n\n/**\n * @WordPress dependencies\n */\nimport { useEffect, useState, useRef } from '@wordpress/element';\nimport { Spinner } from '@wordpress/components';\nimport { useResizeObserver } from '@wordpress/compose';\n\n/**\n * @Internal dependencies\n */\nimport loader from '../loader';\nimport themes from '../themes';\nimport { ArkbProOnly } from '@components';\n\n/**\n * Monaco Editorを読み込むための設定\n */\nconst DEFAULT_OPTIONS = {\n\tfontFamily: 'Fira Code',\n\tfontSize: 14,\n\tlineHeight: 24,\n\twordWrap: 'on', // 折り返し（あり）\n\thover: false, // ホバーヒント無効\n\tminimap: {\n\t\t// ミニマップ無効\n\t\tenabled: false,\n\t},\n\tpadding: {\n\t\ttop: 10,\n\t},\n};\n\nexport default ({ blockName, value, lang, deviceMode, onChange, isSelected, availavle = true }) => {\n\tconst currentCode = value || '';\n\n\tif (!availavle) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<ArkbProOnly type='edit'>\n\t\t\t\t\t<div className={`${blockName}__container`} style={{ height: '100%' }}>\n\t\t\t\t\t\t<pre className={`${blockName}__preview`}>\n\t\t\t\t\t\t\t<code>{value}</code>\n\t\t\t\t\t\t</pre>\n\t\t\t\t\t</div>\n\t\t\t\t</ArkbProOnly>\n\t\t\t</>\n\t\t);\n\t}\n\n\t// 各種インスタンス\n\tconst containerRef = useRef(null); // Monaco Editorを生成する対象の要素\n\tconst monacoRef = useRef(null); // Monacoインスタンス\n\tconst editorRef = useRef(null); // Monaco Editorインスタンス\n\n\t// ブロックのサイズ変更を検知するObserver\n\tconst [resizeListener, size] = useResizeObserver();\n\n\t// Monacoインスタンスがマウントされたかどうか\n\tconst [isMonacoMounted, setIsMonacoMounted] = useState(false);\n\n\t// エディターインスタンスが準備できたかどうか\n\tconst [isEditorReady, setIsEditorReady] = useState(false);\n\n\t// onDidChangeModelContent の返り値\n\tconst [onChangeDisposable, setOnChangeDisposable] = useState(null);\n\n\t// コードの保存処理\n\tconst setCode = () => {\n\t\tconst newContent = editorRef.current.getValue();\n\t\tonChange(newContent);\n\t};\n\n\t// Monaco Editorの初期化処理\n\tuseEffect(() => {\n\t\tconst { defaultView } = containerRef.current.ownerDocument;\n\t\tconst cancelable = loader.init(defaultView);\n\n\t\tcancelable.then((monaco) => {\n\t\t\tif (monaco) {\n\t\t\t\t// Monacoインスタンスのマウント\n\t\t\t\tmonacoRef.current = monaco;\n\t\t\t\tsetIsMonacoMounted(true);\n\t\t\t}\n\t\t});\n\n\t\t// Monacoインスタンスがマウントされるのを待つ\n\t\tconst interval = setInterval(() => {\n\t\t\tconst { monaco } = defaultView;\n\t\t\tif (monaco?.editor && !isMonacoMounted && !isEditorReady) {\n\t\t\t\t// Monacoインスタンスマウント完了\n\t\t\t\tmonacoRef.current = monaco;\n\t\t\t\tclearInterval(interval);\n\t\t\t\tsetIsMonacoMounted(true);\n\t\t\t}\n\t\t}, 500);\n\n\t\t// ブロックが削除された時の処理\n\t\treturn () => {\n\t\t\tif (editorRef) {\n\t\t\t\t// エディターインスタンスの破棄\n\t\t\t\teditorRef.current?.getModel()?.dispose();\n\t\t\t\teditorRef.current?.dispose();\n\t\t\t} else {\n\t\t\t\t// Monaco Editorを読み込み中の場合はキャンセルする\n\t\t\t\tcancelable.cancel();\n\t\t\t}\n\t\t\tclearInterval(interval);\n\t\t};\n\t}, []);\n\n\t// エディターの生成\n\tuseEffect(() => {\n\t\t// ブロックが選択されたときに一度だけ実行する\n\t\tif (!isSelected || !isMonacoMounted || isEditorReady) return;\n\n\t\tconst { ownerDocument } = containerRef.current;\n\t\tconst { defaultView } = ownerDocument;\n\t\t// const { customCodeOptions } = window.arkbSettings;\n\n\t\tconst CURRENT_MONACO__EDITOR = monacoRef.current.editor;\n\n\t\t// オプションの設定\n\t\t// const options = customCodeOptions?.options || {};\n\n\t\t// editorRef.current セット\n\t\teditorRef.current = CURRENT_MONACO__EDITOR.create(containerRef.current, {\n\t\t\t...DEFAULT_OPTIONS,\n\t\t\t// ...options,\n\t\t});\n\n\t\tconst CURRENT_EDITOR = editorRef.current;\n\n\t\t// 言語の設定\n\t\tCURRENT_MONACO__EDITOR.setModelLanguage(CURRENT_EDITOR?.getModel(), lang);\n\n\t\t// テーマの反映\n\t\tconst theme = 'vs-dark'; //customCodeOptions.settings.theme || 'vs-dark';\n\n\t\tif ('vs-dark' === theme) {\n\t\t\t// vs-darkの場合はsetThemeで指定するだけ\n\t\t\tCURRENT_MONACO__EDITOR.setTheme(theme);\n\t\t} else {\n\t\t\t// vs-dark以外の場合は、テーマを定義する\n\t\t\tconst targetTheme = themes.find((data) => theme === data.value);\n\t\t\tif (targetTheme) {\n\t\t\t\tCURRENT_MONACO__EDITOR.defineTheme(targetTheme.value, targetTheme.data);\n\t\t\t\tCURRENT_MONACO__EDITOR.setTheme(targetTheme.value);\n\t\t\t} else {\n\t\t\t\tCURRENT_MONACO__EDITOR.setTheme('vs-dark');\n\t\t\t}\n\t\t}\n\n\t\t// コードの変更を検知してattributesに保存\n\t\tconst disposable = CURRENT_EDITOR?.onDidChangeModelContent(() => {\n\t\t\tsetCode();\n\t\t});\n\t\tsetOnChangeDisposable(disposable);\n\n\t\t// Webフォントの読み込み\n\t\tconst { fontFamilies } = window.arkbBlockVars;\n\t\tif (!fontFamilies) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log('not found fontFamilies !');\n\t\t\treturn;\n\t\t}\n\n\t\tconst fontFamily = 'Fira Code'; // customCodeOptions.options.fontFamily || 'Fira Code';\n\t\tconst font = fontFamilies.find((data) => fontFamily === data.val);\n\n\t\tif (!font) return;\n\n\t\tconst webfontConfig = {\n\t\t\ttimeout: 5000,\n\t\t\tcustom: {\n\t\t\t\tfamilies: [font.val],\n\t\t\t},\n\t\t\t// Webフォントのズレを防ぐために再調整する\n\t\t\tactive: () => {\n\t\t\t\tCURRENT_MONACO__EDITOR.remeasureFonts();\n\t\t\t},\n\t\t\tinactive: () => {\n\t\t\t\tCURRENT_MONACO__EDITOR.remeasureFonts();\n\t\t\t},\n\t\t\tcontext: defaultView,\n\t\t};\n\n\t\tconst link = ownerDocument.querySelector(`link[href=\"${font.stylesheet}\"]`);\n\t\tif (!link) {\n\t\t\twebfontConfig.custom.urls = [font.stylesheet];\n\t\t}\n\n\t\twebfontloader.load(webfontConfig);\n\n\t\t// Emmet(CSS)の適用\n\t\tif (lang === 'css' && !defaultView.arkbEmmetIsInitialized) {\n\t\t\tdefaultView.arkbEmmetIsInitialized = true;\n\t\t\temmetCSS(monacoRef.current);\n\t\t}\n\n\t\t// Ctrl(Cmd)+Xでブロックが消えてしまうのを防ぐ\n\t\tCURRENT_EDITOR.addCommand(\n\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\tmonacoRef.current.KeyMod.CtrlCmd | monacoRef.current.KeyCode.KEY_X,\n\t\t\t() => {\n\t\t\t\tconst selection = CURRENT_EDITOR.getSelection();\n\t\t\t\tconst lineNumber = CURRENT_EDITOR.getPosition().lineNumber;\n\t\t\t\t// 範囲選択されていないかどうか\n\t\t\t\tconst isEmptySelection =\n\t\t\t\t\tselection.startLineNumber === selection.endLineNumber &&\n\t\t\t\t\tselection.startColumn === selection.endColumn;\n\n\t\t\t\t// 範囲選択していない場合は、現在行をカットする\n\t\t\t\tif (isEmptySelection) {\n\t\t\t\t\tCURRENT_EDITOR.setSelection(\n\t\t\t\t\t\tnew monacoRef.current.Selection(lineNumber, 1, lineNumber + 1, 1)\n\t\t\t\t\t);\n\t\t\t\t\townerDocument.execCommand('cut');\n\t\t\t\t}\n\n\t\t\t\townerDocument.execCommand('cut');\n\t\t\t}\n\t\t);\n\n\t\t// Ctrl(Cmd)+Cでブロックが消えてしまうのを防ぐ\n\t\tCURRENT_EDITOR.addCommand(\n\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\tmonacoRef.current.KeyMod.CtrlCmd | monacoRef.current.KeyCode.KEY_C,\n\t\t\t() => {\n\t\t\t\tconst selection = CURRENT_EDITOR.getSelection();\n\t\t\t\tconst lineNumber = CURRENT_EDITOR.getPosition().lineNumber;\n\n\t\t\t\t// 範囲選択されていないかどうか\n\t\t\t\tconst isEmptySelection =\n\t\t\t\t\tselection.startLineNumber === selection.endLineNumber &&\n\t\t\t\t\tselection.startColumn === selection.endColumn;\n\n\t\t\t\tif (isEmptySelection) {\n\t\t\t\t\t// 範囲選択していない場合は、現在行をコピーする\n\t\t\t\t\tCURRENT_EDITOR.setSelection(\n\t\t\t\t\t\tnew monacoRef.current.Selection(lineNumber, 1, lineNumber + 1, 1)\n\t\t\t\t\t);\n\t\t\t\t\townerDocument.execCommand('copy');\n\t\t\t\t}\n\t\t\t\townerDocument.execCommand('copy');\n\t\t\t}\n\t\t);\n\n\t\tsetIsEditorReady(true);\n\n\t\t// コードの初期セット\n\t\tCURRENT_EDITOR.getModel().setValue(currentCode);\n\t}, [isSelected, isMonacoMounted, isEditorReady]);\n\n\t// attributesをコードエディタに反映する\n\t// ↓ setValue() ではなくexecuteEdits() にしていたのは何か訳あり？\n\t// useEffect(() => {\n\t// \tif (!isEditorReady) return;\n\t// \tif (currentCode !== editorRef.current.getValue()) {\n\t// \t\teditorRef.current.executeEdits('', [\n\t// \t\t\t{\n\t// \t\t\t\trange: editorRef.current?.getModel().getFullModelRange(),\n\t// \t\t\t\ttext: currentCode,\n\t// \t\t\t\tforceMoveMarkers: true,\n\t// \t\t\t},\n\t// \t\t]);\n\t// \t\teditorRef.current.pushUndoStop();\n\t// \t}\n\t// }, [isEditorReady]);\n\n\t// モードチェンジ時の処理\n\tuseEffect(() => {\n\t\tif (!isEditorReady) return;\n\n\t\t// コード保存処理を更新\n\t\tonChangeDisposable?.dispose(); // 定義済みの処理を削除\n\t\tconst disposable = editorRef.current.onDidChangeModelContent(() => {\n\t\t\tsetCode();\n\t\t});\n\t\tsetOnChangeDisposable(disposable);\n\n\t\t// チェンジ後のコードセット\n\t\teditorRef.current.getModel().setValue(currentCode);\n\t}, [deviceMode]);\n\n\t// ブロックの高さの変更をエディターに同期する\n\tuseEffect(() => {\n\t\tconst { width, height } = size;\n\t\tif (isEditorReady && width && height) {\n\t\t\teditorRef.current.layout();\n\t\t}\n\t}, [size, isEditorReady]);\n\n\treturn (\n\t\t<>\n\t\t\t{isSelected && availavle && !isEditorReady && (\n\t\t\t\t<div className={`${blockName}__loadingLayer`}>\n\t\t\t\t\t<Spinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{/* {isSelected && !availavle && <ArkbProOnly></ArkbProOnly>} */}\n\t\t\t{resizeListener}\n\t\t\t<div\n\t\t\t\tref={containerRef}\n\t\t\t\tclassName={`${blockName}__container`}\n\t\t\t\tstyle={{ height: '100%' }}\n\t\t\t>\n\t\t\t\t{!isEditorReady && (\n\t\t\t\t\t<pre className={`${blockName}__preview`}>\n\t\t\t\t\t\t<code>{value}</code>\n\t\t\t\t\t</pre>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","export const blockIcon = (\n\t<svg viewBox='0 0 56 56'>\n\t\t<path d='M46.9,24.2L37.7,15l-2.4,2.4l9.2,9.2c0.2,0.2,0.2,0.6,0,0.9l-9.2,9.2l2.4,2.4l9.2-9.2C48.4,28.1,48.4,25.7,46.9,24.2z M11.3,26.6l9.2-9.2l-2.1-2.1l-9.2,9.2c-1.5,1.5-1.5,3.9,0,5.4l9.2,9.2l2.4-2.4l-9.2-9.2C11.1,27.2,11.1,26.8,11.3,26.6z' />\n\t</svg>\n);\n\nexport const cssIcon = (\n\t<svg viewBox='0 0 56 56'>\n\t\t<path\n\t\t\td='M46.9,17.2L37.7,8l-2.4,2.4l9.2,9.2c0.2,0.2,0.2,0.6,0,0.9l-9.2,9.2l2.4,2.4l9.2-9.2C48.4,21.1,48.4,18.7,46.9,17.2z\n\t\t M11.2,19.6l9.2-9.2l-2.1-2.1l-9.2,9.2c-1.5,1.5-1.5,3.9,0,5.4l9.2,9.2l2.4-2.4l-9.2-9.2C11,20.2,11,19.8,11.2,19.6z'\n\t\t/>\n\t\t<g>\n\t\t\t<path\n\t\t\t\td='M20.1,47.1c-0.7,0.8-1.4,1.1-2.3,1.1c-2,0-3.3-1.6-3.3-4.3c0-2.6,1.3-4.2,3.3-4.2c0.8,0,1.5,0.3,2,0.9l0.2,0.2l1.1-1.3\n\t\t\tL21,39.5C20.6,39,19.6,38,17.8,38c-3.1,0-5.2,2.4-5.2,6c0,3.6,2,6,5.1,6c1.5,0,2.6-0.6,3.6-1.7l0.1-0.2l-1.1-1.2L20.1,47.1z'\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td='M29.6,43.4l-1.6-0.7l-0.1,0c-0.9-0.4-1.7-0.7-1.7-1.6c0-0.8,0.7-1.4,1.9-1.4c1,0,1.8,0.3,2.6,1l0.2,0.2l1.1-1.3l-0.2-0.2\n\t\t\tc-0.9-0.9-2.2-1.4-3.6-1.4c-2.3,0-3.9,1.3-3.9,3.2c0,1.4,0.9,2.4,2.6,3.1l1.7,0.7c1.1,0.5,1.7,0.8,1.7,1.7c0,0.9-0.8,1.5-2.2,1.5\n\t\t\tc-1.1,0-2.2-0.5-3.1-1.3l-0.2-0.2l-1.2,1.4l0.2,0.2c1.1,1.1,2.6,1.7,4.2,1.7c2.5,0,4.2-1.4,4.2-3.4C32.2,44.7,30.9,43.9,29.6,43.4\n\t\t\tz'\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td='M40.8,43.4l-1.6-0.7l-0.1,0c-0.9-0.4-1.7-0.7-1.7-1.6c0-0.8,0.7-1.4,1.9-1.4c1,0,1.8,0.3,2.6,1l0.2,0.2l1.1-1.3L43,39.5\n\t\t\tC42,38.6,40.7,38,39.4,38c-2.3,0-3.9,1.3-3.9,3.2c0,1.4,0.9,2.4,2.6,3.1l1.7,0.7c1.1,0.5,1.7,0.8,1.7,1.7c0,0.9-0.9,1.5-2.2,1.5\n\t\t\tc-1.1,0-2.2-0.5-3.1-1.3L36,46.8l-1.2,1.4l0.2,0.2c1.1,1.1,2.6,1.7,4.2,1.7c2.5,0,4.2-1.4,4.2-3.4C43.4,44.7,42.1,43.9,40.8,43.4z\n\t\t\t'\n\t\t\t/>\n\t\t</g>\n\t</svg>\n);\n\nexport const jsIcon = (\n\t<svg viewBox='0 0 56 56'>\n\t\t<g>\n\t\t\t<path\n\t\t\t\td='M46.9,17.2L37.7,8l-2.4,2.4l9.2,9.2c0.2,0.2,0.2,0.6,0,0.9l-9.2,9.2l2.4,2.4l9.2-9.2C48.4,21.1,48.4,18.7,46.9,17.2z\n\t\t M11.2,19.6l9.2-9.2l-2.1-2.1l-9.2,9.2c-1.5,1.5-1.5,3.9,0,5.4l9.2,9.2l2.4-2.4l-9.2-9.2C11,20.2,11,19.8,11.2,19.6z'\n\t\t\t/>\n\t\t</g>\n\t\t<g>\n\t\t\t<path\n\t\t\t\td='M19.3,39.9h4.7v6c0,1.7-0.6,2.4-2.1,2.4c-0.8,0-1.6-0.5-2.2-1.4l-0.2-0.3l-1.2,1.2l0.1,0.2c0.7,1.2,2,2,3.5,2\n\t\tc2.5,0,3.9-1.4,3.9-4v-7.8h-6.5V39.9z'\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td='M35.1,43.4l-1.6-0.7l-0.1,0c-0.9-0.4-1.7-0.7-1.7-1.6c0-0.8,0.8-1.4,1.9-1.4c1,0,1.8,0.3,2.6,1l0.2,0.2l1-1.3l-0.2-0.2\n\t\tC36.4,38.5,35,38,33.7,38c-2.2,0-3.9,1.3-3.9,3.2c0,1.4,0.9,2.4,2.6,3.1L34,45c1.2,0.5,1.8,0.8,1.8,1.8c0,0.9-0.9,1.5-2.2,1.5\n\t\tc-1.1,0-2.2-0.5-3.1-1.3l-0.2-0.2l-1.2,1.3l0.2,0.2c1.1,1.1,2.6,1.7,4.2,1.7c2.5,0,4.2-1.4,4.2-3.4C37.7,44.7,36.4,43.9,35.1,43.4z\n\t\t'\n\t\t\t/>\n\t\t</g>\n\t</svg>\n);\n","/**\n * Monaco Editor ローダー\n * see: https://github.com/suren-atoyan/monaco-loader\n */\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Monaco Editorを読み込むための設定\n */\nconst loaderConfig = {\n\tpaths: {\n\t\tvs: 'https://cdn.jsdelivr.net/npm/monaco-editor@0.28.1/min/vs',\n\t},\n};\n\n// Promiseをキャンセル可能にする\n// https://reactjs.org/blog/2015/12/16/ismounted-antipattern.html\nfunction makeCancelable(promise) {\n\tlet hasCanceled_ = false;\n\tconst canceledMessage = {\n\t\ttype: 'cancelation',\n\t\tmsg: __('Operation is cancelled.', 'arkhe-blocks'),\n\t};\n\tconst wrappedPromise = new Promise((resolve, reject) => {\n\t\tpromise.then((val) => (hasCanceled_ ? reject(canceledMessage) : resolve(val)));\n\t\tpromise.catch(reject);\n\t});\n\treturn (wrappedPromise.cancel = () => (hasCanceled_ = true)), wrappedPromise;\n}\n\n// Monaco Editorの初期化処理\nfunction init(targetWindow = window) {\n\t// Monaco Editorを読み込むPromise\n\tconst promise = new Promise((resolve, reject) => {\n\t\t// 一定時間経過した場合は、読み込み失敗と見なす\n\t\tconst timeout = setTimeout(() => {\n\t\t\treturn reject({\n\t\t\t\ttype: 'timeout',\n\t\t\t\tmsg: __('Editor loading timed out.', 'arkhe-blocks'),\n\t\t\t});\n\t\t}, 5 * 10000);\n\n\t\t// 現在のwindowオブジェクトで既に初期化済の場合は、解決したPromiseを返す\n\t\tif (targetWindow.arkbMonacoIsInitialized) {\n\t\t\tclearTimeout(timeout);\n\t\t\treturn resolve();\n\t\t}\n\n\t\t// 現在のwindowオブジェクトにエディターインスタンスがある場合は、解決したPromiseを返す\n\t\tif (targetWindow?.monaco?.editor) {\n\t\t\tclearTimeout(timeout);\n\t\t\treturn resolve(targetWindow.monaco);\n\t\t}\n\n\t\t// Monaco Editorのスクリプト読み込み\n\t\tconst script = targetWindow.document.createElement('script');\n\t\tscript.src = `${loaderConfig.paths.vs}/loader.js`;\n\n\t\tscript.onload = () => {\n\t\t\tconst require = targetWindow.require;\n\t\t\trequire.config(loaderConfig);\n\t\t\trequire(['vs/editor/editor.main'], (monaco) => {\n\t\t\t\tclearTimeout(timeout);\n\t\t\t\treturn resolve(monaco);\n\t\t\t});\n\t\t};\n\n\t\t// Monaco Editorのスクリプト読み込みに失敗した場合\n\t\tscript.onerror = () => {\n\t\t\tclearTimeout(timeout);\n\t\t\treturn reject({\n\t\t\t\ttype: 'scripterror',\n\t\t\t\tmsg: __('Failed to load the editor script.', 'arkhe-blocks'),\n\t\t\t});\n\t\t};\n\n\t\ttargetWindow.document.body.appendChild(script);\n\t\ttargetWindow.arkbMonacoIsInitialized = true;\n\t});\n\n\t// Promiseをキャンセル可能にする\n\treturn makeCancelable(promise);\n}\n\nexport default { init };\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\nconst themeList = {\n\tdawn: __('Dawn', 'arkhe-css-editor'),\n\tmonokai: __('Monokai', 'arkhe-css-editor'),\n\ttomorrow: __('Tomorrow', 'arkhe-css-editor'),\n};\n\nconst themes = [];\n\nObject.keys(themeList).forEach(function (key) {\n\tthemes.push({\n\t\tlabel: themeList[key],\n\t\tvalue: key,\n\t\tdata: require(`./${key}.json`),\n\t});\n});\n\nexport default themes;\n","import { __ } from '@wordpress/i18n';\nimport { cssIcon, jsIcon } from './icon';\n\nconst IS_PRO = !!window.arkbSettings?.pfkey || false;\n\n/**\n * バリエーション\n */\nconst variations = [\n\t{\n\t\tname: 'css',\n\t\ttitle: __('Custom CSS', 'arkhe-blocks') + ' (β)',\n\t\tattributes: { variation: 'css' },\n\t\tkeywords: ['code', 'css', 'style'],\n\t\ticon: cssIcon,\n\t\tscope: ['inserter'],\n\t\tisDefault: true,\n\t\tisActive: (blockAttributes, variationAttributes) => {\n\t\t\treturn blockAttributes.variation === variationAttributes.variation;\n\t\t},\n\t},\n];\n\nif (IS_PRO) {\n\tvariations.push({\n\t\tname: 'js',\n\t\ttitle: __('Custom JS', 'arkhe-blocks') + ' (β)',\n\t\tattributes: { variation: 'javascript' },\n\t\tkeywords: ['code', 'js', 'javascript'],\n\t\ticon: jsIcon,\n\t\tscope: ['inserter'],\n\t\tisActive: (blockAttributes, variationAttributes) => {\n\t\t\treturn blockAttributes.variation === variationAttributes.variation;\n\t\t},\n\t});\n}\nexport default variations;\n","import { __ } from '@wordpress/i18n';\nconst IS_PRO = !!window.arkbSettings?.pfkey || false;\n\nconst onlyProMessage = (\n\t<p className='arkb-proOnlyArea__message'>\n\t\t{__('This setting is only available in the PRO version.', 'arkhe-blocks')}\n\t\t<a\n\t\t\tclassName='arkb-proOnlyArea__link'\n\t\t\thref='https://arkhe-theme.com/ja/product/arkhe-blocks-pro/'\n\t\t\ttarget='_blank'\n\t\t\trel='noreferrer noopener'\n\t\t>\n\t\t\tGo Pro\n\t\t</a>\n\t</p>\n);\n\nconst onlyProEditMessage = (\n\t<p className='arkb-proOnlyArea__message'>\n\t\t{__('This area can only be edited in the PRO version.', 'arkhe-blocks')}\n\t\t<a\n\t\t\tclassName='arkb-proOnlyArea__link'\n\t\t\thref='https://arkhe-theme.com/ja/product/arkhe-blocks-pro/'\n\t\t\ttarget='_blank'\n\t\t\trel='noreferrer noopener'\n\t\t>\n\t\t\tGo Pro\n\t\t</a>\n\t</p>\n);\n/**\n * ArkbProOnly\n */\nexport default ({ type = '', passCheck = false, children }) => {\n\tif (passCheck) return children;\n\n\treturn (\n\t\t<>\n\t\t\t{!IS_PRO ? (\n\t\t\t\t<div className='arkb-proOnlyArea'>\n\t\t\t\t\t{'edit' === type ? onlyProEditMessage : onlyProMessage}\n\t\t\t\t\t<div className='arkb-proOnlyArea__preview'>{children}</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\tchildren\n\t\t\t)}\n\t\t</>\n\t);\n};\n","/**\n * WordPress dependencies\n */\nimport { BlockList } from '@wordpress/block-editor';\nimport { useContext, createPortal, Platform } from '@wordpress/element';\n\nexport default function DynamicStyles({ style }) {\n\tif (!Platform.isWeb) return null;\n\n\tconst styleElement =\n\t\ttypeof BlockList.__unstableElementContext !== 'undefined'\n\t\t\t? useContext(BlockList.__unstableElementContext)\n\t\t\t: document.querySelector('head');\n\n\tconst TheStyle = () => {\n\t\treturn <style>{style}</style>;\n\t};\n\n\treturn style && styleElement ? createPortal(<TheStyle />, styleElement) : null;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\n        var arguments$1 = arguments;\n\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments$1[i];\r\n            for (var p in s) { if (Object.prototype.hasOwnProperty.call(s, p)) { t[p] = s[p]; } }\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\n/**\n * A streaming, character code-based string reader\n */\nvar StreamReader = function StreamReader(string, start, end) {\n\tif (end == null && typeof string === 'string') {\n\t\tend = string.length;\n\t}\n\n\tthis.string = string;\n\tthis.pos = this.start = start || 0;\n\tthis.end = end;\n};\n\n/**\n\t * Returns true only if the stream is at the end of the file.\n\t * @returns {Boolean}\n\t */\nStreamReader.prototype.eof = function eof () {\n\treturn this.pos >= this.end;\n};\n\n/**\n\t * Creates a new stream instance which is limited to given `start` and `end`\n\t * range. E.g. its `eof()` method will look at `end` property, not actual\n\t * stream end\n\t * @param  {Point} start\n\t * @param  {Point} end\n\t * @return {StreamReader}\n\t */\nStreamReader.prototype.limit = function limit (start, end) {\n\treturn new this.constructor(this.string, start, end);\n};\n\n/**\n\t * Returns the next character code in the stream without advancing it.\n\t * Will return NaN at the end of the file.\n\t * @returns {Number}\n\t */\nStreamReader.prototype.peek = function peek () {\n\treturn this.string.charCodeAt(this.pos);\n};\n\n/**\n\t * Returns the next character in the stream and advances it.\n\t * Also returns <code>undefined</code> when no more characters are available.\n\t * @returns {Number}\n\t */\nStreamReader.prototype.next = function next () {\n\tif (this.pos < this.string.length) {\n\t\treturn this.string.charCodeAt(this.pos++);\n\t}\n};\n\n/**\n\t * `match` can be a character code or a function that takes a character code\n\t * and returns a boolean. If the next character in the stream 'matches'\n\t * the given argument, it is consumed and returned.\n\t * Otherwise, `false` is returned.\n\t * @param {Number|Function} match\n\t * @returns {Boolean}\n\t */\nStreamReader.prototype.eat = function eat (match) {\n\tvar ch = this.peek();\n\tvar ok = typeof match === 'function' ? match(ch) : ch === match;\n\n\tif (ok) {\n\t\tthis.next();\n\t}\n\n\treturn ok;\n};\n\n/**\n\t * Repeatedly calls <code>eat</code> with the given argument, until it\n\t * fails. Returns <code>true</code> if any characters were eaten.\n\t * @param {Object} match\n\t * @returns {Boolean}\n\t */\nStreamReader.prototype.eatWhile = function eatWhile (match) {\n\tvar start = this.pos;\n\twhile (!this.eof() && this.eat(match)) {}\n\treturn this.pos !== start;\n};\n\n/**\n\t * Backs up the stream n characters. Backing it up further than the\n\t * start of the current token will cause things to break, so be careful.\n\t * @param {Number} n\n\t */\nStreamReader.prototype.backUp = function backUp (n) {\n\tthis.pos -= (n || 1);\n};\n\n/**\n\t * Get the string between the start of the current token and the\n\t * current stream position.\n\t * @returns {String}\n\t */\nStreamReader.prototype.current = function current () {\n\treturn this.substring(this.start, this.pos);\n};\n\n/**\n\t * Returns substring for given range\n\t * @param  {Number} start\n\t * @param  {Number} [end]\n\t * @return {String}\n\t */\nStreamReader.prototype.substring = function substring (start, end) {\n\treturn this.string.slice(start, end);\n};\n\n/**\n\t * Creates error object with current stream state\n\t * @param {String} message\n\t * @return {Error}\n\t */\nStreamReader.prototype.error = function error (message) {\n\tvar err = new Error((message + \" at char \" + (this.pos + 1)));\n\terr.originalMessage = message;\n\terr.pos = this.pos;\n\terr.string = this.string;\n\treturn err;\n};\n\n/**\n * Methods for consuming quoted values\n */\n\nvar SINGLE_QUOTE = 39; // '\nvar DOUBLE_QUOTE = 34; // \"\n\nvar defaultOptions$4 = {\n\tescape: 92,   // \\ character\n\tthrows: false\n};\n\n/**\n * Consumes 'single' or \"double\"-quoted string from given string, if possible\n * @param  {StreamReader} stream\n * @param  {Number}  options.escape A character code of quote-escape symbol\n * @param  {Boolean} options.throws Throw error if quotes string can’t be properly consumed\n * @return {Boolean} `true` if quoted string was consumed. The contents\n *                   of quoted string will be availabe as `stream.current()`\n */\nvar eatQuoted = function(stream, options) {\n\toptions = options ? Object.assign({}, defaultOptions$4, options) : defaultOptions$4;\n\tvar start = stream.pos;\n\tvar quote = stream.peek();\n\n\tif (stream.eat(isQuote)) {\n\t\twhile (!stream.eof()) {\n\t\t\tswitch (stream.next()) {\n\t\t\t\tcase quote:\n\t\t\t\t\tstream.start = start;\n\t\t\t\t\treturn true;\n\n\t\t\t\tcase options.escape:\n\t\t\t\t\tstream.next();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If we’re here then stream wasn’t properly consumed.\n\t\t// Revert stream and decide what to do\n\t\tstream.pos = start;\n\n\t\tif (options.throws) {\n\t\t\tthrow stream.error('Unable to consume quoted string');\n\t\t}\n\t}\n\n\treturn false;\n};\n\nfunction isQuote(code) {\n\treturn code === SINGLE_QUOTE || code === DOUBLE_QUOTE;\n}\n\n/**\n * Check if given code is a number\n * @param  {Number}  code\n * @return {Boolean}\n */\nfunction isNumber(code) {\n\treturn code > 47 && code < 58;\n}\n\n/**\n * Check if given character code is alpha code (letter through A to Z)\n * @param  {Number}  code\n * @param  {Number}  [from]\n * @param  {Number}  [to]\n * @return {Boolean}\n */\nfunction isAlpha(code, from, to) {\n\tfrom = from || 65; // A\n\tto   = to   || 90; // Z\n\tcode &= ~32; // quick hack to convert any char code to uppercase char code\n\n\treturn code >= from && code <= to;\n}\n\n/**\n * Check if given character code is alpha-numeric (letter through A to Z or number)\n * @param  {Number}  code\n * @return {Boolean}\n */\nfunction isAlphaNumeric(code) {\n\treturn isNumber(code) || isAlpha(code);\n}\n\nfunction isWhiteSpace(code) {\n\treturn code === 32   /* space */\n\t\t|| code === 9    /* tab */\n\t\t|| code === 160; /* non-breaking space */\n}\n\n/**\n * Check if given character code is a space\n * @param  {Number}  code\n * @return {Boolean}\n */\nfunction isSpace(code) {\n\treturn isWhiteSpace(code)\n\t\t|| code === 10  /* LF */\n\t\t|| code === 13; /* CR */\n}\n\nvar DOLLAR$2      = 36;  // $\nvar COLON$1       = 58;  // :\nvar ESCAPE$2      = 92;  // \\\nvar OPEN_BRACE  = 123; // {\nvar CLOSE_BRACE = 125; // }\n\n/**\n * Finds fields in given string and returns object with field-less string\n * and array of fields found\n * @param  {String} string\n * @return {Object}\n */\nfunction parse$2(string) {\n\tvar stream = new StreamReader(string);\n\tvar fields = [];\n\tvar cleanString = '', offset = 0, pos = 0;\n\tvar code, field;\n\n\twhile (!stream.eof()) {\n\t\tcode = stream.peek();\n\t\tpos = stream.pos;\n\n\t\tif (code === ESCAPE$2) {\n\t\t\tstream.next();\n\t\t\tstream.next();\n\t\t} else if (field = consumeField(stream, cleanString.length + pos - offset)) {\n\t\t\tfields.push(field);\n\t\t\tcleanString += stream.string.slice(offset, pos) + field.placeholder;\n\t\t\toffset = stream.pos;\n\t\t} else {\n\t\t\tstream.next();\n\t\t}\n\t}\n\n\treturn new FieldString(cleanString + stream.string.slice(offset), fields);\n}\n\n/**\n * Marks given `string` with `fields`: wraps each field range with\n * `${index:placeholder}` (by default) or any other token produced by `token`\n * function, if provided\n * @param  {String} string String to mark\n * @param  {Array} fields Array of field descriptor. A field descriptor is a\n * `{index, location, length}` array. It is important that fields in array\n * must be ordered by their location in string: some fields my refer the same\n * location so they must appear in order that user expects.\n * @param  {Function} [token] Function that generates field token. This function\n * received two arguments: `index` and `placeholder` and should return string\n * @return {String}  String with marked fields\n */\nfunction mark(string, fields, token) {\n\ttoken = token || createToken;\n\n\t// order fields by their location and appearence\n\t// NB field ranges should not overlap! (not supported yet)\n\tvar ordered = fields\n\t.map(function (field, order) { return ({order: order, field: field, end: field.location + field.length}); })\n\t.sort(function (a, b) { return (a.end - b.end) || (a.order - b.order); });\n\n\t// mark ranges in string\n\tvar offset = 0;\n\tvar result = ordered.map(function (item) {\n\t\tvar placeholder = string.substr(item.field.location, item.field.length);\n\t\tvar prefix = string.slice(offset, item.field.location);\n\t\toffset = item.end;\n\t\treturn prefix + token(item.field.index, placeholder);\n\t});\n\n\treturn result.join('') + string.slice(offset);\n}\n\n/**\n * Creates field token for string\n * @param  {Number} index       Field index\n * @param  {String} placeholder Field placeholder, could be empty string\n * @return {String}\n */\nfunction createToken(index, placeholder) {\n\treturn placeholder ? (\"${\" + index + \":\" + placeholder + \"}\") : (\"${\" + index + \"}\");\n}\n\n/**\n * Consumes field from current stream position: it can be an `$index` or\n * or `${index}` or `${index:placeholder}`\n * @param  {StreamReader} stream\n * @param  {Number}       location Field location in *clean* string\n * @return {Field} Object with `index` and `placeholder` properties if\n * field was successfully consumed, `null` otherwise\n */\nfunction consumeField(stream, location) {\n\tvar start = stream.pos;\n\n\tif (stream.eat(DOLLAR$2)) {\n\t\t// Possible start of field\n\t\tvar index = consumeIndex(stream);\n\t\tvar placeholder = '';\n\n\t\t// consumed $index placeholder\n\t\tif (index != null) {\n\t\t\treturn new Field(index, placeholder, location);\n\t\t}\n\n\t\tif (stream.eat(OPEN_BRACE)) {\n\t\t\tindex = consumeIndex(stream);\n\t\t\tif (index != null) {\n\t\t\t\tif (stream.eat(COLON$1)) {\n\t\t\t\t\tplaceholder = consumePlaceholder(stream);\n\t\t\t\t}\n\n\t\t\t\tif (stream.eat(CLOSE_BRACE)) {\n\t\t\t\t\treturn new Field(index, placeholder, location);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// If we reached here then there’s no valid field here, revert\n\t// back to starting position\n\tstream.pos = start;\n}\n\n/**\n * Consumes a placeholder: value right after `:` in field. Could be empty\n * @param  {StreamReader} stream\n * @return {String}\n */\nfunction consumePlaceholder(stream) {\n\tvar code;\n\tvar stack = [];\n\tstream.start = stream.pos;\n\n\twhile (!stream.eof()) {\n\t\tcode = stream.peek();\n\n\t\tif (code === OPEN_BRACE) {\n\t\t\tstack.push(stream.pos);\n\t\t} else if (code === CLOSE_BRACE) {\n\t\t\tif (!stack.length) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tstack.pop();\n\t\t}\n\t\tstream.next();\n\t}\n\n\tif (stack.length) {\n\t\tthrow stream.error('Unable to find matching \"}\" for curly brace at ' + stack.pop());\n\t}\n\n\treturn stream.current();\n}\n\n/**\n * Consumes integer from current stream position\n * @param  {StreamReader} stream\n * @return {Number}\n */\nfunction consumeIndex(stream) {\n\tstream.start = stream.pos;\n\tif (stream.eatWhile(isNumber)) {\n\t\treturn Number(stream.current());\n\t}\n}\n\nvar Field = function Field(index, placeholder, location) {\n\tthis.index = index;\n\tthis.placeholder = placeholder;\n\tthis.location = location;\n\tthis.length = this.placeholder.length;\n};\n\nvar FieldString = function FieldString(string, fields) {\n\tthis.string = string;\n\tthis.fields = fields;\n};\n\nFieldString.prototype.mark = function mark$1 (token) {\n\treturn mark(this.string, this.fields, token);\n};\n\nFieldString.prototype.toString = function toString () {\n\treturn this.string;\n};\n\nvar defaultFieldsRenderer = function (text) { return text; };\n\n/**\n * Output node is an object containing generated output for given Emmet\n * abbreviation node. Output node can be passed to various processors that\n * may shape-up final node output. The final output is simply a concatenation\n * of `.open`, `.text` and `.close` properties and its `.before*` and `.after*`\n * satellites\n * @param {Node}     node           Parsed Emmet abbreviation node\n * @param {Function} fieldsRenderer A function for rendering fielded text (text with\n * tabstops) for current node. @see ./render.js for details\n */\nvar OutputNode = function OutputNode(node, fieldsRenderer, options) {\n\tif (typeof fieldsRenderer === 'object') {\n\t\toptions = fieldsRenderer;\n\t\tfieldsRenderer = null;\n\t}\n\n\tthis.node = node;\n\tthis._fieldsRenderer = fieldsRenderer || defaultFieldsRenderer;\n\n\tthis.open = null;\n\tthis.beforeOpen = '';\n\tthis.afterOpen = '';\n\n\tthis.close = null;\n\tthis.beforeClose = '';\n\tthis.afterClose = '';\n\n\tthis.text = null;\n\tthis.beforeText = '';\n\tthis.afterText = '';\n\n\tthis.indent = '';\n\tthis.newline = '';\n\n\tif (options) {\n            Object.assign(this, options);\n        }\n};\n\nOutputNode.prototype.clone = function clone () {\n\treturn new this.constructor(this.node, this);\n};\n\n/**\n\t * Properly indents given multiline text\n\t * @param {String} text\n\t */\nOutputNode.prototype.indentText = function indentText (text) {\n\t\tvar this$1$1 = this;\n\n\tvar lines = splitByLines$1(text);\n        if (lines.length === 1) {\n            // no newlines, nothing to indent\n            return text;\n        }\n\n        // No newline and no indent means no formatting at all:\n        // in this case we should replace newlines with spaces\n        var nl = (!this.newline && !this.indent) ? ' ' : this.newline;\n        return lines.map(function (line, i) { return i ? this$1$1.indent + line : line; }).join(nl);\n};\n\n/**\n\t * Renders given text with fields\n\t * @param {String} text\n\t * @return {String}\n\t */\nOutputNode.prototype.renderFields = function renderFields (text) {\n\treturn this._fieldsRenderer(text);\n};\n\nOutputNode.prototype.toString = function toString (children) {\n\tvar open = this._wrap(this.open, this.beforeOpen, this.afterOpen);\n\tvar close = this._wrap(this.close, this.beforeClose, this.afterClose);\n\tvar text = this._wrap(this.text, this.beforeText, this.afterText);\n\n\treturn open + text + (children != null ? children : '') + close;\n};\n\nOutputNode.prototype._wrap = function _wrap (str, before, after) {\n\tbefore = before != null ? before : '';\n\tafter = after != null ? after : '';\n\n        // automatically trim whitespace for non-empty wraps\n        if (str != null) {\n            str = before ? str.replace(/^\\s+/, '') : str;\n            str = after ? str.replace(/\\s+$/, '') : str;\n            return before + this.indentText(str) + after;\n        }\n\n        return '';\n};\n\n/**\n * Splits given text by lines\n * @param  {String} text\n * @return {String[]}\n */\nfunction splitByLines$1(text) {\n\treturn (text || '').split(/\\r\\n|\\r|\\n/g);\n}\n\n/**\n * Default output of field (tabstop)\n * @param  {Number} index       Field index\n * @param  {String} placeholder Field placeholder, can be null\n * @return {String}\n */\nvar defaultField = function (index, placeholder) { return (placeholder || ''); };\n\n/**\n * Renders given parsed abbreviation `tree` via `formatter` function.\n\n * @param {Node}     tree      Parsed Emmet abbreviation\n * @param {Function} [field]   Optional function to format field/tabstop (@see `defaultField`)\n * @param {Function} formatter Output formatter function. It takes an output node—\n * a special wrapper for parsed node that holds formatting and output properties—\n * and updates its output properties to shape-up node’s output.\n * Function arguments:\n * \t– `outNode`: OutputNode\n * \t– `renderFields`: a helper function that parses fields/tabstops from given\n * \t   text and replaces them with `field` function output.\n * \t   It also takes care about field indicies and ensures that the same indicies\n * \t   from different nodes won’t collide\n */\nfunction render(tree, field, formatter) {\n    if (typeof formatter === 'undefined') {\n        formatter = field;\n        field = null;\n    }\n\n    field = field || defaultField;\n\n    // Each node may contain fields like `${1:placeholder}`.\n\t// Since most modern editors will link all fields with the same\n\t// index, we have to ensure that different nodes has their own indicies.\n\t// We’ll use this `fieldState` object to globally increment field indices\n\t// during output\n\tvar fieldState = { index: 1 };\n\n    var fieldsRenderer = function (text) { return text == null\n        ? field(fieldState.index++)\n        : getFieldsModel(text, fieldState).mark(field); };\n\n\treturn run(tree.children, formatter, fieldsRenderer);\n}\n\nfunction run(nodes, formatter, fieldsRenderer) {\n\treturn nodes.map(function (node) {\n\t\tvar outNode = formatter(new OutputNode(node, fieldsRenderer));\n\t\treturn outNode ? outNode.toString(run(node.children, formatter, fieldsRenderer)) : '';\n\t}).join('');\n}\n\n/**\n * Returns fields (tab-stops) model with properly updated indices that won’t\n * collide with fields in other nodes of foprmatted tree\n * @param  {String|Object} text Text to get fields model from or model itself\n * @param  {Object} fieldState Abbreviation tree-wide field state reference\n * @return {Object} Field model\n */\nfunction getFieldsModel(text, fieldState) {\n\tvar model = typeof text === 'object' ? text : parse$2(text);\n    var largestIndex = -1;\n\n    model.fields.forEach(function (field) {\n\t\tfield.index += fieldState.index;\n\t\tif (field.index > largestIndex) {\n\t\t\tlargestIndex = field.index;\n\t\t}\n\t});\n\n\tif (largestIndex !== -1) {\n\t\tfieldState.index = largestIndex + 1;\n\t}\n\n    return model;\n}\n\nvar defaultFormatOptions = {\n\tshortHex: true,\n\tbetween: ': ',\n\tafter: ';'\n};\n\n/**\n * Renders given parsed Emmet CSS abbreviation as CSS-like\n * stylesheet, formatted according to `profile` options\n * @param  {Node}     tree    Parsed Emmet abbreviation\n * @param  {Profile}  profile Output profile\n * @param  {Object}  [options] Additional formatter options\n * @return {String}\n */\nfunction css(tree, profile, options) {\n\toptions = options || {};\n\tvar formatOpt = Object.assign({}, defaultFormatOptions, options && options.format);\n\n\treturn render(tree, options.field, function (outNode) {\n\t\tvar node = outNode.node;\n\t\tvar value = stringifyValue(node, formatOpt);\n\n\t\tif (node.attributes.length) {\n\t\t\tvar fieldValues = node.attributes.map(function (attr) { return stringifyValue(attr, formatOpt); });\n\t\t\tvalue = injectFields(value, fieldValues);\n\t\t}\n\n\t\toutNode.open = node.name && profile.name(node.name);\n\t\toutNode.afterOpen = formatOpt.between;\n\t\toutNode.text = outNode.renderFields(value || null);\n\n\t\tif (outNode.open && (!outNode.text || !outNode.text.endsWith(';'))) {\n\t\t\toutNode.afterText = formatOpt.after;\n\t\t}\n\n\t\tif (profile.get('format')) {\n\t\t\toutNode.newline = '\\n';\n\t\t\tif (tree.lastChild !== node) {\n\t\t\t\toutNode.afterText += outNode.newline;\n\t\t\t}\n\t\t}\n\n\t\treturn outNode;\n\t});\n}\n\n/**\n * Injects given field values at each field of given string\n * @param  {String}   string\n * @param  {String[]} attributes\n * @return {FieldString}\n */\nfunction injectFields(string, values) {\n\tvar fieldsModel = parse$2(string);\n\tvar fieldsAmount = fieldsModel.fields.length;\n\n\tif (fieldsAmount) {\n\t\tvalues = values.slice();\n\t\tif (values.length > fieldsAmount) {\n\t\t\t// More values that output fields: collapse rest values into\n\t\t\t// a single token\n\t\t\tvalues = values.slice(0, fieldsAmount - 1)\n\t\t\t\t.concat(values.slice(fieldsAmount - 1).join(', '));\n\t\t}\n\n\t\twhile (values.length) {\n\t\t\tvar value = values.shift();\n\t\t\tvar field = fieldsModel.fields.shift();\n\t\t\tvar delta = value.length - field.length;\n\n\t\t\tfieldsModel.string = fieldsModel.string.slice(0, field.location)\n\t\t\t\t+ value\n\t\t\t\t+ fieldsModel.string.slice(field.location + field.length);\n\n\t\t\t// Update location of the rest fields in string\n\t\t\tfor (var i = 0, il = fieldsModel.fields.length; i < il; i++) {\n\t\t\t\tfieldsModel.fields[i].location += delta;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fieldsModel;\n}\n\nfunction stringifyValue(node, options) {\n\tif (node.value && typeof node.value === 'object' && node.value.type === 'css-value') {\n\t\treturn node.value.value\n\t\t.map(function (token) {\n\t\t\tif (token && typeof token === 'object') {\n\t\t\t\treturn token.type === 'color'\n\t\t\t\t\t? token.toString(options.shortHex)\n\t\t\t\t\t: token.toString();\n\t\t\t}\n\n\t\t\treturn String(token);\n\t\t})\n\t\t.join(' ');\n\t}\n\n\treturn node.value != null ? String(node.value) : '';\n}\n\nvar syntaxFormat = {\n\tcss: {\n\t\tbetween: ': ',\n\t\tafter: ';'\n\t},\n\tscss: 'css',\n\tless: 'css',\n\tsass: {\n\t\tbetween: ': ',\n\t\tafter: ''\n\t},\n\tstylus: {\n\t\tbetween: ' ',\n\t\tafter: ''\n\t}\n};\n\n/**\n * Outputs given parsed abbreviation in specified stylesheet syntax\n * @param {Node}     tree     Parsed abbreviation tree\n * @param {Profile}  profile  Output profile\n * @param {String}   [syntax] Output syntax. If not given, `css` syntax is used\n * @param {Function} options.field A function to output field/tabstop for\n * host editor. This function takes two arguments: `index` and `placeholder` and\n * should return a string that represents tabstop in host editor. By default\n * only a placeholder is returned\n * @example\n * {\n * \tfield(index, placeholder) {\n * \t\t// return field in TextMate-style, e.g. ${1} or ${2:foo}\n * \t\treturn `\\${${index}${placeholder ? ':' + placeholder : ''}}`;\n *  }\n * }\n * @return {String}\n */\nfunction index$8(tree, profile, syntax, options) {\n\tif (typeof syntax === 'object') {\n\t\toptions = syntax;\n\t\tsyntax = null;\n\t}\n\n\tif (!supports$1(syntax)) {\n\t\t// fallback to CSS if given syntax is not supported\n\t\tsyntax = 'css';\n\t}\n\n\toptions = Object.assign({}, options, {\n\t\tformat: getFormat(syntax, options)\n\t});\n\n\t// CSS abbreviations doesn’t support nesting so simply\n\t// output root node children\n\treturn css(tree, profile, options);\n}\n\n/**\n * Check if given syntax is supported\n * @param {String} syntax\n * @return {Boolean}\n */\nfunction supports$1(syntax) {\n\treturn !!syntax && syntax in syntaxFormat;\n}\n\n/**\n * Returns formatter object for given syntax\n * @param  {String} syntax\n * @param  {Object} [options]\n * @return {Object} Formatter object as defined in `syntaxFormat`\n */\nfunction getFormat(syntax, options) {\n\tvar format = syntaxFormat[syntax];\n\tif (typeof format === 'string') {\n\t\tformat = syntaxFormat[format];\n\t}\n\n\treturn Object.assign({}, format, options && options.format);\n}\n\nvar DASH$3 = 45; // -\n\n/**\n * Calculates fuzzy match score of how close `abbr` matches given `string`.\n * @param  {String} abbr        Abbreviation to score\n * @param  {String} string      String to match\n * @param  {Number} [fuzziness] Fuzzy factor\n * @return {Number}             Match score\n */\nfunction stringScore(abbr, string) {\n\tabbr = abbr.toLowerCase();\n\tstring = string.toLowerCase();\n\n\tif (abbr === string) {\n\t\treturn 1;\n\t}\n\n\t// a string MUST start with the same character as abbreviation\n\tif (!string || abbr.charCodeAt(0) !== string.charCodeAt(0)) {\n\t\treturn 0;\n\t}\n\n\tvar abbrLength = abbr.length;\n\tvar stringLength = string.length;\n\tvar i = 1, j = 1, score = stringLength;\n\tvar ch1, ch2, found, acronym;\n\n\twhile (i < abbrLength) {\n\t\tch1 = abbr.charCodeAt(i);\n\t\tfound = false;\n\t\tacronym = false;\n\n\t\twhile (j < stringLength) {\n\t\t\tch2 = string.charCodeAt(j);\n\n\t\t\tif (ch1 === ch2) {\n\t\t\t\tfound = true;\n\t\t\t\tscore += (stringLength - j) * (acronym ? 2 : 1);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// add acronym bonus for exactly next match after unmatched `-`\n\t\t\tacronym = ch2 === DASH$3;\n\t\t\tj++;\n\t\t}\n\n\t\tif (!found) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti++;\n\t}\n\n\treturn score && score * (i / abbrLength) / sum(stringLength);\n}\n\n/**\n * Calculates sum of first `n` natural numbers, e.g. 1+2+3+...n\n * @param  {Number} n\n * @return {Number}\n */\nfunction sum(n) {\n\treturn n * (n + 1) / 2;\n}\n\nvar reProperty = /^([a-z-]+)(?:\\s*:\\s*([^\\n\\r]+))?$/;\nvar DASH$1$1 = 45; // -\n\n/**\n * Creates a special structure for resolving CSS properties from plain CSS\n * snippets.\n * Almost all CSS snippets are aliases for real CSS properties with available\n * value variants, optionally separated by `|`. Most values are keywords that\n * can be fuzzy-resolved as well. Some CSS properties are shorthands for other,\n * more specific properties, like `border` and `border-style`. For such cases\n * keywords from more specific properties should be available in shorthands too.\n * @param {Snippet[]} snippets\n * @return {CSSSnippet[]}\n */\nfunction cssSnippets(snippets) {\n\treturn nest( snippets.map(function (snippet) { return new CSSSnippet(snippet.key, snippet.value); }) );\n}\n\nvar CSSSnippet = function CSSSnippet(key, value) {\n\tthis.key = key;\n\tthis.value = value;\n\tthis.property = null;\n\n\t// detect if given snippet is a property\n\tvar m = value && value.match(reProperty);\n\tif (m) {\n\t\tthis.property = m[1];\n\t\tthis.value = m[2];\n\t}\n\n\tthis.dependencies = [];\n};\n\nvar prototypeAccessors$3 = { defaultValue: { configurable: true } };\n\nCSSSnippet.prototype.addDependency = function addDependency (dep) {\n\tthis.dependencies.push(dep);\n};\n\nprototypeAccessors$3.defaultValue.get = function () {\n\treturn this.value != null ? splitValue(this.value)[0] : null;\n};\n\n/**\n\t * Returns list of unique keywords for current CSS snippet and its dependencies\n\t * @return {String[]}\n\t */\nCSSSnippet.prototype.keywords = function keywords () {\n\tvar stack = [];\n\tvar keywords = new Set();\n\tvar i = 0, item, candidates;\n\n\tif (this.property) {\n\t\t// scan valid CSS-properties only\n\t\tstack.push(this);\n\t}\n\n\twhile (i < stack.length) {\n\t\t// NB Keep items in stack instead of push/pop to avoid possible\n\t\t// circular references\n\t\titem = stack[i++];\n\n\t\tif (item.value) {\n\t\t\tcandidates = splitValue(item.value).filter(isKeyword$1);\n\n\t\t\t// extract possible keywords from snippet value\n\t\t\tfor (var j = 0; j < candidates.length; j++) {\n\t\t\t\tkeywords.add(candidates[j].trim());\n\t\t\t}\n\n\t\t\t// add dependencies into scan stack\n\t\t\tfor (var j$1 = 0, deps = item.dependencies; j$1 < deps.length; j$1++) {\n\t\t\t\tif (stack.indexOf(deps[j$1]) === -1) {\n\t\t\t\t\tstack.push(deps[j$1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn Array.from(keywords);\n};\n\nObject.defineProperties( CSSSnippet.prototype, prototypeAccessors$3 );\n\n/**\n * Nests more specific CSS properties into shorthand ones, e.g.\n * background-position-x -> background-position -> background\n * @param  {CSSSnippet[]} snippets\n * @return {CSSSnippet[]}\n */\nfunction nest(snippets) {\n\tsnippets = snippets.sort(snippetsSort);\n\tvar stack = [];\n\n\t// For sorted list of CSS properties, create dependency graph where each\n\t// shorthand property contains its more specific one, e.g.\n\t// background -> background-position -> background-position-x\n\tfor (var i = 0, cur = (void 0), prev = (void 0); i < snippets.length; i++) {\n\t\tcur = snippets[i];\n\n\t\tif (!cur.property) {\n\t\t\t// not a CSS property, skip it\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Check if current property belongs to one from parent stack.\n\t\t// Since `snippets` array is sorted, items are perfectly aligned\n\t\t// from shorthands to more specific variants\n\t\twhile (stack.length) {\n\t\t\tprev = stack[stack.length - 1];\n\n\t\t\tif (cur.property.indexOf(prev.property) === 0\n\t\t\t\t&& cur.property.charCodeAt(prev.property.length) === DASH$1$1) {\n\t\t\t\tprev.addDependency(cur);\n\t\t\t\tstack.push(cur);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tstack.pop();\n\t\t}\n\n\t\tif (!stack.length) {\n\t\t\tstack.push(cur);\n\t\t}\n\t}\n\n\treturn snippets;\n}\n\n/**\n * A sorting function for array of snippets\n * @param  {CSSSnippet} a\n * @param  {CSSSnippet} b\n * @return {Number}\n */\nfunction snippetsSort(a, b) {\n\tif (a.key === b.key) {\n\t\treturn 0;\n\t}\n\n\treturn a.key < b.key ? -1 : 1;\n}\n\n/**\n * Check if given string is a keyword candidate\n * @param  {String}  str\n * @return {Boolean}\n */\nfunction isKeyword$1(str) {\n\treturn /^\\s*[\\w-]+/.test(str);\n}\n\nfunction splitValue(value) {\n\treturn String(value).split('|');\n}\n\nvar globalKeywords = ['auto', 'inherit', 'unset'];\nvar unitlessProperties = [\n\t'z-index', 'line-height', 'opacity', 'font-weight', 'zoom',\n\t'flex', 'flex-grow', 'flex-shrink'\n];\n\nvar defaultOptions$3 = {\n\tintUnit: 'px',\n\tfloatUnit: 'em',\n\tunitAliases: {\n\t\te :'em',\n\t\tp: '%',\n\t\tx: 'ex',\n\t\tr: 'rem'\n\t},\n\tfuzzySearchMinScore: 0\n};\n\n/**\n * For every node in given `tree`, finds matching snippet from `registry` and\n * updates node with snippet data.\n *\n * This resolver uses fuzzy matching for searching matched snippets and their\n * keyword values.\n */\n\nfunction index$7(tree, registry, options) {\n\toptions = Object.assign({}, defaultOptions$3, options);\n\toptions.unitAliases = Object.assign({}, defaultOptions$3.unitAliases, options && options.unitAliases);\n\n\tvar snippets = convertToCSSSnippets(registry);\n\n\ttree.walk(function (node) { return resolveNode$1(node, snippets, options); });\n\treturn tree;\n}\n\nfunction convertToCSSSnippets(registry) {\n\treturn cssSnippets(registry.all({type: 'string'}));\n}\n\n/**\n * Resolves given node: finds matched CSS snippets using fuzzy match and resolves\n * keyword aliases from node value\n * @param  {Node} node\n * @param  {CSSSnippet[]} snippets\n * @param  {Object} options\n * @return {Node}\n */\nfunction resolveNode$1(node, snippets, options) {\n\tif (options.property) {\n\t\t// Resolve as value of given CSS property\n\t\treturn resolveAsPropertyValue(node, snippets.find(function (snippet) { return snippet.property === options.property; }), options);\n\t}\n\n\tvar snippet = findBestMatch(node.name, snippets, 'key', options.fuzzySearchMinScore);\n\n\tif (!snippet) {\n\t\t// Edge case: `!important` snippet\n\t\treturn node.name === '!' ? setNodeAsText(node, '!important') : node;\n\t}\n\n\treturn snippet.property\n\t\t? resolveAsProperty(node, snippet, options)\n\t\t: resolveAsSnippet(node, snippet);\n}\n\n/**\n * Resolves given parsed abbreviation node as CSS property\n * @param {Node} node\n * @param {CSSSnippet} snippet\n * @param  {Object} formatOptions\n * @return {Node}\n */\nfunction resolveAsProperty(node, snippet, formatOptions) {\n\tvar abbr = node.name;\n\tnode.name = snippet.property;\n\n\tif (node.value && typeof node.value === 'object') {\n\t\t// resolve keyword shortcuts\n\t\tvar keywords = snippet.keywords();\n\n\t\tif (!node.value.size) {\n\t\t\t// no value defined, try to resolve unmatched part as a keyword alias\n\t\t\tvar kw = findBestMatch(getUnmatchedPart(abbr, snippet.key), keywords);\n\n\t\t\tif (!kw) {\n\t\t\t\t// no matching value, try to get default one\n\t\t\t\tkw = snippet.defaultValue;\n\t\t\t\tif (kw && kw.indexOf('${') === -1) {\n\t\t\t\t\t// Quick and dirty test for existing field. If not, wrap\n\t\t\t\t\t// default value in a field\n\t\t\t\t\tkw = \"${1:\" + kw + \"}\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (kw) {\n\t\t\t\tnode.value.add(kw);\n\t\t\t}\n\t\t} else {\n\t\t\t// replace keyword aliases in current node value\n\t\t\tfor (var i = 0, token = (void 0); i < node.value.value.length; i++) {\n\t\t\t\ttoken = node.value.value[i];\n\n\t\t\t\tif (token === '!') {\n\t\t\t\t\ttoken = (!i ? '${1} ' : '') + \"!important\";\n\t\t\t\t} else if (isKeyword$1$1(token)) {\n\t\t\t\t\ttoken = findBestMatch(token.value, keywords)\n\t\t\t\t\t\t|| findBestMatch(token.value, globalKeywords)\n\t\t\t\t\t\t|| token;\n\t\t\t\t} else if (isNumericValue(token)) {\n\t\t\t\t\ttoken = resolveNumericValue(node.name, token, formatOptions);\n\t\t\t\t}\n\n\t\t\t\tnode.value.value[i] = token;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn node;\n}\n\n/**\n * Resolves given parsed abbreviation node as a snippet: a plain code chunk\n * @param {Node} node\n * @param {CSSSnippet} snippet\n * @return {Node}\n */\nfunction resolveAsSnippet(node, snippet) {\n\treturn setNodeAsText(node, snippet.value);\n}\n\n/**\n * Resolves given parsed abbreviation node as property value of given `snippet`:\n * tries to find best matching keyword from CSS snippet\n * @param {Node} node\n * @param {CSSSnippet} snippet\n * @param {Object} options\n * @return {Node}\n */\nfunction resolveAsPropertyValue(node, snippet, options) {\n\t// Possible resolved result for CSS property:\n\t// * matched snippet keyword\n\t// * color (starts with #)\n\t// Everything else should result the same as input abbreviation\n\tvar keywords = globalKeywords.slice();\n\tif (snippet) {\n\t\tkeywords = keywords.concat(snippet.keywords());\n\t}\n\n\tvar values = [node.name].concat(node.value.value)\n\t\t.filter(Boolean)\n\t\t.map(function (value) {\n\t\t\tif (typeof value === 'string' || value.type === 'keyword') {\n\t\t\t\tvalue = String(value);\n\t\t\t\treturn findBestMatch(value, keywords, null, options.fuzzySearchMinScore) || value;\n\t\t\t}\n\n\t\t\treturn value;\n\t\t});\n\n\tnode.name = null;\n\tnode.value.value = values;\n\n\treturn node;\n}\n\n/**\n * Sets given parsed abbreviation node as a text snippet\n * @param {Node} node\n * @param {String} text\n * @return {Node}\n */\nfunction setNodeAsText(node, text) {\n\tnode.name = null;\n\tnode.value = text;\n\treturn node;\n}\n\n/**\n * Finds best matching item from `items` array\n * @param {String} abbr  Abbreviation to match\n * @param {Array}  items List of items for match\n * @param {String} [key] If `items` is a list of objects, use `key` as object\n * property to test against\n * @param {Number} fuzzySearchMinScore The minimum score the best matched item should have to be a valid match.\n * @return {*}\n */\nfunction findBestMatch(abbr, items, key, fuzzySearchMinScore) {\n\tif (!abbr) {\n\t\treturn null;\n\t}\n\n\tvar matchedItem = null;\n\tvar maxScore = 0;\n\tfuzzySearchMinScore = fuzzySearchMinScore || 0;\n\n\tfor (var i = 0, item = (void 0); i < items.length; i++) {\n\t\titem = items[i];\n\t\tvar score = stringScore(abbr, getScoringPart(item, key));\n\n\t\tif (score === 1) {\n\t\t\t// direct hit, no need to look further\n\t\t\treturn item;\n\t\t}\n\n\t\tif (score && score >= maxScore) {\n\t\t\tmaxScore = score;\n\t\t\tmatchedItem = item;\n\t\t}\n\t}\n\n\treturn maxScore >= fuzzySearchMinScore ? matchedItem : null;\n}\n\nfunction getScoringPart(item, key) {\n\tvar value = item && typeof item === 'object' ? item[key] : item;\n\tvar m = (value || '').match(/^[\\w-@]+/);\n\treturn m ? m[0] : value;\n}\n\n/**\n * Returns a part of `abbr` that wasn’t directly matched agains `string`.\n * For example, if abbreviation `poas` is matched against `position`, the unmatched part will be `as`\n * since `a` wasn’t found in string stream\n * @param {String} abbr\n * @param {String} string\n * @return {String}\n */\nfunction getUnmatchedPart(abbr, string) {\n\tfor (var i = 0, lastPos = 0; i < abbr.length; i++) {\n\t\tlastPos = string.indexOf(abbr[i], lastPos);\n\t\tif (lastPos === -1) {\n\t\t\treturn abbr.slice(i);\n\t\t}\n\t\tlastPos++;\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if given CSS value token is a keyword\n * @param {*} token\n * @return {Boolean}\n */\nfunction isKeyword$1$1(token) {\n\treturn tokenTypeOf(token, 'keyword');\n}\n\n/**\n * Check if given CSS value token is a numeric value\n * @param  {*}  token\n * @return {Boolean}\n */\nfunction isNumericValue(token) {\n\treturn tokenTypeOf(token, 'numeric');\n}\n\nfunction tokenTypeOf(token, type) {\n\treturn token && typeof token === 'object' && token.type === type;\n}\n\n/**\n * Resolves numeric value for given CSS property\n * @param  {String} property    CSS property name\n * @param  {NumericValue} token CSS numeric value token\n * @param  {Object} formatOptions Formatting options for units\n * @return {NumericValue}\n */\nfunction resolveNumericValue(property, token, formatOptions) {\n\tif (token.unit) {\n\t\ttoken.unit = formatOptions.unitAliases[token.unit] || token.unit;\n\t} else if (token.value !== 0 && unitlessProperties.indexOf(property) === -1) {\n\t\t// use `px` for integers, `em` for floats\n\t\t// NB: num|0 is a quick alternative to Math.round(0)\n\t\ttoken.unit = token.value === (token.value|0) ? formatOptions.intUnit : formatOptions.floatUnit;\n\t}\n\n\treturn token;\n}\n\nvar ac = \"align-content:start|end|flex-start|flex-end|center|space-between|space-around|stretch|space-evenly\";\nvar ai = \"align-items:start|end|flex-start|flex-end|center|baseline|stretch\";\nvar anim = \"animation:${1:name} ${2:duration} ${3:timing-function} ${4:delay} ${5:iteration-count} ${6:direction} ${7:fill-mode}\";\nvar animdel = \"animation-delay:${1:time}\";\nvar animdir = \"animation-direction:normal|reverse|alternate|alternate-reverse\";\nvar animdur = \"animation-duration:${1:0}s\";\nvar animfm = \"animation-fill-mode:both|forwards|backwards\";\nvar animic = \"animation-iteration-count:1|infinite\";\nvar animn = \"animation-name\";\nvar animps = \"animation-play-state:running|paused\";\nvar animtf = \"animation-timing-function:linear|ease|ease-in|ease-out|ease-in-out|cubic-bezier(${1:0.1}, ${2:0.7}, ${3:1.0}, ${3:0.1})\";\nvar ap = \"appearance:none\";\nvar as = \"align-self:start|end|auto|flex-start|flex-end|center|baseline|stretch\";\nvar b = \"bottom\";\nvar bd = \"border:${1:1px} ${2:solid} ${3:#000}\";\nvar bdb = \"border-bottom:${1:1px} ${2:solid} ${3:#000}\";\nvar bdbc = \"border-bottom-color:${1:#000}\";\nvar bdbi = \"border-bottom-image:url(${0})\";\nvar bdbk = \"border-break:close\";\nvar bdbli = \"border-bottom-left-image:url(${0})|continue\";\nvar bdblrs = \"border-bottom-left-radius\";\nvar bdbri = \"border-bottom-right-image:url(${0})|continue\";\nvar bdbrrs = \"border-bottom-right-radius\";\nvar bdbs = \"border-bottom-style\";\nvar bdbw = \"border-bottom-width\";\nvar bdc = \"border-color:${1:#000}\";\nvar bdci = \"border-corner-image:url(${0})|continue\";\nvar bdcl = \"border-collapse:collapse|separate\";\nvar bdf = \"border-fit:repeat|clip|scale|stretch|overwrite|overflow|space\";\nvar bdi = \"border-image:url(${0})\";\nvar bdl = \"border-left:${1:1px} ${2:solid} ${3:#000}\";\nvar bdlc = \"border-left-color:${1:#000}\";\nvar bdlen = \"border-length\";\nvar bdli = \"border-left-image:url(${0})\";\nvar bdls = \"border-left-style\";\nvar bdlw = \"border-left-width\";\nvar bdr = \"border-right:${1:1px} ${2:solid} ${3:#000}\";\nvar bdrc = \"border-right-color:${1:#000}\";\nvar bdri = \"border-right-image:url(${0})\";\nvar bdrs = \"border-radius\";\nvar bdrst = \"border-right-style\";\nvar bdrw = \"border-right-width\";\nvar bds = \"border-style:none|hidden|dotted|dashed|solid|double|dot-dash|dot-dot-dash|wave|groove|ridge|inset|outset\";\nvar bdsp = \"border-spacing\";\nvar bdt = \"border-top:${1:1px} ${2:solid} ${3:#000}\";\nvar bdtc = \"border-top-color:${1:#000}\";\nvar bdti = \"border-top-image:url(${0})\";\nvar bdtli = \"border-top-left-image:url(${0})|continue\";\nvar bdtlrs = \"border-top-left-radius\";\nvar bdtri = \"border-top-right-image:url(${0})|continue\";\nvar bdtrrs = \"border-top-right-radius\";\nvar bdts = \"border-top-style\";\nvar bdtw = \"border-top-width\";\nvar bdw = \"border-width\";\nvar bfv = \"backface-visibility:hidden|visible\";\nvar bg = \"background:${1:#000}\";\nvar bga = \"background-attachment:fixed|scroll\";\nvar bgbk = \"background-break:bounding-box|each-box|continuous\";\nvar bgc = \"background-color:#${1:fff}\";\nvar bgcp = \"background-clip:padding-box|border-box|content-box|no-clip\";\nvar bgi = \"background-image:url(${0})\";\nvar bgo = \"background-origin:padding-box|border-box|content-box\";\nvar bgp = \"background-position:${1:0} ${2:0}\";\nvar bgpx = \"background-position-x\";\nvar bgpy = \"background-position-y\";\nvar bgr = \"background-repeat:no-repeat|repeat-x|repeat-y|space|round\";\nvar bgsz = \"background-size:contain|cover\";\nvar bxsh = \"box-shadow:${1:inset }${2:hoff} ${3:voff} ${4:blur} ${5:#000}|none\";\nvar bxsz = \"box-sizing:border-box|content-box|border-box\";\nvar c$1 = \"color:${1:#000}\";\nvar cl = \"clear:both|left|right|none\";\nvar cm = \"/* ${0} */\";\nvar cnt = \"content:'${0}'|normal|open-quote|no-open-quote|close-quote|no-close-quote|attr(${0})|counter(${0})|counters({$0})\";\nvar coi = \"counter-increment\";\nvar colm = \"columns\";\nvar colmc = \"column-count\";\nvar colmf = \"column-fill\";\nvar colmg = \"column-gap\";\nvar colmr = \"column-rule\";\nvar colmrc = \"column-rule-color\";\nvar colmrs = \"column-rule-style\";\nvar colmrw = \"column-rule-width\";\nvar colms = \"column-span\";\nvar colmw = \"column-width\";\nvar cor = \"counter-reset\";\nvar cp = \"clip:auto|rect(${1:top} ${2:right} ${3:bottom} ${4:left})\";\nvar cps = \"caption-side:top|bottom\";\nvar cur = \"cursor:pointer|auto|default|crosshair|hand|help|move|pointer|text\";\nvar d = \"display:grid|inline-grid|subgrid|block|none|flex|inline-flex|inline|inline-block|list-item|run-in|compact|table|inline-table|table-caption|table-column|table-column-group|table-header-group|table-footer-group|table-row|table-row-group|table-cell|ruby|ruby-base|ruby-base-group|ruby-text|ruby-text-group\";\nvar ec = \"empty-cells:show|hide\";\nvar f = \"font:${1:1em} ${2:sans-serif}\";\nvar fd = \"font-display:auto|block|swap|fallback|optional\";\nvar fef = \"font-effect:none|engrave|emboss|outline\";\nvar fem = \"font-emphasize\";\nvar femp = \"font-emphasize-position:before|after\";\nvar fems = \"font-emphasize-style:none|accent|dot|circle|disc\";\nvar ff = \"font-family:serif|sans-serif|cursive|fantasy|monospace\";\nvar fft = \"font-family:\\\"Times New Roman\\\", Times, Baskerville, Georgia, serif\";\nvar ffa = \"font-family:Arial, \\\"Helvetica Neue\\\", Helvetica, sans-serif\";\nvar ffv = \"font-family:Verdana, Geneva, sans-serif\";\nvar fl = \"float:left|right|none\";\nvar fs = \"font-style:italic|normal|oblique\";\nvar fsm = \"font-smoothing:antialiased|subpixel-antialiased|none\";\nvar fst$1 = \"font-stretch:normal|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded\";\nvar fv = \"font-variant:normal|small-caps\";\nvar fvs = \"font-variation-settings:normal|inherit|initial|unset\";\nvar fw = \"font-weight:normal|bold|bolder|lighter\";\nvar fx = \"flex\";\nvar fxb = \"flex-basis:fill|max-content|min-content|fit-content|content\";\nvar fxd = \"flex-direction:row|row-reverse|column|column-reverse\";\nvar fxf = \"flex-flow\";\nvar fxg = \"flex-grow\";\nvar fxsh = \"flex-shrink\";\nvar fxw = \"flex-wrap:nowrap|wrap|wrap-reverse\";\nvar fz = \"font-size\";\nvar fza = \"font-size-adjust\";\nvar gtc = \"grid-template-columns:repeat()|minmax()\";\nvar gtr = \"grid-template-rows:repeat()|minmax()\";\nvar gta = \"grid-template-areas\";\nvar gt = \"grid-template\";\nvar gg = \"grid-gap\";\nvar gcg = \"grid-column-gap\";\nvar grg = \"grid-row-gap\";\nvar gac = \"grid-auto-columns:auto|minmax()\";\nvar gar = \"grid-auto-rows:auto|minmax()\";\nvar gaf = \"grid-auto-flow:row|column|dense|inherit|initial|unset\";\nvar gd = \"grid\";\nvar gc = \"grid-column\";\nvar gcs = \"grid-column-start\";\nvar gce = \"grid-column-end\";\nvar gr = \"grid-row\";\nvar grs = \"grid-row-start\";\nvar gre = \"grid-row-end\";\nvar ga = \"grid-area\";\nvar h = \"height\";\nvar jc = \"justify-content:start|end|stretch|flex-start|flex-end|center|space-between|space-around|space-evenly\";\nvar ji = \"justify-items:start|end|center|stretch\";\nvar js = \"justify-self:start|end|center|stretch\";\nvar l = \"left\";\nvar lg = \"background-image:linear-gradient(${1})\";\nvar lh = \"line-height\";\nvar lis = \"list-style\";\nvar lisi = \"list-style-image\";\nvar lisp = \"list-style-position:inside|outside\";\nvar list = \"list-style-type:disc|circle|square|decimal|decimal-leading-zero|lower-roman|upper-roman\";\nvar lts = \"letter-spacing:normal\";\nvar m = \"margin\";\nvar mah = \"max-height\";\nvar mar = \"max-resolution\";\nvar maw = \"max-width\";\nvar mb = \"margin-bottom\";\nvar mih = \"min-height\";\nvar mir = \"min-resolution\";\nvar miw = \"min-width\";\nvar ml = \"margin-left\";\nvar mr = \"margin-right\";\nvar mt = \"margin-top\";\nvar ol = \"outline\";\nvar olc = \"outline-color:${1:#000}|invert\";\nvar olo = \"outline-offset\";\nvar ols = \"outline-style:none|dotted|dashed|solid|double|groove|ridge|inset|outset\";\nvar olw = \"outline-width|thin|medium|thick\";\nvar op = \"opacity\";\nvar ord = \"order\";\nvar ori = \"orientation:landscape|portrait\";\nvar orp = \"orphans\";\nvar ov = \"overflow:hidden|visible|hidden|scroll|auto\";\nvar ovs = \"overflow-style:scrollbar|auto|scrollbar|panner|move|marquee\";\nvar ovx = \"overflow-x:hidden|visible|hidden|scroll|auto\";\nvar ovy = \"overflow-y:hidden|visible|hidden|scroll|auto\";\nvar p = \"padding\";\nvar pb = \"padding-bottom\";\nvar pgba = \"page-break-after:auto|always|left|right\";\nvar pgbb = \"page-break-before:auto|always|left|right\";\nvar pgbi = \"page-break-inside:auto|avoid\";\nvar pl = \"padding-left\";\nvar pos = \"position:relative|absolute|relative|fixed|static\";\nvar pr = \"padding-right\";\nvar pt = \"padding-top\";\nvar q = \"quotes\";\nvar qen = \"quotes:'\\\\201C' '\\\\201D' '\\\\2018' '\\\\2019'\";\nvar qru = \"quotes:'\\\\00AB' '\\\\00BB' '\\\\201E' '\\\\201C'\";\nvar r = \"right\";\nvar rsz = \"resize:none|both|horizontal|vertical\";\nvar t = \"top\";\nvar ta = \"text-align:left|center|right|justify\";\nvar tal = \"text-align-last:left|center|right\";\nvar tbl = \"table-layout:fixed\";\nvar td = \"text-decoration:none|underline|overline|line-through\";\nvar te = \"text-emphasis:none|accent|dot|circle|disc|before|after\";\nvar th = \"text-height:auto|font-size|text-size|max-size\";\nvar ti = \"text-indent\";\nvar tj = \"text-justify:auto|inter-word|inter-ideograph|inter-cluster|distribute|kashida|tibetan\";\nvar to = \"text-outline:${1:0} ${2:0} ${3:#000}\";\nvar tov = \"text-overflow:ellipsis|clip\";\nvar tr = \"text-replace\";\nvar trf = \"transform:${1}|skewX(${1:angle})|skewY(${1:angle})|scale(${1:x}, ${2:y})|scaleX(${1:x})|scaleY(${1:y})|scaleZ(${1:z})|scale3d(${1:x}, ${2:y}, ${3:z})|rotate(${1:angle})|rotateX(${1:angle})|rotateY(${1:angle})|rotateZ(${1:angle})|translate(${1:x}, ${2:y})|translateX(${1:x})|translateY(${1:y})|translateZ(${1:z})|translate3d(${1:tx}, ${2:ty}, ${3:tz})\";\nvar trfo = \"transform-origin\";\nvar trfs = \"transform-style:preserve-3d\";\nvar trs = \"transition:${1:prop} ${2:time}\";\nvar trsde = \"transition-delay:${1:time}\";\nvar trsdu = \"transition-duration:${1:time}\";\nvar trsp = \"transition-property:${1:prop}\";\nvar trstf = \"transition-timing-function:${1:fn}\";\nvar tsh = \"text-shadow:${1:hoff} ${2:voff} ${3:blur} ${4:#000}\";\nvar tt = \"text-transform:uppercase|lowercase|capitalize|none\";\nvar tw = \"text-wrap:none|normal|unrestricted|suppress\";\nvar us = \"user-select:none\";\nvar v = \"visibility:hidden|visible|collapse\";\nvar va = \"vertical-align:top|super|text-top|middle|baseline|bottom|text-bottom|sub\";\nvar w = \"width\";\nvar whs = \"white-space:nowrap|pre|pre-wrap|pre-line|normal\";\nvar whsc = \"white-space-collapse:normal|keep-all|loose|break-strict|break-all\";\nvar wid = \"widows\";\nvar wm = \"writing-mode:lr-tb|lr-tb|lr-bt|rl-tb|rl-bt|tb-rl|tb-lr|bt-lr|bt-rl\";\nvar wob = \"word-break:normal|keep-all|break-all\";\nvar wos = \"word-spacing\";\nvar wow = \"word-wrap:none|unrestricted|suppress|break-word|normal\";\nvar z = \"z-index\";\nvar zom = \"zoom:1\";\nvar cssSnippet = {\n\t\"@f\": \"@font-face {\\n\\tfont-family: ${1};\\n\\tsrc: url(${1});\\n}\",\n\t\"@ff\": \"@font-face {\\n\\tfont-family: '${1:FontName}';\\n\\tsrc: url('${2:FileName}.eot');\\n\\tsrc: url('${2:FileName}.eot?#iefix') format('embedded-opentype'),\\n\\t\\t url('${2:FileName}.woff') format('woff'),\\n\\t\\t url('${2:FileName}.ttf') format('truetype'),\\n\\t\\t url('${2:FileName}.svg#${1:FontName}') format('svg');\\n\\tfont-style: ${3:normal};\\n\\tfont-weight: ${4:normal};\\n}\",\n\t\"@i|@import\": \"@import url(${0});\",\n\t\"@kf\": \"@keyframes ${1:identifier} {\\n\\t${2}\\n}\",\n\t\"@m|@media\": \"@media ${1:screen} {\\n\\t${0}\\n}\",\n\tac: ac,\n\tai: ai,\n\tanim: anim,\n\tanimdel: animdel,\n\tanimdir: animdir,\n\tanimdur: animdur,\n\tanimfm: animfm,\n\tanimic: animic,\n\tanimn: animn,\n\tanimps: animps,\n\tanimtf: animtf,\n\tap: ap,\n\tas: as,\n\tb: b,\n\tbd: bd,\n\tbdb: bdb,\n\tbdbc: bdbc,\n\tbdbi: bdbi,\n\tbdbk: bdbk,\n\tbdbli: bdbli,\n\tbdblrs: bdblrs,\n\tbdbri: bdbri,\n\tbdbrrs: bdbrrs,\n\tbdbs: bdbs,\n\tbdbw: bdbw,\n\tbdc: bdc,\n\tbdci: bdci,\n\tbdcl: bdcl,\n\tbdf: bdf,\n\tbdi: bdi,\n\tbdl: bdl,\n\tbdlc: bdlc,\n\tbdlen: bdlen,\n\tbdli: bdli,\n\tbdls: bdls,\n\tbdlw: bdlw,\n\tbdr: bdr,\n\tbdrc: bdrc,\n\tbdri: bdri,\n\tbdrs: bdrs,\n\tbdrst: bdrst,\n\tbdrw: bdrw,\n\tbds: bds,\n\tbdsp: bdsp,\n\tbdt: bdt,\n\tbdtc: bdtc,\n\tbdti: bdti,\n\tbdtli: bdtli,\n\tbdtlrs: bdtlrs,\n\tbdtri: bdtri,\n\tbdtrrs: bdtrrs,\n\tbdts: bdts,\n\tbdtw: bdtw,\n\tbdw: bdw,\n\tbfv: bfv,\n\tbg: bg,\n\tbga: bga,\n\tbgbk: bgbk,\n\tbgc: bgc,\n\tbgcp: bgcp,\n\tbgi: bgi,\n\tbgo: bgo,\n\tbgp: bgp,\n\tbgpx: bgpx,\n\tbgpy: bgpy,\n\tbgr: bgr,\n\tbgsz: bgsz,\n\tbxsh: bxsh,\n\tbxsz: bxsz,\n\tc: c$1,\n\tcl: cl,\n\tcm: cm,\n\tcnt: cnt,\n\tcoi: coi,\n\tcolm: colm,\n\tcolmc: colmc,\n\tcolmf: colmf,\n\tcolmg: colmg,\n\tcolmr: colmr,\n\tcolmrc: colmrc,\n\tcolmrs: colmrs,\n\tcolmrw: colmrw,\n\tcolms: colms,\n\tcolmw: colmw,\n\tcor: cor,\n\tcp: cp,\n\tcps: cps,\n\tcur: cur,\n\td: d,\n\tec: ec,\n\tf: f,\n\tfd: fd,\n\tfef: fef,\n\tfem: fem,\n\tfemp: femp,\n\tfems: fems,\n\tff: ff,\n\tfft: fft,\n\tffa: ffa,\n\tffv: ffv,\n\tfl: fl,\n\tfs: fs,\n\tfsm: fsm,\n\tfst: fst$1,\n\tfv: fv,\n\tfvs: fvs,\n\tfw: fw,\n\tfx: fx,\n\tfxb: fxb,\n\tfxd: fxd,\n\tfxf: fxf,\n\tfxg: fxg,\n\tfxsh: fxsh,\n\tfxw: fxw,\n\tfz: fz,\n\tfza: fza,\n\tgtc: gtc,\n\tgtr: gtr,\n\tgta: gta,\n\tgt: gt,\n\tgg: gg,\n\tgcg: gcg,\n\tgrg: grg,\n\tgac: gac,\n\tgar: gar,\n\tgaf: gaf,\n\tgd: gd,\n\tgc: gc,\n\tgcs: gcs,\n\tgce: gce,\n\tgr: gr,\n\tgrs: grs,\n\tgre: gre,\n\tga: ga,\n\th: h,\n\tjc: jc,\n\tji: ji,\n\tjs: js,\n\tl: l,\n\tlg: lg,\n\tlh: lh,\n\tlis: lis,\n\tlisi: lisi,\n\tlisp: lisp,\n\tlist: list,\n\tlts: lts,\n\tm: m,\n\tmah: mah,\n\tmar: mar,\n\tmaw: maw,\n\tmb: mb,\n\tmih: mih,\n\tmir: mir,\n\tmiw: miw,\n\tml: ml,\n\tmr: mr,\n\tmt: mt,\n\tol: ol,\n\tolc: olc,\n\tolo: olo,\n\tols: ols,\n\tolw: olw,\n\top: op,\n\tord: ord,\n\tori: ori,\n\torp: orp,\n\tov: ov,\n\tovs: ovs,\n\tovx: ovx,\n\tovy: ovy,\n\tp: p,\n\tpb: pb,\n\tpgba: pgba,\n\tpgbb: pgbb,\n\tpgbi: pgbi,\n\tpl: pl,\n\tpos: pos,\n\tpr: pr,\n\tpt: pt,\n\tq: q,\n\tqen: qen,\n\tqru: qru,\n\tr: r,\n\trsz: rsz,\n\tt: t,\n\tta: ta,\n\ttal: tal,\n\ttbl: tbl,\n\ttd: td,\n\tte: te,\n\tth: th,\n\tti: ti,\n\ttj: tj,\n\tto: to,\n\ttov: tov,\n\ttr: tr,\n\ttrf: trf,\n\ttrfo: trfo,\n\ttrfs: trfs,\n\ttrs: trs,\n\ttrsde: trsde,\n\ttrsdu: trsdu,\n\ttrsp: trsp,\n\ttrstf: trstf,\n\ttsh: tsh,\n\ttt: tt,\n\ttw: tw,\n\tus: us,\n\tv: v,\n\tva: va,\n\tw: w,\n\twhs: whs,\n\twhsc: whsc,\n\twid: wid,\n\twm: wm,\n\twob: wob,\n\twos: wos,\n\twow: wow,\n\tz: z,\n\tzom: zom\n};\n\n/**\n * Attribute descriptor of parsed abbreviation node\n * @param {String} name Attribute name\n * @param {String} value Attribute value\n * @param {Object} options Additional custom attribute options\n * @param {Boolean} options.boolean Attribute is boolean (e.g. name equals value)\n * @param {Boolean} options.implied Attribute is implied (e.g. must be outputted\n * only if contains non-null value)\n */\nvar Attribute = function Attribute(name, value, options) {\n\tthis.name = name;\n\tthis.value = value != null ? value : null;\n\tthis.options = options || {};\n};\n\n/**\n\t * Create a copy of current attribute\n\t * @return {Attribute}\n\t */\nAttribute.prototype.clone = function clone () {\n\treturn new Attribute(this.name, this.value, Object.assign({}, this.options));\n};\n\n/**\n\t * A string representation of current node\n\t */\nAttribute.prototype.valueOf = function valueOf () {\n\treturn ((this.name) + \"=\\\"\" + (this.value) + \"\\\"\");\n};\n\n/**\n * A parsed abbreviation AST node. Nodes build up an abbreviation AST tree\n */\nvar Node = function Node(name, attributes) {\n\tvar this$1$1 = this;\n\n\t// own properties\n\tthis.name = name || null;\n\tthis.value = null;\n\tthis.repeat = null;\n\tthis.selfClosing = false;\n\n\tthis.children = [];\n\n\t/** @type {Node} Pointer to parent node */\n\tthis.parent = null;\n\n\t/** @type {Node} Pointer to next sibling */\n\tthis.next = null;\n\n\t/** @type {Node} Pointer to previous sibling */\n\tthis.previous = null;\n\n\tthis._attributes = [];\n\n\tif (Array.isArray(attributes)) {\n\t\tattributes.forEach(function (attr) { return this$1$1.setAttribute(attr); });\n\t}\n};\n\nvar prototypeAccessors$2 = { attributes: { configurable: true },attributesMap: { configurable: true },isGroup: { configurable: true },isTextOnly: { configurable: true },firstChild: { configurable: true },lastChild: { configurable: true },childIndex: { configurable: true },nextSibling: { configurable: true },previousSibling: { configurable: true },classList: { configurable: true } };\n\n/**\n\t * Array of current node attributes\n\t * @return {Attribute[]} Array of attributes\n\t */\nprototypeAccessors$2.attributes.get = function () {\n\treturn this._attributes;\n};\n\n/**\n\t * A shorthand to retreive node attributes as map\n\t * @return {Object}\n\t */\nprototypeAccessors$2.attributesMap.get = function () {\n\treturn this.attributes.reduce(function (out, attr) {\n\t\tout[attr.name] = attr.options.boolean ? attr.name : attr.value;\n\t\treturn out;\n\t}, {});\n};\n\n/**\n\t * Check if current node is a grouping one, e.g. has no actual representation\n\t * and is used for grouping subsequent nodes only\n\t * @return {Boolean}\n\t */\nprototypeAccessors$2.isGroup.get = function () {\n\treturn !this.name && !this.value && !this._attributes.length;\n};\n\n/**\n\t * Check if given node is a text-only node, e.g. contains only value\n\t * @return {Boolean}\n\t */\nprototypeAccessors$2.isTextOnly.get = function () {\n\treturn !this.name && !!this.value && !this._attributes.length;\n};\n\n/**\n\t * Returns first child node\n\t * @return {Node}\n\t */\nprototypeAccessors$2.firstChild.get = function () {\n\treturn this.children[0];\n};\n\n/**\n\t * Returns last child of current node\n\t * @return {Node}\n\t */\nprototypeAccessors$2.lastChild.get = function () {\n\treturn this.children[this.children.length - 1];\n};\n\n/**\n\t * Return index of current node in its parent child list\n\t * @return {Number} Returns -1 if current node is a root one\n\t */\nprototypeAccessors$2.childIndex.get = function () {\n\treturn this.parent ? this.parent.children.indexOf(this) : -1;\n};\n\n/**\n\t * Returns next sibling of current node\n\t * @return {Node}\n\t */\nprototypeAccessors$2.nextSibling.get = function () {\n\treturn this.next;\n};\n\n/**\n\t * Returns previous sibling of current node\n\t * @return {Node}\n\t */\nprototypeAccessors$2.previousSibling.get = function () {\n\treturn this.previous;\n};\n\n/**\n\t * Returns array of unique class names in current node\n\t * @return {String[]}\n\t */\nprototypeAccessors$2.classList.get = function () {\n\tvar attr = this.getAttribute('class');\n\treturn attr && attr.value\n\t\t? attr.value.split(/\\s+/g).filter(uniqueClass)\n\t\t: [];\n};\n\n/**\n\t * Convenient alias to create a new node instance\n\t * @param {String} [name] Node name\n\t * @param {Object} [attributes] Attributes hash\n\t * @return {Node}\n\t */\nNode.prototype.create = function create (name, attributes) {\n\treturn new Node(name, attributes);\n};\n\n/**\n\t * Sets given attribute for current node\n\t * @param {String|Object|Attribute} name Attribute name or attribute object\n\t * @param {String} [value] Attribute value\n\t */\nNode.prototype.setAttribute = function setAttribute (name, value) {\n\tvar attr = createAttribute(name, value);\n\tvar curAttr = this.getAttribute(name);\n\tif (curAttr) {\n\t\tthis.replaceAttribute(curAttr, attr);\n\t} else {\n\t\tthis._attributes.push(attr);\n\t}\n};\n\n/**\n\t * Check if attribute with given name exists in node\n\t * @param  {String} name\n\t * @return {Boolean}\n\t */\nNode.prototype.hasAttribute = function hasAttribute (name) {\n\treturn !!this.getAttribute(name);\n};\n\n/**\n\t * Returns attribute object by given name\n\t * @param  {String} name\n\t * @return {Attribute}\n\t */\nNode.prototype.getAttribute = function getAttribute (name) {\n\tif (typeof name === 'object') {\n\t\tname = name.name;\n\t}\n\n\tfor (var i = 0; i < this._attributes.length; i++) {\n\t\tvar attr = this._attributes[i];\n\t\tif (attr.name === name) {\n\t\t\treturn attr;\n\t\t}\n\t}\n};\n\n/**\n\t * Replaces attribute with new instance\n\t * @param {String|Attribute} curAttribute Current attribute name or instance\n\t * to replace\n\t * @param {String|Object|Attribute} newName New attribute name or attribute object\n\t * @param {String} [newValue] New attribute value\n\t */\nNode.prototype.replaceAttribute = function replaceAttribute (curAttribute, newName, newValue) {\n\tif (typeof curAttribute === 'string') {\n\t\tcurAttribute = this.getAttribute(curAttribute);\n\t}\n\n\tvar ix = this._attributes.indexOf(curAttribute);\n\tif (ix !== -1) {\n\t\tthis._attributes.splice(ix, 1, createAttribute(newName, newValue));\n\t}\n};\n\n/**\n\t * Removes attribute with given name\n\t * @param  {String|Attribute} attr Atrtibute name or instance\n\t */\nNode.prototype.removeAttribute = function removeAttribute (attr) {\n\tif (typeof attr === 'string') {\n\t\tattr = this.getAttribute(attr);\n\t}\n\n\tvar ix = this._attributes.indexOf(attr);\n\tif (ix !== -1) {\n\t\tthis._attributes.splice(ix, 1);\n\t}\n};\n\n/**\n\t * Removes all attributes from current node\n\t */\nNode.prototype.clearAttributes = function clearAttributes () {\n\tthis._attributes.length = 0;\n};\n\n/**\n\t * Adds given class name to class attribute\n\t * @param {String} token Class name token\n\t */\nNode.prototype.addClass = function addClass (token) {\n\ttoken = normalize(token);\n\n\tif (!this.hasAttribute('class')) {\n\t\tthis.setAttribute('class', token);\n\t} else if (token && !this.hasClass(token)) {\n\t\tthis.setAttribute('class', this.classList.concat(token).join(' '));\n\t}\n};\n\n/**\n\t * Check if current node contains given class name\n\t * @param {String} token Class name token\n\t * @return {Boolean}\n\t */\nNode.prototype.hasClass = function hasClass (token) {\n\treturn this.classList.indexOf(normalize(token)) !== -1;\n};\n\n/**\n\t * Removes given class name from class attribute\n\t * @param {String} token Class name token\n\t */\nNode.prototype.removeClass = function removeClass (token) {\n\ttoken = normalize(token);\n\tif (this.hasClass(token)) {\n\t\tthis.setAttribute('class', this.classList.filter(function (name) { return name !== token; }).join(' '));\n\t}\n};\n\n/**\n\t * Appends child to current node\n\t * @param {Node} node\n\t */\nNode.prototype.appendChild = function appendChild (node) {\n\tthis.insertAt(node, this.children.length);\n};\n\n/**\n\t * Inserts given `newNode` before `refNode` child node\n\t * @param {Node} newNode\n\t * @param {Node} refNode\n\t */\nNode.prototype.insertBefore = function insertBefore (newNode, refNode) {\n\tthis.insertAt(newNode, this.children.indexOf(refNode));\n};\n\n/**\n\t * Insert given `node` at `pos` position of child list\n\t * @param {Node} node\n\t * @param {Number} pos\n\t */\nNode.prototype.insertAt = function insertAt (node, pos) {\n\tif (pos < 0 || pos > this.children.length) {\n\t\tthrow new Error('Unable to insert node: position is out of child list range');\n\t}\n\n\tvar prev = this.children[pos - 1];\n\tvar next = this.children[pos];\n\n\tnode.remove();\n\tnode.parent = this;\n\tthis.children.splice(pos, 0, node);\n\n\tif (prev) {\n\t\tnode.previous = prev;\n\t\tprev.next = node;\n\t}\n\n\tif (next) {\n\t\tnode.next = next;\n\t\tnext.previous = node;\n\t}\n};\n\n/**\n\t * Removes given child from current node\n\t * @param {Node} node\n\t */\nNode.prototype.removeChild = function removeChild (node) {\n\tvar ix = this.children.indexOf(node);\n\tif (ix !== -1) {\n\t\tthis.children.splice(ix, 1);\n\t\tif (node.previous) {\n\t\t\tnode.previous.next = node.next;\n\t\t}\n\n\t\tif (node.next) {\n\t\t\tnode.next.previous = node.previous;\n\t\t}\n\n\t\tnode.parent = node.next = node.previous = null;\n\t}\n};\n\n/**\n\t * Removes current node from its parent\n\t */\nNode.prototype.remove = function remove () {\n\tif (this.parent) {\n\t\tthis.parent.removeChild(this);\n\t}\n};\n\n/**\n\t * Creates a detached copy of current node\n\t * @param {Boolean} deep Clone node contents as well\n\t * @return {Node}\n\t */\nNode.prototype.clone = function clone (deep) {\n\tvar clone = new Node(this.name);\n\tclone.value = this.value;\n\tclone.selfClosing = this.selfClosing;\n\tif (this.repeat) {\n\t\tclone.repeat = Object.assign({}, this.repeat);\n\t}\n\n\tthis._attributes.forEach(function (attr) { return clone.setAttribute(attr.clone()); });\n\n\tif (deep) {\n\t\tthis.children.forEach(function (child) { return clone.appendChild(child.clone(true)); });\n\t}\n\n\treturn clone;\n};\n\n/**\n\t * Walks on each descendant node and invokes given `fn` function on it.\n\t * The function receives two arguments: the node itself and its depth level\n\t * from current node. If function returns `false`, it stops walking\n\t * @param {Function} fn\n\t */\nNode.prototype.walk = function walk (fn, _level) {\n\t_level = _level || 0;\n\tvar ctx = this.firstChild;\n\n\twhile (ctx) {\n\t\t// in case if context node will be detached during `fn` call\n\t\tvar next = ctx.next;\n\n\t\tif (fn(ctx, _level) === false || ctx.walk(fn, _level + 1) === false) {\n\t\t\treturn false;\n\t\t}\n\n\t\tctx = next;\n\t}\n};\n\n/**\n\t * A helper method for transformation chaining: runs given `fn` function on\n\t * current node and returns the same node\n\t */\nNode.prototype.use = function use (fn) {\n\t\tvar arguments$1 = arguments;\n\n\tvar args = [this];\n\tfor (var i = 1; i < arguments.length; i++) {\n\t\targs.push(arguments$1[i]);\n\t}\n\n\tfn.apply(null, args);\n\treturn this;\n};\n\nNode.prototype.toString = function toString () {\n\t\tvar this$1$1 = this;\n\n\tvar attrs = this.attributes.map(function (attr) {\n\t\tattr = this$1$1.getAttribute(attr.name);\n\t\tvar opt = attr.options;\n\t\tvar out = \"\" + (opt && opt.implied ? '!' : '') + (attr.name || '');\n\t\tif (opt && opt.boolean) {\n\t\t\tout += '.';\n\t\t} else if (attr.value != null) {\n\t\t\tout += \"=\\\"\" + (attr.value) + \"\\\"\";\n\t\t}\n\t\treturn out;\n\t});\n\n\tvar out = \"\" + (this.name || '');\n\tif (attrs.length) {\n\t\tout += \"[\" + (attrs.join(' ')) + \"]\";\n\t}\n\n\tif (this.value != null) {\n\t\tout += \"{\" + (this.value) + \"}\";\n\t}\n\n\tif (this.selfClosing) {\n\t\tout += '/';\n\t}\n\n\tif (this.repeat) {\n\t\tout += \"*\" + (this.repeat.count ? this.repeat.count : '');\n\t\tif (this.repeat.value != null) {\n\t\t\tout += \"@\" + (this.repeat.value);\n\t\t}\n\t}\n\n\treturn out;\n};\n\nObject.defineProperties( Node.prototype, prototypeAccessors$2 );\n\n/**\n * Attribute factory\n * @param  {String|Attribute|Object} name  Attribute name or attribute descriptor\n * @param  {*} value Attribute value\n * @return {Attribute}\n */\nfunction createAttribute(name, value) {\n\tif (name instanceof Attribute) {\n\t\treturn name;\n\t}\n\n\tif (typeof name === 'string') {\n\t\treturn new Attribute(name, value);\n\t}\n\n\tif (name && typeof name === 'object') {\n\t\treturn new Attribute(name.name, name.value, name.options);\n\t}\n}\n\n/**\n * @param  {String} str\n * @return {String}\n */\nfunction normalize(str) {\n\treturn String(str).trim();\n}\n\nfunction uniqueClass(item, i, arr) {\n\treturn item && arr.indexOf(item) === i;\n}\n\n/**\n * A wrapper for holding CSS value\n */\nvar CSSValue = function CSSValue() {\n\tthis.type = 'css-value';\n\tthis.value = [];\n};\n\nvar prototypeAccessors$1 = { size: { configurable: true } };\n\nprototypeAccessors$1.size.get = function () {\n\treturn this.value.length;\n};\n\nCSSValue.prototype.add = function add (value) {\n\tthis.value.push(value);\n};\n\nCSSValue.prototype.has = function has (value) {\n\treturn this.value.indexOf(value) !== -1;\n};\n\nCSSValue.prototype.toString = function toString () {\n\treturn this.value.join(' ');\n};\n\nObject.defineProperties( CSSValue.prototype, prototypeAccessors$1 );\n\nvar HASH$2 = 35; // #\nvar DOT$3  = 46; // .\n\n/**\n * Consumes a color token from given string\n * @param  {StreamReader} stream\n * @return {Color} Returns consumend color object, `undefined` otherwise\n */\nfunction consumeColor(stream) {\n\t// supported color variations:\n\t// #abc   → #aabbccc\n\t// #0     → #000000\n\t// #fff.5 → rgba(255, 255, 255, 0.5)\n\t// #t     → transparent\n\tif (stream.peek() === HASH$2) {\n\t\tstream.start = stream.pos;\n\t\tstream.next();\n\n\t\tstream.eat(116) /* t */ || stream.eatWhile(isHex);\n\t\tvar base = stream.current();\n\n\t\t// a hex color can be followed by `.num` alpha value\n\t\tstream.start = stream.pos;\n\t\tif (stream.eat(DOT$3) && !stream.eatWhile(isNumber)) {\n\t\t\tthrow stream.error('Unexpected character for alpha value of color');\n\t\t}\n\n\t\treturn new Color(base, stream.current());\n\t}\n}\n\nvar Color = function Color(value, alpha) {\n\tthis.type = 'color';\n\tthis.raw = value;\n\tthis.alpha = Number(alpha != null && alpha !== '' ? alpha : 1);\n\tvalue = value.slice(1); // remove #\n\n\tvar r = 0, g = 0, b = 0;\n\n\tif (value === 't') {\n\t\tthis.alpha = 0;\n\t} else {\n\t\tswitch (value.length) {\n\t\t\tcase 0:\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\tr = g = b = value + value;\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\tr = g = b = value;\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\tr = value[0] + value[0];\n\t\t\t\tg = value[1] + value[1];\n\t\t\t\tb = value[2] + value[2];\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tvalue += value;\n\t\t\t\tr = value.slice(0, 2);\n\t\t\t\tg = value.slice(2, 4);\n\t\t\t\tb = value.slice(4, 6);\n\t\t}\n\t}\n\n\tthis.r = parseInt(r, 16);\n\tthis.g = parseInt(g, 16);\n\tthis.b = parseInt(b, 16);\n};\n\n/**\n\t * Output current color as hex value\n\t * @param {Boolean} shor Produce short value (e.g. #fff instead of #ffffff), if possible\n\t * @return {String}\n\t */\nColor.prototype.toHex = function toHex$1 (short) {\n\tvar fn = (short && isShortHex(this.r) && isShortHex(this.g) && isShortHex(this.b))\n\t\t? toShortHex : toHex;\n\n\treturn '#' + fn(this.r)  + fn(this.g) + fn(this.b);\n};\n\n/**\n\t * Output current color as `rgba?(...)` CSS color\n\t * @return {String}\n\t */\nColor.prototype.toRGB = function toRGB () {\n\tvar values = [this.r, this.g, this.b];\n\tif (this.alpha !== 1) {\n\t\tvalues.push(this.alpha.toFixed(8).replace(/\\.?0+$/, ''));\n\t}\n\n\treturn ((values.length === 3 ? 'rgb' : 'rgba') + \"(\" + (values.join(', ')) + \")\");\n};\n\nColor.prototype.toString = function toString (short) {\n\tif (!this.r && !this.g && !this.b && !this.alpha) {\n\t\treturn 'transparent';\n\t}\n\treturn this.alpha === 1 ? this.toHex(short) : this.toRGB();\n};\n\n/**\n * Check if given code is a hex value (/0-9a-f/)\n * @param  {Number}  code\n * @return {Boolean}\n */\nfunction isHex(code) {\n\treturn isNumber(code) || isAlpha(code, 65, 70); // A-F\n}\n\nfunction isShortHex(hex) {\n\treturn !(hex % 17);\n}\n\nfunction toShortHex(num) {\n\treturn (num >> 4).toString(16);\n}\n\nfunction toHex(num) {\n\treturn pad$1(num.toString(16), 2);\n}\n\nfunction pad$1(value, len) {\n\twhile (value.length < len) {\n\t\tvalue = '0' + value;\n\t}\n\treturn value;\n}\n\n/**\n * @param  {Number}  code\n * @return {Boolean}\n */\nfunction isAlphaNumericWord(code) {\n\treturn isNumber(code) || isAlphaWord(code);\n}\n\n/**\n * @param  {Number}  code\n * @return {Boolean}\n */\nfunction isAlphaWord(code) {\n\treturn code === 95 /* _ */ || isAlpha(code);\n}\n\nvar PERCENT = 37; // %\nvar DOT$1$2     = 46; // .\nvar DASH    = 45; // -\n\n/**\n * Consumes numeric CSS value (number with optional unit) from current stream,\n * if possible\n * @param  {StreamReader} stream\n * @return {NumericValue}\n */\nfunction consumeNumericValue(stream) {\n\tstream.start = stream.pos;\n\tif (eatNumber(stream)) {\n\t\tvar num = stream.current();\n\t\tstream.start = stream.pos;\n\n\t\t// eat unit, which can be a % or alpha word\n\t\tstream.eat(PERCENT) || stream.eatWhile(isAlphaWord);\n\t\treturn new NumericValue(num, stream.current());\n\t}\n}\n\n/**\n * A numeric CSS value with optional unit\n */\nvar NumericValue = function NumericValue(value, unit) {\n\tthis.type = 'numeric';\n\tthis.value = Number(value);\n\tthis.unit = unit || '';\n};\n\nNumericValue.prototype.toString = function toString () {\n\treturn (\"\" + (this.value) + (this.unit));\n};\n\n/**\n * Eats number value from given stream\n * @param  {StreamReader} stream\n * @return {Boolean} Returns `true` if number was consumed\n */\nfunction eatNumber(stream) {\n\tvar start = stream.pos;\n\tstream.eat(DASH);\n\tvar afterNegative = stream.pos;\n\n\tstream.eatWhile(isNumber);\n\t\n\tvar prevPos = stream.pos;\n\tif (stream.eat(DOT$1$2) && !stream.eatWhile(isNumber)) {\n\t\t// Number followed by a dot, but then no number\n\t\tstream.pos = prevPos;\n\t}\n\n\t// Edge case: consumed dash only: not a number, bail-out\n\tif (stream.pos === afterNegative) {\n\t\tstream.pos = start;\n\t}\n\n\treturn stream.pos !== start;\n}\n\nvar DOLLAR = 36; // $\nvar DASH$1   = 45; // -\nvar AT     = 64; // @\n\n/**\n * Consumes a keyword: either a variable (a word that starts with $ or @) or CSS\n * keyword or shorthand\n * @param  {StreamReader} stream\n * @param  {Boolean} [short] Use short notation for consuming value.\n * The difference between “short” and “full” notation is that first one uses\n * alpha characters only and used for extracting keywords from abbreviation,\n * while “full” notation also supports numbers and dashes\n * @return {String} Consumed variable\n */\nfunction consumeKeyword(stream, short) {\n\tstream.start = stream.pos;\n\n\tif (stream.eat(DOLLAR) || stream.eat(AT)) {\n\t\t// SCSS or LESS variable\n\t\tstream.eatWhile(isVariableName);\n\t} else if (short) {\n\t\tstream.eatWhile(isAlphaWord);\n\t} else {\n\t\tstream.eatWhile(isKeyword);\n\t}\n\n\treturn stream.start !== stream.pos ? new Keyword(stream.current()) : null;\n}\n\nvar Keyword = function Keyword(value) {\n\tthis.type = 'keyword';\n\tthis.value = value;\n};\n\nKeyword.prototype.toString = function toString () {\n\treturn this.value;\n};\n\nfunction isKeyword(code) {\n\treturn isAlphaNumericWord(code) || code === DASH$1;\n}\n\nfunction isVariableName(code) {\n\treturn code === 45 /* - */ || isAlphaNumericWord(code);\n}\n\nvar opt$2 = { throws: true };\n\n/**\n * Consumes 'single' or \"double\"-quoted string from given string, if possible\n * @param  {StreamReader} stream\n * @return {String}\n */\nfunction consumeQuoted$2(stream) {\n\tif (eatQuoted(stream, opt$2)) {\n\t\treturn new QuotedString(stream.current());\n\t}\n}\n\nvar QuotedString = function QuotedString(value) {\n\tthis.type = 'string';\n\tthis.value = value;\n};\n\nQuotedString.prototype.toString = function toString () {\n\treturn this.value;\n};\n\nvar LBRACE = 40; // (\nvar RBRACE = 41; // )\nvar COMMA  = 44; // ,\n\n/**\n * Consumes arguments from given string.\n * Arguments are comma-separated list of CSS values inside round braces, e.g.\n * `(1, a2, 'a3')`. Nested lists and quoted strings are supported\n * @param  {StreamReader} stream\n * @return {Array}        Array of arguments, `null` if arguments cannot be consumed\n */\nfunction consumeArgumentList(stream) {\n\tif (!stream.eat(LBRACE)) {\n\t\t// not an argument list\n\t\treturn null;\n\t}\n\n\tvar arg;\n\tvar argsList = [];\n\n\twhile (!stream.eof()) {\n\t\tif (arg = consumeArgument(stream)) {\n\t\t\targsList.push(arg);\n\t\t} else {\n\t\t\t// didn’t consumed argument, expect argument separator or end-of-arguments\n\t\t\tstream.eatWhile(isWhiteSpace);\n\n\t\t\tif (stream.eat(RBRACE)) {\n\t\t\t\t// end of arguments list\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (!stream.eat(COMMA)) {\n\t\t\t\tthrow stream.error('Expected , or )');\n\t\t\t}\n\t\t}\n\t}\n\n\treturn argsList;\n}\n\n/**\n * Consumes a single argument. An argument is a `CSSValue`, e.g. it could be\n * a space-separated string of value\n * @param  {StreamReader} stream\n * @return {CSSValue}\n */\nfunction consumeArgument(stream) {\n\tvar result = new CSSValue();\n\tvar value;\n\n\twhile (!stream.eof()) {\n\t\tstream.eatWhile(isWhiteSpace);\n\t\tvalue = consumeNumericValue(stream) || consumeColor(stream)\n\t\t\t|| consumeQuoted$2(stream) || consumeKeywordOrFunction(stream);\n\n\t\tif (!value) {\n\t\t\tbreak;\n\t\t}\n\n\t\tresult.add(value);\n\t}\n\n\treturn result.size ? result : null;\n}\n\n/**\n * Consumes either function call like `foo()` or keyword like `foo`\n * @param  {StreamReader} stream\n * @return {Keyword|FunctionCall}\n */\nfunction consumeKeywordOrFunction(stream) {\n\tvar kw = consumeKeyword(stream);\n\tif (kw) {\n\t\tvar args = consumeArgumentList(stream);\n\t\treturn args ? new FunctionCall(kw.toString(), args) : kw;\n\t}\n}\n\nvar FunctionCall = function FunctionCall(name, args) {\n\tthis.type = 'function';\n\tthis.name = name;\n\tthis.args = args || [];\n};\n\nFunctionCall.prototype.toString = function toString () {\n\treturn ((this.name) + \"(\" + (this.args.join(', ')) + \")\");\n};\n\nvar EXCL$2   = 33; // !\nvar DOLLAR$1 = 36; // $\nvar PLUS   = 43; // +\nvar DASH$2   = 45; // -\nvar COLON  = 58; // :\nvar AT$1     = 64; // @\n\n/**\n * Parses given Emmet CSS abbreviation and returns it as parsed Node tree\n * @param {String} abbr\n * @return {Node}\n */\nfunction index$6(abbr) {\n\tvar root = new Node();\n\tvar stream = new StreamReader(abbr);\n\n\twhile (!stream.eof()) {\n\t\tvar node = new Node(consumeIdent(stream));\n\t\tnode.value = consumeValue(stream);\n\n\t\tvar args = consumeArgumentList(stream);\n\t\tif (args) {\n\t\t\t// technically, arguments in CSS are anonymous Emmet Node attributes,\n\t\t\t// but since Emmet can support only one anonymous, `null`-name\n\t\t\t// attribute (for good reasons), we’ll use argument index as name\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tnode.setAttribute(String(i), args[i]);\n\t\t\t}\n\t\t}\n\n\t\t// Consume `!important` modifier at the end of expression\n\t\tif (stream.eat(EXCL$2)) {\n\t\t\tnode.value.add('!');\n\t\t}\n\n\t\troot.appendChild(node);\n\n\t\t// CSS abbreviations cannot be nested, only listed\n\t\tif (!stream.eat(PLUS)) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (!stream.eof()) {\n\t\tthrow stream.error('Unexpected character');\n\t}\n\n\treturn root;\n}\n\n/**\n * Consumes CSS property identifier from given stream\n * @param  {StreamReader} stream\n * @return {String}\n */\nfunction consumeIdent(stream) {\n\tstream.start = stream.pos;\n\tstream.eatWhile(isIdentPrefix);\n\tstream.eatWhile(isIdent);\n\treturn stream.start !== stream.pos ? stream.current() : null;\n}\n\n/**\n * Consumes embedded value from Emmet CSS abbreviation stream\n * @param  {StreamReader} stream\n * @return {CSSValue}\n */\nfunction consumeValue(stream) {\n\tvar values = new CSSValue();\n\tvar value;\n\n\twhile (!stream.eof()) {\n\t\t// use colon as value separator\n\t\tstream.eat(COLON);\n\t\tif (value = consumeNumericValue(stream) || consumeColor(stream)) {\n\t\t\t// edge case: a dash after unit-less numeric value or color should\n\t\t\t// be treated as value separator, not negative sign\n\t\t\tif (!value.unit) {\n\t\t\t\tstream.eat(DASH$2);\n\t\t\t}\n\t\t} else {\n\t\t\tstream.eat(DASH$2);\n\t\t\tvalue = consumeKeyword(stream, true);\n\t\t}\n\n\t\tif (!value) {\n\t\t\tbreak;\n\t\t}\n\n\t\tvalues.add(value);\n\t}\n\n\treturn values;\n}\n\n/**\n * @param  {Number}  code\n * @return {Boolean}\n */\nfunction isIdent(code) {\n\treturn isAlphaWord(code);\n}\n\n/**\n * @param  {Number}  code\n * @return {Boolean}\n */\nfunction isIdentPrefix(code) {\n\treturn code === AT$1 || code === DOLLAR$1 || code === EXCL$2;\n}\n\nvar Snippet = function Snippet(key, value) {\n    this.key = key;\n    this.value = value;\n};\n\nvar SnippetsStorage = function SnippetsStorage(data) {\n    this._string = new Map();\n    this._regexp = new Map();\n    this._disabled = false;\n\n    this.load(data);\n};\n\nvar prototypeAccessors = { disabled: { configurable: true } };\n\nprototypeAccessors.disabled.get = function () {\n    return this._disabled;\n};\n\n/**\n * Disables current store. A disabled store always returns `undefined`\n * on `get()` method\n */\nSnippetsStorage.prototype.disable = function disable () {\n    this._disabled = true;\n};\n\n/**\n * Enables current store.\n */\nSnippetsStorage.prototype.enable = function enable () {\n    this._disabled = false;\n};\n\n/**\n * Registers a new snippet item\n * @param {String|Regexp} key\n * @param {String|Function} value\n */\nSnippetsStorage.prototype.set = function set (key, value) {\n        var this$1$1 = this;\n\n    if (typeof key === 'string') {\n        key.split('|').forEach(function (k) { return this$1$1._string.set(k, new Snippet(k, value)); });\n    } else if (key instanceof RegExp) {\n        this._regexp.set(key, new Snippet(key, value));\n    } else {\n        throw new Error('Unknow snippet key: ' + key);\n    }\n\n    return this;\n};\n\n/**\n * Returns a snippet matching given key. It first tries to find snippet\n * exact match in a string key map, then tries to match one with regexp key\n * @param {String} key\n * @return {Snippet}\n */\nSnippetsStorage.prototype.get = function get (key) {\n    if (this.disabled) {\n        return undefined;\n    }\n\n    if (this._string.has(key)) {\n        return this._string.get(key);\n    }\n\n    var keys = Array.from(this._regexp.keys());\n    for (var i = 0, il = keys.length; i < il; i++) {\n        if (keys[i].test(key)) {\n            return this._regexp.get(keys[i]);\n        }\n    }\n};\n\n/**\n * Batch load of snippets data\n * @param {Object|Map} data\n */\nSnippetsStorage.prototype.load = function load (data) {\n        var this$1$1 = this;\n\n    this.reset();\n    if (data instanceof Map) {\n        data.forEach(function (value, key) { return this$1$1.set(key, value); });\n    } else if (data && typeof data === 'object') {\n        Object.keys(data).forEach(function (key) { return this$1$1.set(key, data[key]); });\n    }\n};\n\n/**\n * Clears all stored snippets\n */\nSnippetsStorage.prototype.reset = function reset () {\n    this._string.clear();\n    this._regexp.clear();\n};\n\n/**\n * Returns all available snippets from given store\n */\nSnippetsStorage.prototype.values = function values () {\n    if (this.disabled) {\n        return [];\n    }\n        \n    var string = Array.from(this._string.values());\n    var regexp = Array.from(this._regexp.values());\n    return string.concat(regexp);\n};\n\nObject.defineProperties( SnippetsStorage.prototype, prototypeAccessors );\n\n/**\n * A snippets registry. Contains snippets, separated by store and sorted by\n * priority: a store with higher priority takes precedence when resolving snippet\n * for given key\n */\nvar SnippetsRegistry = function SnippetsRegistry(data) {\n    var this$1$1 = this;\n\n    this._registry = [];\n\n    if (Array.isArray(data)) {\n        data.forEach(function (snippets, level) { return this$1$1.add(level, snippets); });\n    } else if (typeof data === 'object') {\n        this.add(data);\n    }\n};\n\n/**\n * Return store for given level\n * @param {Number} level\n * @return {SnippetsStorage}\n */\nSnippetsRegistry.prototype.get = function get (level) {\n    for (var i = 0; i < this._registry.length; i++) {\n        var item = this._registry[i];\n        if (item.level === level) {\n            return item.store;\n        }\n    }\n};\n\n/**\n * Adds new store for given level\n * @param {Number} [level] Store level (priority). Store with higher level\n * takes precedence when resolving snippets\n * @param {Object} [snippets] A snippets data for new store\n * @return {SnipetsStorage}\n */\nSnippetsRegistry.prototype.add = function add (level, snippets) {\n    if (level != null && typeof level === 'object') {\n        snippets = level;\n        level = 0;\n    }\n\n    var store = new SnippetsStorage(snippets);\n\n    // remove previous store from same level\n    this.remove(level);\n\n    this._registry.push({level: level, store: store});\n    this._registry.sort(function (a, b) { return b.level - a.level; });\n\n    return store;\n};\n\n/**\n * Remove registry with given level or store\n * @param {Number|SnippetsStorage} data Either level or snippets store\n */\nSnippetsRegistry.prototype.remove = function remove (data) {\n    this._registry = this._registry\n    .filter(function (item) { return item.level !== data && item.store !== data; });\n};\n\n/**\n * Returns snippet from registry that matches given name\n * @param {String} name\n * @return {Snippet}\n */\nSnippetsRegistry.prototype.resolve = function resolve (name) {\n    for (var i = 0; i < this._registry.length; i++) {\n        var snippet = this._registry[i].store.get(name);\n        if (snippet) {\n            return snippet;\n        }\n    }\n};\n\n/**\n * Returns all available snippets from current registry. Snippets with the\n * same key are resolved by their storage priority.\n * @param {Object} options\n * @param {Object} options.type Return snippets only of given type: 'string'\n * or 'regexp'. Returns all snippets if not defined\n * @return {Array}\n */\nSnippetsRegistry.prototype.all = function all (options) {\n    options = options || {};\n    var result = new Map();\n\n    var fillResult = function (snippet) {\n        var type = snippet.key instanceof RegExp ? 'regexp' : 'string';\n        if ((!options.type || options.type === type) && !result.has(snippet.key)) {\n            result.set(snippet.key, snippet);\n        }\n    };\n\n    this._registry.forEach(function (item) {\n        item.store.values().forEach(fillResult);\n    });\n\n    return Array.from(result.values());\n};\n\n/**\n * Removes all stores from registry\n */\nSnippetsRegistry.prototype.clear = function clear () {\n    this._registry.length = 0;\n};\n\n/**\n * @type {EmmetOutputProfile}\n */\nvar defaultOptions$2 = {\n\tindent: '\\t',\n\ttagCase: '',\n\tattributeCase: '',\n\tattributeQuotes: 'double',\n\tformat: true,\n\tformatSkip: ['html'],\n\tformatForce: ['body'],\n\tinlineBreak: 3,\n\tcompactBooleanAttributes: false,\n\tbooleanAttributes: ['contenteditable', 'seamless', 'async', 'autofocus',\n\t\t'autoplay', 'checked', 'controls', 'defer', 'disabled', 'formnovalidate',\n\t\t'hidden', 'ismap', 'loop', 'multiple', 'muted', 'novalidate', 'readonly',\n\t\t'required', 'reversed', 'selected', 'typemustmatch'],\n\tselfClosingStyle: 'html',\n\tinlineElements: ['a', 'abbr', 'acronym', 'applet', 'b', 'basefont', 'bdo',\n\t\t'big', 'br', 'button', 'cite', 'code', 'del', 'dfn', 'em', 'font', 'i',\n\t\t'iframe', 'img', 'input', 'ins', 'kbd', 'label', 'map', 'object', 'q',\n\t\t's', 'samp', 'select', 'small', 'span', 'strike', 'strong', 'sub', 'sup',\n\t\t'textarea', 'tt', 'u', 'var']\n};\n\n/**\n * Creates output profile for given options\n */\nvar Profile = function Profile(options) {\n\t/** @type {EmmetOutputProfile} */\n\tthis.options = Object.assign({}, defaultOptions$2, options);\n\tthis.quoteChar = this.options.attributeQuotes === 'single' ? '\\'' : '\"';\n    };\n\n/**\n\t * Returns value of given option name\n\t * @param {String} name\n\t * @return {*}\n\t */\nProfile.prototype.get = function get (name) {\n\treturn this.options[name];\n};\n\n    /**\n     * Quote given string according to profile\n     * @param {String} str String to quote\n     * @return {String}\n     */\n    Profile.prototype.quote = function quote (str) {\n        return (\"\" + (this.quoteChar) + (str != null ? str : '') + (this.quoteChar));\n    };\n\n    /**\n     * Output given tag name according to options\n     * @param {String} name\n     * @return {String}\n     */\n    Profile.prototype.name = function name (name$1) {\n        return strcase(name$1, this.options.tagCase);\n    };\n\n/**\n\t * Outputs attribute name according to current settings\n\t * @param {String} attr Attribute name\n\t * @return {String}\n\t */\n    Profile.prototype.attribute = function attribute (attr) {\n        return strcase(attr, this.options.attributeCase);\n    };\n\n    /**\n     * Check if given attribute is boolean\n     * @param {Object} attr\n     * @return {Boolean}\n     */\n    Profile.prototype.isBooleanAttribute = function isBooleanAttribute (attr) {\n        return attr.options.boolean\n\t\t|| this.get('booleanAttributes').indexOf((attr.name || '').toLowerCase()) !== -1;\n    };\n\n/**\n\t * Returns a token for self-closing tag, depending on current options\n\t * @return {String}\n\t */\nProfile.prototype.selfClose = function selfClose () {\n\tswitch (this.options.selfClosingStyle) {\n\t\tcase 'xhtml': return ' /';\n\t\tcase 'xml':   return '/';\n\t\tdefault:      return '';\n\t}\n};\n\n/**\n\t * Returns indent for given level\n\t * @param {Number} level Indentation level\n\t * @return {String}\n\t */\nProfile.prototype.indent = function indent (level) {\n\tlevel = level || 0;\n\tvar output = '';\n\twhile (level--) {\n\t\toutput += this.options.indent;\n\t}\n\n\treturn output;\n};\n\n/**\n\t * Check if given tag name belongs to inline-level element\n\t * @param {Object|String} node Parsed node or tag name\n\t * @return {Boolean}\n\t */\nProfile.prototype.isInline = function isInline (node) {\n        if (typeof node === 'string') {\n            return this.get('inlineElements').indexOf(node.toLowerCase()) !== -1;\n        }\n\n        // inline node is a node either with inline-level name or text-only node\n        return node.name != null ? this.isInline(node.name) : node.isTextOnly;\n};\n\n/**\n\t * Outputs formatted field for given params\n\t * @param {Number} index Field index\n\t * @param {String} [placeholder] Field placeholder, can be empty\n\t * @return {String}\n\t */\nProfile.prototype.field = function field (index, placeholder) {\n\treturn this.options.field(index, placeholder);\n};\nfunction strcase(string, type) {\n    if (type) {\n        return type === 'upper' ? string.toUpperCase() : string.toLowerCase();\n\t}\n\t\n    return string;\n}\n\nvar defaultOption = {\n    field: function (index, placeholder) {\n        return \"${\" + index + (placeholder ? \":\" + placeholder : \"\") + \"}\";\n    },\n};\nfunction checkMonacoExists(monaco) {\n    if (!monaco)\n        { console.error(\"emmet-monaco-es: 'monaco' should be either declared on window or passed as first parameter\"); }\n    return !!monaco;\n}\n/**\n * add completion provider\n * @param monaco monaco self\n * @param language added language\n * @param isMarkup is markup language\n * @param isLegalToken check whether given token is legal or not\n * @param getLegalEmmetSets get legal emmet substring from a string.\n */\nfunction onCompletion(monaco, language, isMarkup, isLegalToken, getLegalEmmetSets) {\n    if (typeof language === \"string\")\n        { language = [language]; }\n    var providers = language.map(function (lang) {\n        return monaco.languages.registerCompletionItemProvider(lang, {\n            triggerCharacters: \">+-^*()#.[]$@{}=!:%\".split(\"\"),\n            provideCompletionItems: function (model, position) {\n                var column = position.column, lineNumber = position.lineNumber;\n                // there is nothing before caret, return\n                if (column === 1 ||\n                    column <= model.getLineFirstNonWhitespaceColumn(lineNumber)) {\n                    return;\n                }\n                // get current line's tokens\n                var _a = model\n                    ._tokenization, _tokenizationSupport = _a._tokenizationSupport, _tokenizationStateStore = _a._tokenizationStateStore;\n                var state = _tokenizationStateStore\n                    .getBeginState(lineNumber - 1)\n                    .clone();\n                var tokenizationResult = _tokenizationSupport.tokenize(model.getLineContent(lineNumber), true, state, 0);\n                var tokens = tokenizationResult.tokens;\n                var setArr;\n                // get token type at current column\n                for (var i = tokens.length - 1; i >= 0; i--) {\n                    if (column - 1 > tokens[i].offset) {\n                        // type must be empty string when start emmet\n                        // and if not the first token, make sure the previous token is `delimiter.html`\n                        // to prevent emmet triggered within attributes\n                        if (isLegalToken(tokens, i)) {\n                            // get content between current token offset and current cursor column\n                            setArr = getLegalEmmetSets(model\n                                .getLineContent(lineNumber)\n                                .substring(tokens[i].offset, column - 1));\n                        }\n                        break;\n                    }\n                }\n                if (!setArr)\n                    { return; }\n                return {\n                    suggestions: setArr.map(function (_a) {\n                        var emmetText = _a.emmetText, expandText = _a.expandText;\n                        var label = isMarkup\n                            ? emmetText\n                            : // https://github.com/microsoft/vscode-emmet-helper/blob/075cb1736582383d75f0dc9e2252e73643e55f59/src/emmetHelper.ts#L271\n                                expandText\n                                    .replace(/([^\\\\])\\$\\{\\d+\\}/g, \"$1\")\n                                    .replace(/\\$\\{\\d+:([^\\}]+)\\}/g, \"$1\");\n                        return {\n                            kind: monaco.languages.CompletionItemKind.Property,\n                            label: label,\n                            // Workaround for the main expanded abbr not appearing before the snippet suggestions\n                            sortText: \"0\" + label,\n                            // Workaround for snippet suggestions items getting filtered out as the complete abbr does not start with snippetKey\n                            filterText: emmetText,\n                            insertText: expandText,\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                            range: new monaco.Range(lineNumber, column - emmetText.length, lineNumber, column),\n                            detail: \"Emmet Abbreviation\",\n                            // https://github.com/microsoft/vscode-emmet-helper/blob/075cb1736582383d75f0dc9e2252e73643e55f59/src/emmetHelper.ts#L267\n                            documentation: expandText\n                                .replace(/([^\\\\])\\$\\{\\d+\\}/g, \"$1|\")\n                                .replace(/\\$\\{\\d+:([^\\}]+)\\}/g, \"$1\"),\n                        };\n                    }),\n                    incomplete: true,\n                };\n            },\n        });\n    });\n    return function () {\n        providers.forEach(function (provider) { return provider.dispose(); });\n    };\n}\n\nvar option$1 = __assign(__assign({}, defaultOption), { snippets: new SnippetsRegistry(cssSnippet), profile: new Profile() });\nfunction expand$1(abbr) {\n    var tree = index$6(abbr).use(index$7, option$1.snippets);\n    return index$8(tree, option$1.profile, option$1);\n}\n/**\n * almost the same behavior as VSCode's builtin emmet.\n * only available when string before text cursor(caret) matches emmet rules.\n */\nfunction emmetCSS(monaco, languages) {\n    if (monaco === void 0) { monaco = window.monaco; }\n    if (languages === void 0) { languages = [\"css\"]; }\n    if (!checkMonacoExists(monaco))\n        { return; }\n    return onCompletion(monaco, languages, false, function (tokens, index) {\n        // stop emmet when at attribute.value\n        return tokens[index].type.substring(0, 15) !== \"attribute.value\";\n    }, function (str) {\n        // empty or ends with white space, illegal\n        if (str === \"\" || str.match(/\\s$/))\n            { return; }\n        // find last substring after `{` or `}` or `;`\n        str = str.trim().split(/{|}|;/).pop();\n        if (!str)\n            { return; }\n        try {\n            return [\n                {\n                    emmetText: str,\n                    expandText: expand$1(str),\n                } ];\n        }\n        catch (_a) {\n            return;\n        }\n    });\n}\n\nvar ASTERISK$1 = 42; // *\n\n/**\n * Consumes node repeat token from current stream position and returns its\n * parsed value\n * @param  {StringReader} stream\n * @return {Object}\n */\nfunction consumeRepeat$1(stream) {\n\tif (stream.eat(ASTERISK$1)) {\n\t\tstream.start = stream.pos;\n\n\t\t// XXX think about extending repeat syntax with through numbering\n\t\treturn { count: stream.eatWhile(isNumber) ? +stream.current() : null };\n\t}\n}\n\nvar opt$1 = { throws: true };\n\n/**\n * Consumes quoted literal from current stream position and returns it’s inner,\n * unquoted, value\n * @param  {StringReader} stream\n * @return {String} Returns `null` if unable to consume quoted value from current\n * position\n */\nfunction consumeQuoted$1(stream) {\n\tif (eatQuoted(stream, opt$1)) {\n\t\treturn stream.current().slice(1, -1);\n\t}\n}\n\nvar TEXT_START$1 = 123; // {\nvar TEXT_END$1 = 125; // }\nvar ESCAPE$1 =  92; // \\ character\n\n/**\n * Consumes text node `{...}` from stream\n * @param  {StreamReader} stream\n * @return {String} Returns consumed text value (without surrounding braces) or\n * `null` if there’s no text at starting position\n */\nfunction consumeText$1(stream) {\n\t// NB using own implementation instead of `eatPair()` from @emmetio/stream-reader-utils\n\t// to disable quoted value consuming\n\tvar start = stream.pos;\n\n\tif (stream.eat(TEXT_START$1)) {\n\t\tvar stack = 1, ch;\n\t\tvar result = '';\n\t\tvar offset = stream.pos;\n\n\t\twhile (!stream.eof()) {\n\t\t\tch = stream.next();\n\t\t\tif (ch === TEXT_START$1) {\n\t\t\t\tstack++;\n\t\t\t} else if (ch === TEXT_END$1) {\n\t\t\t\tstack--;\n\t\t\t\tif (!stack) {\n\t\t\t\t\tstream.start = start;\n\t\t\t\t\treturn result + stream.substring(offset, stream.pos - 1);\n\t\t\t\t}\n\t\t\t} else if (ch === ESCAPE$1) {\n\t\t\t\tch = stream.next();\n\t\t\t\tif (ch === TEXT_START$1 || ch === TEXT_END$1) {\n\t\t\t\t\tresult += stream.substring(offset, stream.pos - 2) + String.fromCharCode(ch);\n\t\t\t\t\toffset = stream.pos;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If we’re here then paired character can’t be consumed\n\t\tstream.pos = start;\n\t\tthrow stream.error((\"Unable to find closing \" + (String.fromCharCode(TEXT_END$1)) + \" for text start\"));\n\t}\n\n\treturn null;\n}\n\nvar EXCL$1       = 33; // .\nvar DOT$2        = 46; // .\nvar EQUALS$1     = 61; // =\nvar ATTR_OPEN$1  = 91; // [\nvar ATTR_CLOSE$1 = 93; // ]\n\nvar reAttributeName$1 = /^\\!?[\\w\\-:\\$@]+\\.?$|^\\!?\\[[\\w\\-:\\$@]+\\]\\.?$/;\n\n/**\n * Consumes attributes defined in square braces from given stream.\n * Example:\n * [attr col=3 title=\"Quoted string\" selected. support={react}]\n * @param {StringReader} stream\n * @returns {Array} Array of consumed attributes\n */\nfunction consumeAttributes$1(stream) {\n\tif (!stream.eat(ATTR_OPEN$1)) {\n\t\treturn null;\n\t}\n\n\tvar result = [];\n\tvar token, attr;\n\n\twhile (!stream.eof()) {\n\t\tstream.eatWhile(isWhiteSpace);\n\n\t\tif (stream.eat(ATTR_CLOSE$1)) {\n\t\t\treturn result; // End of attribute set\n\t\t} else if ((token = consumeQuoted$1(stream)) != null) {\n\t\t\t// Consumed quoted value: anonymous attribute\n\t\t\tresult.push({\n\t\t\t\tname: null,\n\t\t\t\tvalue: token\n\t\t\t});\n\t\t} else if (eatUnquoted$1(stream)) {\n\t\t\t// Consumed next word: could be either attribute name or unquoted default value\n\t\t\ttoken = stream.current();\n\n\t\t\t// In angular attribute names can be surrounded by []\n\t\t\tif (token[0] === '[' && stream.peek() === ATTR_CLOSE$1) {\n\t\t\t\tstream.next();\n\t\t\t\ttoken = stream.current();\n\t\t\t}\n\t\t\t\n\t\t\tif (!reAttributeName$1.test(token)) {\n\t\t\t\t// anonymous attribute\n\t\t\t\tresult.push({ name: null, value: token });\n\t\t\t} else {\n\t\t\t\t// Looks like a regular attribute\n\t\t\t\tattr = parseAttributeName$1(token);\n\t\t\t\tresult.push(attr);\n\n\t\t\t\tif (stream.eat(EQUALS$1)) {\n\t\t\t\t\t// Explicitly defined value. Could be a word, a quoted string\n\t\t\t\t\t// or React-like expression\n\t\t\t\t\tif ((token = consumeQuoted$1(stream)) != null) {\n\t\t\t\t\t\tattr.value = token;\n\t\t\t\t\t} else if ((token = consumeText$1(stream)) != null) {\n\t\t\t\t\t\tattr.value = token;\n\t\t\t\t\t\tattr.options = {\n\t\t\t\t\t\t\tbefore: '{',\n\t\t\t\t\t\t\tafter: '}'\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (eatUnquoted$1(stream)) {\n\t\t\t\t\t\tattr.value = stream.current();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow stream.error('Expected attribute name');\n\t\t}\n\t}\n\n\tthrow stream.error('Expected closing \"]\" brace');\n}\n\nfunction parseAttributeName$1(name) {\n\tvar options = {};\n\n\t// If a first character in attribute name is `!` — it’s an implied\n\t// default attribute\n\tif (name.charCodeAt(0) === EXCL$1) {\n\t\tname = name.slice(1);\n\t\toptions.implied = true;\n\t}\n\n\t// Check for last character: if it’s a `.`, user wants boolean attribute\n\tif (name.charCodeAt(name.length - 1) === DOT$2) {\n\t\tname = name.slice(0, name.length - 1);\n\t\toptions.boolean = true;\n\t}\n\n\tvar attr = { name: name };\n\tif (Object.keys(options).length) {\n\t\tattr.options = options;\n\t}\n\n\treturn attr;\n}\n\n/**\n * Eats token that can be an unquoted value from given stream\n * @param  {StreamReader} stream\n * @return {Boolean}\n */\nfunction eatUnquoted$1(stream) {\n\tvar start = stream.pos;\n\tif (stream.eatWhile(isUnquoted$1)) {\n\t\tstream.start = start;\n\t\treturn true;\n\t}\n}\n\nfunction isUnquoted$1(code) {\n\treturn !isSpace(code) && !isQuote(code)\n\t\t && code !== ATTR_CLOSE$1 && code !== EQUALS$1;\n}\n\nvar HASH$1    = 35; // #\nvar DOT$1$1     = 46; // .\nvar SLASH$1   = 47; // /\n\n/**\n * Consumes a single element node from current abbreviation stream\n * @param  {StringReader} stream\n * @return {Node}\n */\nfunction consumeElement$1(stream) {\n\t// consume element name, if provided\n\tvar start = stream.pos;\n\tvar node = new Node(eatName$1(stream));\n\tvar next;\n\n\twhile (!stream.eof()) {\n\t\tif (stream.eat(DOT$1$1)) {\n\t\t\tnode.addClass(eatName$1(stream));\n\t\t} else if (stream.eat(HASH$1)) {\n\t\t\tnode.setAttribute('id', eatName$1(stream));\n\t\t} else if (stream.eat(SLASH$1)) {\n\t\t\t// A self-closing indicator must be at the end of non-grouping node\n\t\t\tif (node.isGroup) {\n\t\t\t\tstream.backUp(1);\n\t\t\t\tthrow stream.error('Unexpected self-closing indicator');\n\t\t\t}\n\t\t\tnode.selfClosing = true;\n\t\t\tif (next = consumeRepeat$1(stream)) {\n\t\t\t\tnode.repeat = next;\n\t\t\t}\n\t\t\tbreak;\n\t\t} else if (next = consumeAttributes$1(stream)) {\n\t\t\tfor (var i = 0, il = next.length; i < il; i++) {\n\t\t\t\tnode.setAttribute(next[i]);\n\t\t\t}\n\t\t} else if ((next = consumeText$1(stream)) !== null) {\n\t\t\tnode.value = next;\n\t\t} else if (next = consumeRepeat$1(stream)) {\n\t\t\tnode.repeat = next;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (start === stream.pos) {\n\t\tthrow stream.error((\"Unable to consume abbreviation node, unexpected \" + (stream.peek())));\n\t}\n\n\treturn node;\n}\n\nfunction eatName$1(stream) {\n\tstream.start = stream.pos;\n\tstream.eatWhile(isName$1);\n\treturn stream.current();\n}\n\nfunction isName$1(code) {\n\treturn isAlphaNumeric(code)\n\t\t|| code === 45 /* - */\n\t\t|| code === 58 /* : */\n\t\t|| code === 36 /* $ */\n\t\t|| code === 64 /* @ */\n\t\t|| code === 33 /* ! */\n\t\t|| code === 95 /* _ */\n\t\t|| code === 37 /* % */;\n}\n\nvar GROUP_START$1 = 40; // (\nvar GROUP_END$1   = 41; // )\nvar OP_SIBLING$1  = 43; // +\nvar OP_CHILD$1    = 62; // >\nvar OP_CLIMB$1    = 94; // ^\n\n/**\n * Parses given string into a node tree\n * @param  {String} str Abbreviation to parse\n * @return {Node}\n */\nfunction parse$1(str) {\n\tvar stream = new StreamReader(str.trim());\n\tvar root = new Node();\n\tvar ctx = root, groupStack = [], ch;\n\n\twhile (!stream.eof()) {\n\t\tch = stream.peek();\n\n\t\tif (ch === GROUP_START$1) { // start of group\n\t\t\t// The grouping node should be detached to properly handle\n\t\t\t// out-of-bounds `^` operator. Node will be attached right on group end\n\t\t\tvar node = new Node();\n\t\t\tgroupStack.push([node, ctx, stream.pos]);\n\t\t\tctx = node;\n\t\t\tstream.next();\n\t\t\tcontinue;\n\t\t} else if (ch === GROUP_END$1) { // end of group\n\t\t\tvar lastGroup = groupStack.pop();\n\t\t\tif (!lastGroup) {\n\t\t\t\tthrow stream.error('Unexpected \")\" group end');\n\t\t\t}\n\n\t\t\tvar node$1 = lastGroup[0];\n\t\t\tctx = lastGroup[1];\n\t\t\tstream.next();\n\n\t\t\t// a group can have a repeater\n\t\t\tif (node$1.repeat = consumeRepeat$1(stream)) {\n\t\t\t\tctx.appendChild(node$1);\n\t\t\t} else {\n\t\t\t\t// move all children of group into parent node\n\t\t\t\twhile (node$1.firstChild) {\n\t\t\t\t\tctx.appendChild(node$1.firstChild);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// for convenience, groups can be joined with optional `+` operator\n\t\t\tstream.eat(OP_SIBLING$1);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar node$2 = consumeElement$1(stream);\n\t\tctx.appendChild(node$2);\n\n\t\tif (stream.eof()) {\n\t\t\tbreak;\n\t\t}\n\n\t\tswitch (stream.peek()) {\n\t\t\tcase OP_SIBLING$1:\n\t\t\t\tstream.next();\n\t\t\t\tcontinue;\n\n\t\t\tcase OP_CHILD$1:\n\t\t\t\tstream.next();\n\t\t\t\tctx = node$2;\n\t\t\t\tcontinue;\n\n\t\t\tcase OP_CLIMB$1:\n\t\t\t\t// it’s perfectly valid to have multiple `^` operators\n\t\t\t\twhile (stream.eat(OP_CLIMB$1)) {\n\t\t\t\t\tctx = ctx.parent || ctx;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t}\n\t}\n\n\tif (groupStack.length) {\n\t\tstream.pos = groupStack.pop()[2];\n\t\tthrow stream.error('Expected group close');\n\t}\n\n\treturn root;\n}\n\n/**\n * Parses given abbreviation and un-rolls it into a full tree: recursively\n * replaces repeated elements with actual nodes\n * @param  {String} abbr\n * @return {Node}\n */\nfunction index$5(abbr) {\n\tvar tree = parse$1(abbr);\n\ttree.walk(unroll$1);\n\treturn tree;\n}\n\nfunction unroll$1(node) {\n\tif (!node.repeat || !node.repeat.count) {\n\t\treturn;\n\t}\n\n\tvar parent = node.parent;\n\tvar ix = parent.children.indexOf(node);\n\n\tfor (var i = 0; i < node.repeat.count; i++) {\n\t\tvar clone = node.clone(true);\n\t\tclone.repeat.value = i + 1;\n\t\tclone.walk(unroll$1);\n\n\t\tif (clone.isGroup) {\n\t\t\twhile (clone.children.length > 0) {\n\t\t\t\tclone.firstChild.repeat = clone.repeat;\n\t\t\t\tparent.insertAt(clone.firstChild, ix++);\n\t\t\t}\n\t\t} else {\n\t\t\tparent.insertAt(clone, ix++);\n\t\t}\n\t}\n\n\tnode.parent.removeChild(node);\n}\n\nvar ASTERISK = 42; // *\n\n/**\n * Consumes node repeat token from current stream position and returns its\n * parsed value\n * @param  {StringReader} stream\n * @return {Object}\n */\nfunction consumeRepeat(stream) {\n\tif (stream.eat(ASTERISK)) {\n\t\tstream.start = stream.pos;\n\n\t\t// XXX think about extending repeat syntax with through numbering\n\t\treturn { count: stream.eatWhile(isNumber) ? +stream.current() : null };\n\t}\n}\n\nvar opt = { throws: true };\n\n/**\n * Consumes quoted literal from current stream position and returns it’s inner,\n * unquoted, value\n * @param  {StringReader} stream\n * @return {String} Returns `null` if unable to consume quoted value from current\n * position\n */\nfunction consumeQuoted(stream) {\n\tif (eatQuoted(stream, opt)) {\n\t\treturn stream.current().slice(1, -1);\n\t}\n}\n\nvar TEXT_START = 123; // {\nvar TEXT_END = 125; // }\nvar ESCAPE =  92; // \\ character\n\n/**\n * Consumes text node `{...}` from stream\n * @param  {StreamReader} stream\n * @return {String} Returns consumed text value (without surrounding braces) or\n * `null` if there’s no text at starting position\n */\nfunction consumeText(stream) {\n\t// NB using own implementation instead of `eatPair()` from @emmetio/stream-reader-utils\n\t// to disable quoted value consuming\n\tvar start = stream.pos;\n\n\tif (stream.eat(TEXT_START)) {\n\t\tvar stack = 1, ch;\n\t\tvar result = '';\n\t\tvar offset = stream.pos;\n\n\t\twhile (!stream.eof()) {\n\t\t\tch = stream.next();\n\t\t\tif (ch === TEXT_START) {\n\t\t\t\tstack++;\n\t\t\t} else if (ch === TEXT_END) {\n\t\t\t\tstack--;\n\t\t\t\tif (!stack) {\n\t\t\t\t\tstream.start = start;\n\t\t\t\t\treturn result + stream.substring(offset, stream.pos - 1);\n\t\t\t\t}\n\t\t\t} else if (ch === ESCAPE) {\n\t\t\t\tch = stream.next();\n\t\t\t\tif (ch === TEXT_START || ch === TEXT_END) {\n\t\t\t\t\tresult += stream.substring(offset, stream.pos - 2) + String.fromCharCode(ch);\n\t\t\t\t\toffset = stream.pos;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If we’re here then paired character can’t be consumed\n\t\tstream.pos = start;\n\t\tthrow stream.error((\"Unable to find closing \" + (String.fromCharCode(TEXT_END)) + \" for text start\"));\n\t}\n\n\treturn null;\n}\n\nvar EXCL       = 33; // .\nvar DOT        = 46; // .\nvar EQUALS     = 61; // =\nvar ATTR_OPEN  = 91; // [\nvar ATTR_CLOSE = 93; // ]\n\nvar reAttributeName = /^\\!?[\\w\\-:\\$@]+\\.?$/;\n\n/**\n * Consumes attributes defined in square braces from given stream.\n * Example:\n * [attr col=3 title=\"Quoted string\" selected. support={react}]\n * @param {StringReader} stream\n * @returns {Array} Array of consumed attributes\n */\nfunction consumeAttributes(stream) {\n\tif (!stream.eat(ATTR_OPEN)) {\n\t\treturn null;\n\t}\n\n\tvar result = [];\n\tvar token, attr;\n\n\twhile (!stream.eof()) {\n\t\tstream.eatWhile(isWhiteSpace);\n\n\t\tif (stream.eat(ATTR_CLOSE)) {\n\t\t\treturn result; // End of attribute set\n\t\t} else if ((token = consumeQuoted(stream)) != null) {\n\t\t\t// Consumed quoted value: anonymous attribute\n\t\t\tresult.push({\n\t\t\t\tname: null,\n\t\t\t\tvalue: token\n\t\t\t});\n\t\t} else if (eatUnquoted(stream)) {\n\t\t\t// Consumed next word: could be either attribute name or unquoted default value\n\t\t\ttoken = stream.current();\n\t\t\tif (!reAttributeName.test(token)) {\n\t\t\t\t// anonymous attribute\n\t\t\t\tresult.push({ name: null, value: token });\n\t\t\t} else {\n\t\t\t\t// Looks like a regular attribute\n\t\t\t\tattr = parseAttributeName(token);\n\t\t\t\tresult.push(attr);\n\n\t\t\t\tif (stream.eat(EQUALS)) {\n\t\t\t\t\t// Explicitly defined value. Could be a word, a quoted string\n\t\t\t\t\t// or React-like expression\n\t\t\t\t\tif ((token = consumeQuoted(stream)) != null) {\n\t\t\t\t\t\tattr.value = token;\n\t\t\t\t\t} else if ((token = consumeText(stream)) != null) {\n\t\t\t\t\t\tattr.value = token;\n\t\t\t\t\t\tattr.options = {\n\t\t\t\t\t\t\tbefore: '{',\n\t\t\t\t\t\t\tafter: '}'\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (eatUnquoted(stream)) {\n\t\t\t\t\t\tattr.value = stream.current();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow stream.error('Expected attribute name');\n\t\t}\n\t}\n\n\tthrow stream.error('Expected closing \"]\" brace');\n}\n\nfunction parseAttributeName(name) {\n\tvar options = {};\n\n\t// If a first character in attribute name is `!` — it’s an implied\n\t// default attribute\n\tif (name.charCodeAt(0) === EXCL) {\n\t\tname = name.slice(1);\n\t\toptions.implied = true;\n\t}\n\n\t// Check for last character: if it’s a `.`, user wants boolean attribute\n\tif (name.charCodeAt(name.length - 1) === DOT) {\n\t\tname = name.slice(0, name.length - 1);\n\t\toptions.boolean = true;\n\t}\n\n\tvar attr = { name: name };\n\tif (Object.keys(options).length) {\n\t\tattr.options = options;\n\t}\n\n\treturn attr;\n}\n\n/**\n * Eats token that can be an unquoted value from given stream\n * @param  {StreamReader} stream\n * @return {Boolean}\n */\nfunction eatUnquoted(stream) {\n\tvar start = stream.pos;\n\tif (stream.eatWhile(isUnquoted)) {\n\t\tstream.start = start;\n\t\treturn true;\n\t}\n}\n\nfunction isUnquoted(code) {\n\treturn !isSpace(code) && !isQuote(code)\n\t\t&& code !== ATTR_OPEN && code !== ATTR_CLOSE && code !== EQUALS;\n}\n\nvar HASH    = 35; // #\nvar DOT$1     = 46; // .\nvar SLASH   = 47; // /\n\n/**\n * Consumes a single element node from current abbreviation stream\n * @param  {StringReader} stream\n * @return {Node}\n */\nfunction consumeElement(stream) {\n\t// consume element name, if provided\n\tvar start = stream.pos;\n\tvar node = new Node(eatName(stream));\n\tvar next;\n\n\twhile (!stream.eof()) {\n\t\tif (stream.eat(DOT$1)) {\n\t\t\tnode.addClass(eatName(stream));\n\t\t} else if (stream.eat(HASH)) {\n\t\t\tnode.setAttribute('id', eatName(stream));\n\t\t} else if (stream.eat(SLASH)) {\n\t\t\t// A self-closing indicator must be at the end of non-grouping node\n\t\t\tif (node.isGroup) {\n\t\t\t\tstream.backUp(1);\n\t\t\t\tthrow stream.error('Unexpected self-closing indicator');\n\t\t\t}\n\t\t\tnode.selfClosing = true;\n\t\t\tif (next = consumeRepeat(stream)) {\n\t\t\t\tnode.repeat = next;\n\t\t\t}\n\t\t\tbreak;\n\t\t} else if (next = consumeAttributes(stream)) {\n\t\t\tfor (var i = 0, il = next.length; i < il; i++) {\n\t\t\t\tnode.setAttribute(next[i]);\n\t\t\t}\n\t\t} else if ((next = consumeText(stream)) !== null) {\n\t\t\tnode.value = next;\n\t\t} else if (next = consumeRepeat(stream)) {\n\t\t\tnode.repeat = next;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (start === stream.pos) {\n\t\tthrow stream.error((\"Unable to consume abbreviation node, unexpected \" + (stream.peek())));\n\t}\n\n\treturn node;\n}\n\nfunction eatName(stream) {\n\tstream.start = stream.pos;\n\tstream.eatWhile(isName);\n\treturn stream.current();\n}\n\nfunction isName(code) {\n\treturn isAlphaNumeric(code)\n\t\t|| code === 45 /* - */\n\t\t|| code === 58 /* : */\n\t\t|| code === 36 /* $ */\n\t\t|| code === 64 /* @ */\n\t\t|| code === 33 /* ! */\n\t\t|| code === 95 /* _ */\n\t\t|| code === 37 /* % */;\n}\n\nvar GROUP_START = 40; // (\nvar GROUP_END   = 41; // )\nvar OP_SIBLING  = 43; // +\nvar OP_CHILD    = 62; // >\nvar OP_CLIMB    = 94; // ^\n\n/**\n * Parses given string into a node tree\n * @param  {String} str Abbreviation to parse\n * @return {Node}\n */\nfunction parse(str) {\n\tvar stream = new StreamReader(str.trim());\n\tvar root = new Node();\n\tvar ctx = root, groupStack = [], ch;\n\n\twhile (!stream.eof()) {\n\t\tch = stream.peek();\n\n\t\tif (ch === GROUP_START) { // start of group\n\t\t\t// The grouping node should be detached to properly handle\n\t\t\t// out-of-bounds `^` operator. Node will be attached right on group end\n\t\t\tvar node = new Node();\n\t\t\tgroupStack.push([node, ctx, stream.pos]);\n\t\t\tctx = node;\n\t\t\tstream.next();\n\t\t\tcontinue;\n\t\t} else if (ch === GROUP_END) { // end of group\n\t\t\tvar lastGroup = groupStack.pop();\n\t\t\tif (!lastGroup) {\n\t\t\t\tthrow stream.error('Unexpected \")\" group end');\n\t\t\t}\n\n\t\t\tvar node$1 = lastGroup[0];\n\t\t\tctx = lastGroup[1];\n\t\t\tstream.next();\n\n\t\t\t// a group can have a repeater\n\t\t\tif (node$1.repeat = consumeRepeat(stream)) {\n\t\t\t\tctx.appendChild(node$1);\n\t\t\t} else {\n\t\t\t\t// move all children of group into parent node\n\t\t\t\twhile (node$1.firstChild) {\n\t\t\t\t\tctx.appendChild(node$1.firstChild);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// for convenience, groups can be joined with optional `+` operator\n\t\t\tstream.eat(OP_SIBLING);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar node$2 = consumeElement(stream);\n\t\tctx.appendChild(node$2);\n\n\t\tif (stream.eof()) {\n\t\t\tbreak;\n\t\t}\n\n\t\tswitch (stream.peek()) {\n\t\t\tcase OP_SIBLING:\n\t\t\t\tstream.next();\n\t\t\t\tcontinue;\n\n\t\t\tcase OP_CHILD:\n\t\t\t\tstream.next();\n\t\t\t\tctx = node$2;\n\t\t\t\tcontinue;\n\n\t\t\tcase OP_CLIMB:\n\t\t\t\t// it’s perfectly valid to have multiple `^` operators\n\t\t\t\twhile (stream.eat(OP_CLIMB)) {\n\t\t\t\t\tctx = ctx.parent || ctx;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t}\n\t}\n\n\tif (groupStack.length) {\n\t\tstream.pos = groupStack.pop()[2];\n\t\tthrow stream.error('Expected group close');\n\t}\n\n\treturn root;\n}\n\n/**\n * Parses given abbreviation and un-rolls it into a full tree: recursively\n * replaces repeated elements with actual nodes\n * @param  {String} abbr\n * @return {Node}\n */\nfunction index$4(abbr) {\n\tvar tree = parse(abbr);\n\ttree.walk(unroll);\n\treturn tree;\n}\n\nfunction unroll(node) {\n\tif (!node.repeat || !node.repeat.count) {\n\t\treturn;\n\t}\n\n\tvar parent = node.parent;\n\tvar ix = parent.children.indexOf(node);\n\n\tfor (var i = 0; i < node.repeat.count; i++) {\n\t\tvar clone = node.clone(true);\n\t\tclone.repeat.value = i + 1;\n\t\tclone.walk(unroll);\n\n\t\tif (clone.isGroup) {\n\t\t\twhile (clone.children.length > 0) {\n\t\t\t\tclone.firstChild.repeat = clone.repeat;\n\t\t\t\tparent.insertAt(clone.firstChild, ix++);\n\t\t\t}\n\t\t} else {\n\t\t\tparent.insertAt(clone, ix++);\n\t\t}\n\t}\n\n\tnode.parent.removeChild(node);\n}\n\n/**\n * For every node in given `tree`, finds matching snippet from `registry` and\n * resolves it into a parsed abbreviation. Resolved node is then updated or\n * replaced with matched abbreviation tree.\n *\n * A HTML registry basically contains aliases to another Emmet abbreviations,\n * e.g. a predefined set of name, attribues and so on, possibly a complex\n * abbreviation with multiple elements. So we have to get snippet, parse it\n * and recursively resolve it.\n *\n * @param  {Node} tree                 Parsed Emmet abbreviation\n * @param  {SnippetsRegistry} registry Registry with all available snippets\n * @return {Node} Updated tree\n */\n\nvar index$3 = function(tree, registry) {\n    tree.walk(function (node) { return resolveNode(node, registry); });\n    return tree;\n};\n\nfunction resolveNode(node, registry) {\n    var stack = new Set();\n    var resolve = function (node) {\n        var snippet = registry.resolve(node.name);\n        // A snippet in stack means circular reference.\n        // It can be either a user error or a perfectly valid snippet like\n        // \"img\": \"img[src alt]/\", e.g. an element with predefined shape.\n        // In any case, simply stop parsing and keep element as is\n        if (!snippet || stack.has(snippet)) {\n            return;\n        }\n\n        // In case if matched snippet is a function, pass control into it\n        if (typeof snippet.value === 'function') {\n            return snippet.value(node, registry, resolve);\n        }\n\n        var tree = index$4(snippet.value);\n\n        stack.add(snippet);\n        tree.walk(resolve);\n        stack.delete(snippet);\n\n        // move current node contents into new tree\n        var childTarget = findDeepestNode$1(tree);\n        merge(childTarget, node);\n\n        while (tree.firstChild) {\n            node.parent.insertBefore(tree.firstChild, node);\n        }\n\n        childTarget.parent.insertBefore(node, childTarget);\n        childTarget.remove();\n    };\n\n    resolve(node);\n}\n\n/**\n * Adds data from first node into second node and returns it\n * @param  {Node} from\n * @param  {Node} to\n * @return {Node}\n */\nfunction merge(from, to) {\n    to.name = from.name;\n\n    if (from.selfClosing) {\n        to.selfClosing = true;\n    }\n\n    if (from.value != null) {\n        to.value = from.value;\n    }\n\n    if (from.repeat) {\n        to.repeat = Object.assign({}, from.repeat);\n    }\n\n    return mergeAttributes(from, to);\n}\n\n/**\n * Transfer attributes from first element to second one and preserve first\n * element’s attributes order\n * @param  {Node} from\n * @param  {Node} to\n * @return {Node}\n */\nfunction mergeAttributes(from, to) {\n    mergeClassNames(from, to);\n\n    // It’s important to preserve attributes order: ones in `from` have higher\n    // pripority than in `to`. Collect attributes in map in order they should\n    // appear in `to`\n    var attrMap = new Map();\n\n    var attrs = from.attributes;\n    for (var i = 0; i < attrs.length; i++) {\n        attrMap.set(attrs[i].name, attrs[i].clone());\n    }\n\n    attrs = to.attributes.slice();\n    for (var i$1 = 0, attr = (void 0), a = (void 0); i$1 < attrs.length; i$1++) {\n        attr = attrs[i$1];\n        if (attrMap.has(attr.name)) {\n            a = attrMap.get(attr.name);\n            a.value = attr.value;\n\n            // If user explicitly wrote attribute in abbreviation, it’s no longer\n            // implied and should be outputted even if value is empty\n            if (a.options.implied) {\n                a.options.implied = false;\n            }\n        } else {\n            attrMap.set(attr.name, attr);\n        }\n\n        to.removeAttribute(attr);\n    }\n\n    var newAttrs = Array.from(attrMap.values());\n    for (var i$2 = 0; i$2 < newAttrs.length; i$2++) {\n        to.setAttribute(newAttrs[i$2]);\n    }\n\n    return to;\n}\n\n/**\n * Adds class names from first node to second one\n * @param  {Node} from\n * @param  {Node} to\n * @return {Node}\n */\nfunction mergeClassNames(from, to) {\n    var classNames = from.classList;\n    for (var i = 0; i < classNames.length; i++) {\n        to.addClass(classNames[i]);\n    }\n\n    return to;\n}\n\n/**\n * Finds node which is the deepest for in current node or node iteself.\n * @param  {Node} node\n * @return {Node}\n */\nfunction findDeepestNode$1(node) {\n\twhile (node.children.length) {\n\t\tnode = node.children[node.children.length - 1];\n\t}\n\n\treturn node;\n}\n\nvar TOKEN       = /^(.*?)([A-Z_]+)(.*?)$/;\nvar TOKEN_OPEN  = 91; // [\nvar TOKEN_CLOSE = 93; // ]\n\n/**\n * A basic templating engine.\n * Takes every `[TOKEN]` from given string and replaces it with\n * `TOKEN` value from given `data` attribute. The token itself may contain\n * various characters between `[`, token name and `]`. Contents of `[...]` will\n * be outputted only if `TOKEN` value is not empty. Also, only `TOKEN` name will\n * be replaced with actual value, all other characters will remain as is.\n *\n * Example:\n * ```\n * template('[<NAME>]', {NAME: 'foo'}) -> \"<foo>\"\n * template('[<NAME>]', {}) -> \"\"\n * ```\n */\nfunction template(str, data) {\n\tif (str == null) {\n\t\treturn str;\n\t}\n\n\t// NB since token may contain inner `[` and `]`, we can’t just use regexp\n\t// for replacement, should manually parse string instead\n\tvar stack = [];\n\tvar replacer = function (str, left, token, right) { return data[token] != null ? left + data[token] + right : ''; };\n\n\tvar output = '';\n\tvar offset = 0, i = 0;\n\tvar code, lastPos;\n\n\twhile (i < str.length) {\n\t\tcode = str.charCodeAt(i);\n\t\tif (code === TOKEN_OPEN) {\n\t\t\tstack.push(i);\n\t\t} else if (code === TOKEN_CLOSE) {\n\t\t\tlastPos = stack.pop();\n\t\t\tif (!stack.length) {\n\t\t\t\toutput += str.slice(offset, lastPos) +\n\t\t\t\t\tstr.slice(lastPos + 1, i).replace(TOKEN, replacer);\n\t\t\t\toffset = i + 1;\n\t\t\t}\n\t\t}\n\n\t\ti++;\n\t}\n\n\treturn output + str.slice(offset);\n}\n\n/**\n * Various utility methods used by formatters\n */\n\n/**\n * Splits given text by lines\n * @param  {String} text\n * @return {String[]}\n */\nfunction splitByLines(text) {\n\treturn (text || '').split(/\\r\\n|\\r|\\n/g);\n}\n\n/**\n * Check if given node is a first child in its parent\n * @param  {Node}  node\n * @return {Boolean}\n */\nfunction isFirstChild(node) {\n\treturn node.parent.firstChild === node;\n}\n\n/**\n * Check if given node is a root node\n * @param  {Node}  node\n * @return {Boolean}\n */\nfunction isRoot$1(node) {\n\treturn node && !node.parent;\n}\n\n/**\n * Check if given node is a pseudo-snippet: a text-only node with explicitly\n * defined children\n * @param  {Node}  node\n * @return {Boolean}\n */\nfunction isPseudoSnippet(node) {\n\treturn node.isTextOnly && !!node.children.length;\n}\n\n/**\n * Handles pseudo-snippet node.\n * A pseudo-snippet is a text-only node with explicitly defined children.\n * For such case, we have to figure out if pseudo-snippet contains fields\n * (tab-stops) in node value and “split” it: make contents before field with\n * lowest index node’s “open” part and contents after lowest index — “close”\n * part. With this trick a final output will look like node’s children\n * are nested inside node value\n * @param  {OutputNode} outNode\n * @return {Boolean} Returns “true” if given node is a pseudo-snippets,\n * `false` otherwise\n */\nfunction handlePseudoSnippet(outNode) {\n\tvar node = outNode.node; // original abbreviaiton node\n\n\tif (isPseudoSnippet(node)) {\n\t\tvar fieldsModel = parse$2(node.value);\n\t\tvar field = findLowestIndexField(fieldsModel);\n\t\tif (field) {\n\t\t\tvar parts = splitFieldsModel(fieldsModel, field);\n\t\t\toutNode.open = outNode.renderFields(parts[0]);\n\t\t\toutNode.close = outNode.renderFields(parts[1]);\n\t\t} else {\n\t\t\toutNode.text = outNode.renderFields(fieldsModel);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Finds field with lowest index in given text\n * @param  {Object} model\n * @return {Object}\n */\nfunction findLowestIndexField(model) {\n\treturn model.fields.reduce(function (result, field) { return !result || field.index < result.index ? field : result; }\n\t\t, null);\n}\n\n/**\n * Splits given fields model in two parts by given field\n * @param  {Object} model\n * @param  {Object} field\n * @return {Array} Two-items array\n */\nfunction splitFieldsModel(model, field) {\n\tvar ix = model.fields.indexOf(field);\n\n\tvar left = new model.constructor(\n\t\tmodel.string.slice(0, field.location),\n\t\tmodel.fields.slice(0, ix)\n\t);\n\n\tvar right = new model.constructor(\n\t\tmodel.string.slice(field.location + field.length),\n\t\tmodel.fields.slice(ix + 1)\n\t);\n\n\treturn [left, right];\n}\n\nvar commentOptions = {\n\t// enable node commenting\n\tenabled: false,\n\n\t// attributes that should trigger node commenting on specific node,\n\t// if commenting is enabled\n\ttrigger: ['id', 'class'],\n\n\t// comment before opening tag\n\tbefore: '',\n\n\t// comment after closing tag\n\tafter: '\\n<!-- /[#ID][.CLASS] -->'\n};\n\n/**\n * Renders given parsed Emmet abbreviation as HTML, formatted according to\n * `profile` options\n * @param  {Node}     tree    Parsed Emmet abbreviation\n * @param  {Profile}  profile Output profile\n * @param  {Object}  [options] Additional formatter options\n * @return {String}\n */\nfunction html(tree, profile, options) {\n\toptions = Object.assign({}, options);\n\tvar format = getFormatOptions(options);\n\n\treturn render(tree, options.field, function (outNode) {\n\t\toutNode = setFormatting(outNode, profile);\n\n\t\tif (!handlePseudoSnippet(outNode)) {\n\t\t\tvar node = outNode.node;\n\n\t\t\tif (node.name) {\n\t\t\t\tvar name = profile.name(node.name);\n\t\t\t\tvar attrs = formatAttributes(outNode, profile);\n\n\t\t\t\toutNode.open = \"<\" + name + attrs + (node.selfClosing ? profile.selfClose() : '') + \">\";\n\t\t\t\tif (!node.selfClosing) {\n\t\t\t\t\toutNode.close = \"</\" + name + \">\";\n\t\t\t\t}\n\n\t\t\t\tcommentNode(outNode, format.comment);\n\t\t\t}\n\n\t\t\t// Do not generate fields for nodes with empty value and children\n\t\t\t// or if node is self-closed\n\t\t\tif (node.value || (!node.children.length && !node.selfClosing) ) {\n\t\t\t\toutNode.text = outNode.renderFields(node.value);\n\t\t\t}\n\t\t}\n\n\t\treturn outNode;\n\t});\n}\n\n/**\n * Updates formatting properties for given output node\n * @param  {OutputNode} outNode Output wrapper of farsed abbreviation node\n * @param  {Profile}    profile Output profile\n * @return {OutputNode}\n */\nfunction setFormatting(outNode, profile) {\n\tvar node = outNode.node;\n\n\tif (shouldFormatNode(node, profile)) {\n\t\toutNode.indent = profile.indent(getIndentLevel(node, profile));\n\t\toutNode.newline = '\\n';\n\t\tvar prefix = outNode.newline + outNode.indent;\n\n\t\t// do not format the very first node in output\n\t\tif (!isRoot$1(node.parent) || !isFirstChild(node)) {\n\t\t\toutNode.beforeOpen = prefix;\n\t\t\tif (node.isTextOnly) {\n\t\t\t\toutNode.beforeText = prefix;\n\t\t\t}\n\t\t}\n\n\t\tif (hasInnerFormatting(node, profile)) {\n\t\t\tif (!node.isTextOnly) {\n\t\t\t\toutNode.beforeText = prefix + profile.indent(1);\n\t\t\t}\n\t\t\toutNode.beforeClose = prefix;\n\t\t}\n\t}\n\n\treturn outNode;\n}\n\n/**\n * Check if given node should be formatted\n * @param  {Node} node\n * @param  {Profile} profile\n * @return {Boolean}\n */\nfunction shouldFormatNode(node, profile) {\n\tif (!profile.get('format')) {\n\t\treturn false;\n\t}\n\n\tif (node.parent.isTextOnly\n\t\t&& node.parent.children.length === 1\n\t\t&& parse$2(node.parent.value).fields.length) {\n\t\t// Edge case: do not format the only child of text-only node,\n\t\t// but only if parent contains fields\n\t\treturn false;\n\t}\n\n\treturn isInline(node, profile) ? shouldFormatInline(node, profile) : true;\n}\n\n/**\n * Check if given inline node should be formatted as well, e.g. it contains\n * enough adjacent siblings that should force formatting\n * @param  {Node} node\n * @param  {Profile} profile\n * @return {Boolean}\n */\nfunction shouldFormatInline(node, profile) {\n\tif (!isInline(node, profile)) {\n\t\treturn false;\n\t}\n\n\tif (isPseudoSnippet(node)) {\n\t\treturn true;\n\t}\n\n\t// check if inline node is the next sibling of block-level node\n\tif (node.childIndex === 0) {\n\t\t// first node in parent: format if it’s followed by a block-level element\n\t\tvar next = node;\n\t\twhile (next = next.nextSibling) {\n\t\t\tif (!isInline(next, profile)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t} else if (!isInline(node.previousSibling, profile)) {\n\t\t// node is right after block-level element\n\t\treturn true;\n\t}\n\n\tif (profile.get('inlineBreak')) {\n\t\t// check for adjacent inline elements before and after current element\n\t\tvar adjacentInline = 1;\n\t\tvar before = node, after = node;\n\n\t\twhile (isInlineElement((before = before.previousSibling), profile)) {\n\t\t\tadjacentInline++;\n\t\t}\n\n\t\twhile (isInlineElement((after = after.nextSibling), profile)) {\n\t\t\tadjacentInline++;\n\t\t}\n\n\t\tif (adjacentInline >= profile.get('inlineBreak')) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t// Another edge case: inline node contains node that should receive foramtting\n\tfor (var i = 0, il = node.children.length; i < il; i++) {\n\t\tif (shouldFormatNode(node.children[i], profile)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * Check if given node contains inner formatting, e.g. any of its children should\n * be formatted\n * @param  {Node} node\n * @param  {Profile} profile\n * @return {Boolean}\n */\nfunction hasInnerFormatting(node, profile) {\n\t// check if node if forced for inner formatting\n\tvar nodeName = (node.name || '').toLowerCase();\n\tif (profile.get('formatForce').indexOf(nodeName) !== -1) {\n\t\treturn true;\n\t}\n\n\t// check if any of children should receive formatting\n\t// NB don’t use `childrent.some()` to reduce memory allocations\n\tfor (var i = 0; i < node.children.length; i++) {\n\t\tif (shouldFormatNode(node.children[i], profile)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * Outputs attributes of given abbreviation node as HTML attributes\n * @param  {OutputNode} outNode\n * @param  {Profile}    profile\n * @return {String}\n */\nfunction formatAttributes(outNode, profile) {\n\tvar node = outNode.node;\n\n\treturn node.attributes.map(function (attr) {\n\t\tif (attr.options.implied && attr.value == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar attrName = profile.attribute(attr.name);\n\t\tvar attrValue = null;\n\n\t\t// handle boolean attributes\n\t\tif (attr.options.boolean || profile.get('booleanAttributes').indexOf(attrName.toLowerCase()) !== -1) {\n\t\t\tif (profile.get('compactBooleanAttributes') && attr.value == null) {\n\t\t\t\treturn (\" \" + attrName);\n\t\t\t} else if (attr.value == null) {\n\t\t\t\tattrValue = attrName;\n\t\t\t}\n\t\t}\n\n\t\tif (attrValue == null) {\n\t\t\tattrValue = outNode.renderFields(attr.value);\n\t\t}\n\n\t\treturn attr.options.before && attr.options.after\n\t\t\t? (\" \" + attrName + \"=\" + (attr.options.before+attrValue+attr.options.after))\n\t\t\t: (\" \" + attrName + \"=\" + (profile.quote(attrValue)));\n\t}).join('');\n}\n\n/**\n * Check if given node is inline-level\n * @param  {Node}  node\n * @param  {Profile}  profile\n * @return {Boolean}\n */\nfunction isInline(node, profile) {\n\treturn (node && node.isTextOnly) || isInlineElement(node, profile);\n}\n\n/**\n * Check if given node is inline-level element, e.g. element with explicitly\n * defined node name\n * @param  {Node}  node\n * @param  {Profile}  profile\n * @return {Boolean}\n */\nfunction isInlineElement(node, profile) {\n\treturn node && profile.isInline(node);\n}\n\n/**\n * Computes indent level for given node\n * @param  {Node} node\n * @param  {Profile} profile\n * @param  {Number} level\n * @return {Number}\n */\nfunction getIndentLevel(node, profile) {\n\t// Increase indent level IF NOT:\n\t// * parent is text-only node\n\t// * there’s a parent node with a name that is explicitly set to decrease level\n\tvar skip = profile.get('formatSkip') || [];\n\tvar level = node.parent.isTextOnly ? -2 : -1;\n\tvar ctx = node;\n\twhile (ctx = ctx.parent) {\n\t\tif (skip.indexOf( (ctx.name || '').toLowerCase() ) === -1) {\n\t\t\tlevel++;\n\t\t}\n\t}\n\n\treturn level < 0 ? 0 : level;\n}\n\n/**\n * Comments given output node, if required\n * @param  {OutputNode} outNode\n * @param  {Object} options\n */\nfunction commentNode(outNode, options) {\n\tvar node = outNode.node;\n\n\tif (!options.enabled || !options.trigger || !node.name) {\n\t\treturn;\n\t}\n\n\tvar attrs = outNode.node.attributes.reduce(function (out, attr) {\n\t\tif (attr.name && attr.value != null) {\n\t\t\tout[attr.name.toUpperCase().replace(/-/g, '_')] = attr.value;\n\t\t}\n\n\t\treturn out;\n\t}, {});\n\n\t// add comment only if attribute trigger is present\n\tfor (var i = 0, il = options.trigger.length; i < il; i++) {\n\t\tif (options.trigger[i].toUpperCase() in attrs) {\n\t\t\toutNode.open = template(options.before, attrs) + outNode.open;\n\t\t\tif (outNode.close) {\n\t\t\t\toutNode.close += template(options.after, attrs);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction getFormatOptions(options) {\n\tvar format = Object.assign({}, options && options.format);\n\tformat.comment = Object.assign({}, commentOptions, format.comment);\n\treturn format;\n}\n\nvar reId = /^id$/i;\nvar reClass = /^class$/i;\nvar defaultAttrOptions = {\n\tprimary: function (attrs) { return attrs.join(''); },\n\tsecondary: function (attrs) { return attrs.map(function (attr) { return attr.isBoolean ? attr.name : ((attr.name) + \"=\" + (attr.value)); }).join(', '); }\n};\n\nvar defaultNodeOptions = {\n\topen: null,\n\tclose: null,\n\tomitName: /^div$/i,\n\tattributes: defaultAttrOptions\n};\n\nfunction indentFormat(outNode, profile, options) {\n\toptions = Object.assign({}, defaultNodeOptions, options);\n\tvar node = outNode.node;\n\n\toutNode.indent = profile.indent(getIndentLevel$1(node));\n\toutNode.newline = '\\n';\n\n\t// Do not format the very first node in output\n\tif (!isRoot$1(node.parent) || !isFirstChild(node)) {\n\t\toutNode.beforeOpen = outNode.newline + outNode.indent;\n\t}\n\n\tif (node.name) {\n\t\tvar data = Object.assign({\n\t\t\tNAME: profile.name(node.name),\n\t\t\tSELF_CLOSE: node.selfClosing ? options.selfClose : null\n\t\t}, getAttributes(outNode, profile, options.attributes));\n\n\t\t// omit tag name if node has primary attributes\n\t\tif (options.omitName && options.omitName.test(data.NAME) && data.PRIMARY_ATTRS) {\n\t\t\tdata.NAME = null;\n\t\t}\n\n\t\tif (options.open != null) {\n\t\t\toutNode.open = template(options.open, data);\n\t\t}\n\n\t\tif (options.close != null) {\n\t\t\toutNode.close = template(options.close, data);\n\t\t}\n\t}\n\n\treturn outNode;\n}\n\n/**\n * Formats attributes of given node into a string.\n * @param  {OutputNode} node          Output node wrapper\n * @param  {Profile}    profile       Output profile\n * @param  {Object}     options       Additional formatting options\n * @return {String}\n */\nfunction getAttributes(outNode, profile, options) {\n\toptions = Object.assign({}, defaultAttrOptions, options);\n\tvar primary = [], secondary = [];\n\tvar node = outNode.node;\n\n\tnode.attributes.forEach(function (attr) {\n\t\tif (attr.options.implied && attr.value == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar name = profile.attribute(attr.name);\n\t\tvar value = outNode.renderFields(attr.value);\n\n\t\tif (reId.test(name)) {\n\t\t\tvalue && primary.push((\"#\" + value));\n\t\t} else if (reClass.test(name)) {\n\t\t\tvalue && primary.push((\".\" + (value.replace(/\\s+/g, '.'))));\n\t\t} else {\n\t\t\tvar isBoolean = attr.value == null\n\t\t\t\t&& (attr.options.boolean || profile.get('booleanAttributes').indexOf(name.toLowerCase()) !== -1);\n\n\t\t\tsecondary.push({ name: name, value: value, isBoolean: isBoolean });\n\t\t}\n\t});\n\n\treturn {\n\t\tPRIMARY_ATTRS: options.primary(primary) || null,\n\t\tSECONDARY_ATTRS: options.secondary(secondary) || null\n\t};\n}\n\n/**\n * Computes indent level for given node\n * @param  {Node} node\n * @return {Number}\n */\nfunction getIndentLevel$1(node) {\n\tvar level = node.parent.isTextOnly ? -2 : -1;\n\tvar ctx = node;\n\twhile (ctx = ctx.parent) {\n\t\tlevel++;\n\t}\n\n\treturn level < 0 ? 0 : level;\n}\n\nvar reNl = /\\n|\\r/;\n\n/**\n * Renders given parsed Emmet abbreviation as HAML, formatted according to\n * `profile` options\n * @param  {Node}    tree      Parsed Emmet abbreviation\n * @param  {Profile} profile   Output profile\n * @param  {Object}  [options] Additional formatter options\n * @return {String}\n */\nfunction haml(tree, profile, options) {\n\toptions = options || {};\n\tvar nodeOptions = {\n\t\topen: '[%NAME][PRIMARY_ATTRS][(SECONDARY_ATTRS)][SELF_CLOSE]',\n\t\tselfClose: '/',\n\t\tattributes: {\n\t\t\tsecondary: function secondary(attrs) {\n\t\t\t\treturn attrs.map(function (attr) { return attr.isBoolean\n\t\t\t\t\t? (\"\" + (attr.name) + (profile.get('compactBooleanAttributes') ? '' : '=true'))\n\t\t\t\t\t: ((attr.name) + \"=\" + (profile.quote(attr.value))); }\n\t\t\t\t).join(' ');\n\t\t\t}\n\t\t}\n\t};\n\n\treturn render(tree, options.field, function (outNode) {\n\t\toutNode = indentFormat(outNode, profile, nodeOptions);\n\t\toutNode = updateFormatting(outNode, profile);\n\n\t\tif (!handlePseudoSnippet(outNode)) {\n\t\t\tvar node = outNode.node;\n\n\t\t\t// Do not generate fields for nodes with empty value and children\n\t\t\t// or if node is self-closed\n\t\t\tif (node.value || (!node.children.length && !node.selfClosing) ) {\n\t\t\t\toutNode.text = outNode.renderFields(formatNodeValue(node, profile));\n\t\t\t}\n\t\t}\n\n\t\treturn outNode;\n\t});\n}\n\n/**\n * Updates formatting properties for given output node\n * NB Unlike HTML, HAML is indent-based format so some formatting options from\n * `profile` will not take effect, otherwise output will be broken\n * @param  {OutputNode} outNode Output wrapper of parsed abbreviation node\n * @param  {Profile}    profile Output profile\n * @return {OutputNode}\n */\nfunction updateFormatting(outNode, profile) {\n\tvar node = outNode.node;\n\n\tif (!node.isTextOnly && node.value) {\n\t\t// node with text: put a space before single-line text\n\t\toutNode.beforeText = reNl.test(node.value)\n\t\t\t? outNode.newline + outNode.indent + profile.indent(1)\n\t\t\t: ' ';\n\t}\n\n\treturn outNode;\n}\n/**\n * Formats value of given node: for multiline text we should add a ` |` suffix\n * at the end of each line. Also ensure that text is perfectly aligned.\n * @param  {Node}    node\n * @param  {Profile} profile\n * @return {String|null}\n */\nfunction formatNodeValue(node, profile) {\n\tif (node.value != null && reNl.test(node.value)) {\n\t\tvar lines = splitByLines(node.value);\n\t\tvar indent = profile.indent(1);\n\t\tvar maxLength = lines.reduce(function (prev, line) { return Math.max(prev, line.length); }, 0);\n\n\t\treturn lines.map(function (line, i) { return (\"\" + (i ? indent : '') + (pad(line, maxLength)) + \" |\"); }).join('\\n');\n\t}\n\n\treturn node.value;\n}\n\nfunction pad(text, len) {\n\twhile (text.length < len) {\n\t\ttext += ' ';\n\t}\n\n\treturn text;\n}\n\nvar reNl$1 = /\\n|\\r/;\nvar secondaryAttrs = {\n\tnone:   '[ SECONDARY_ATTRS]',\n\tround:  '[(SECONDARY_ATTRS)]',\n\tcurly:  '[{SECONDARY_ATTRS}]',\n\tsquare: '[[SECONDARY_ATTRS]'\n};\n\n/**\n * Renders given parsed Emmet abbreviation as Slim, formatted according to\n * `profile` options\n * @param  {Node}    tree      Parsed Emmet abbreviation\n * @param  {Profile} profile   Output profile\n * @param  {Object}  [options] Additional formatter options\n * @return {String}\n */\nfunction slim(tree, profile, options) {\n\toptions = options || {};\n\tvar SECONDARY_ATTRS = options.attributeWrap\n\t\t&& secondaryAttrs[options.attributeWrap]\n\t\t|| secondaryAttrs.none;\n\n\tvar booleanAttr = SECONDARY_ATTRS === secondaryAttrs.none\n\t\t? function (attr) { return ((attr.name) + \"=true\"); }\n\t\t: function (attr) { return attr.name; };\n\n\tvar nodeOptions = {\n\t\topen: (\"[NAME][PRIMARY_ATTRS]\" + SECONDARY_ATTRS + \"[SELF_CLOSE]\"),\n\t\tselfClose: '/',\n\t\tattributes: {\n\t\t\tsecondary: function secondary(attrs) {\n\t\t\t\treturn attrs.map(function (attr) { return attr.isBoolean\n\t\t\t\t\t? booleanAttr(attr)\n\t\t\t\t\t: ((attr.name) + \"=\" + (profile.quote(attr.value))); }\n\t\t\t\t).join(' ');\n\t\t\t}\n\t\t}\n\t};\n\n\treturn render(tree, options.field, function (outNode) {\n\t\toutNode = indentFormat(outNode, profile, nodeOptions);\n\t\toutNode = updateFormatting$1(outNode, profile);\n\n\t\tif (!handlePseudoSnippet(outNode)) {\n\t\t\tvar node = outNode.node;\n\n\t\t\t// Do not generate fields for nodes with empty value and children\n\t\t\t// or if node is self-closed\n\t\t\tif (node.value || (!node.children.length && !node.selfClosing) ) {\n\t\t\t\toutNode.text = outNode.renderFields(formatNodeValue$1(node, profile));\n\t\t\t}\n\t\t}\n\n\t\treturn outNode;\n\t});\n}\n\n/**\n * Updates formatting properties for given output node\n * NB Unlike HTML, Slim is indent-based format so some formatting options from\n * `profile` will not take effect, otherwise output will be broken\n * @param  {OutputNode} outNode Output wrapper of farsed abbreviation node\n * @param  {Profile}    profile Output profile\n * @return {OutputNode}\n */\nfunction updateFormatting$1(outNode, profile) {\n\tvar node = outNode.node;\n\tvar parent = node.parent;\n\n\t// Edge case: a single inline-level child inside node without text:\n\t// allow it to be inlined\n\tif (profile.get('inlineBreak') === 0 && isInline$1(node, profile)\n\t\t&& !isRoot$1(parent) && parent.value == null && parent.children.length === 1) {\n\t\toutNode.beforeOpen = ': ';\n\t}\n\n\tif (!node.isTextOnly && node.value) {\n\t\t// node with text: put a space before single-line text\n\t\toutNode.beforeText = reNl$1.test(node.value)\n\t\t\t? outNode.newline + outNode.indent + profile.indent(1)\n\t\t\t: ' ';\n\t}\n\n\treturn outNode;\n}\n\n/**\n * Formats value of given node: for multiline text we should precede each\n * line with `| ` with one-level deep indent\n * @param  {Node} node\n * @param  {Profile} profile\n * @return {String|null}\n */\nfunction formatNodeValue$1(node, profile) {\n\tif (node.value != null && reNl$1.test(node.value)) {\n\t\tvar indent = profile.indent(1);\n\t\treturn splitByLines(node.value).map(function (line, i) { return (\"\" + indent + (i ? ' ' : '|') + \" \" + line); }).join('\\n');\n\t}\n\n\treturn node.value;\n}\n\n/**\n * Check if given node is inline-level\n * @param  {Node}  node\n * @param  {Profile}  profile\n * @return {Boolean}\n */\nfunction isInline$1(node, profile) {\n\treturn node && (node.isTextOnly || profile.isInline(node));\n}\n\nvar reNl$2 = /\\n|\\r/;\n\n/**\n * Renders given parsed Emmet abbreviation as Pug, formatted according to\n * `profile` options\n * @param  {Node}    tree      Parsed Emmet abbreviation\n * @param  {Profile} profile   Output profile\n * @param  {Object}  [options] Additional formatter options\n * @return {String}\n */\nfunction pug(tree, profile, options) {\n\toptions = options || {};\n\tvar nodeOptions = {\n\t\topen: '[NAME][PRIMARY_ATTRS][(SECONDARY_ATTRS)]',\n\t\tattributes: {\n\t\t\tsecondary: function secondary(attrs) {\n\t\t\t\treturn attrs.map(function (attr) { return attr.isBoolean ? attr.name : ((attr.name) + \"=\" + (profile.quote(attr.value))); }).join(', ');\n\t\t\t}\n\t\t}\n\t};\n\n\treturn render(tree, options.field, function (outNode) {\n\t\toutNode = indentFormat(outNode, profile, nodeOptions);\n\t\toutNode = updateFormatting$2(outNode, profile);\n\n\t\tif (!handlePseudoSnippet(outNode)) {\n\t\t\tvar node = outNode.node;\n\t\t\t// Do not generate fields for nodes with empty value and children\n\t\t\t// or if node is self-closed\n\t\t\tif (node.value || (!node.children.length && !node.selfClosing) ) {\n\t\t\t\toutNode.text = outNode.renderFields(formatNodeValue$2(node, profile));\n\t\t\t}\n\t\t}\n\n\t\treturn outNode;\n\t});\n}\n\n/**\n * Updates formatting properties for given output node\n * NB Unlike HTML, Pug is indent-based format so some formatting options from\n * `profile` will not take effect, otherwise output will be broken\n * @param  {OutputNode} outNode Output wrapper of parsed abbreviation node\n * @param  {Profile}    profile Output profile\n * @return {OutputNode}\n */\nfunction updateFormatting$2(outNode, profile) {\n\tvar node = outNode.node;\n\n\tif (!node.isTextOnly && node.value) {\n\t\t// node with text: put a space before single-line text\n\t\toutNode.beforeText = reNl$2.test(node.value)\n\t\t\t? outNode.newline + outNode.indent + profile.indent(1)\n\t\t\t: ' ';\n\t}\n\n\treturn outNode;\n}\n\n/**\n * Formats value of given node: for multiline text we should precede each\n * line with `| ` with one-level deep indent\n * @param  {Node} node\n * @param  {Profile} profile\n * @return {String|null}\n */\nfunction formatNodeValue$2(node, profile) {\n\tif (node.value != null && reNl$2.test(node.value)) {\n\t\tvar indent = profile.indent(1);\n\t\treturn splitByLines(node.value).map(function (line) { return (indent + \"| \" + line); }).join('\\n');\n\t}\n\n\treturn node.value;\n}\n\nvar supportedSyntaxes = { html: html, haml: haml, slim: slim, pug: pug };\n\n/**\n * Outputs given parsed abbreviation in specified syntax\n * @param {Node}     tree     Parsed abbreviation tree\n * @param {Profile}  profile  Output profile\n * @param {String}   [syntax] Output syntax. If not given, `html` syntax is used\n * @param {Function} options.field A function to output field/tabstop for\n * host editor. This function takes two arguments: `index` and `placeholder` and\n * should return a string that represents tabstop in host editor. By default\n * only a placeholder is returned\n * @example\n * {\n * \tfield(index, placeholder) {\n * \t\t// return field in TextMate-style, e.g. ${1} or ${2:foo}\n * \t\treturn `\\${${index}${placeholder ? ':' + placeholder : ''}}`;\n *  }\n * }\n * @return {String}\n */\nfunction index$2(tree, profile, syntax, options) {\n\tif (typeof syntax === 'object') {\n\t\toptions = syntax;\n\t\tsyntax = null;\n\t}\n\n\tif (!supports(syntax)) {\n\t\t// fallback to HTML if given syntax is not supported\n\t\tsyntax = 'html';\n\t}\n\n\treturn supportedSyntaxes[syntax](tree, profile, options);\n}\n\n/**\n * Check if given syntax is supported\n * @param {String} syntax\n * @return {Boolean}\n */\nfunction supports(syntax) {\n\treturn !!syntax && syntax in supportedSyntaxes;\n}\n\nvar inlineElements = new Set('a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,select,small,span,strike,strong,sub,sup,textarea,tt,u,var'.split(','));\nvar elementMap = {\n    p: 'span',\n    ul: 'li',\n    ol: 'li',\n    table: 'tr',\n    tr: 'td',\n    tbody: 'tr',\n    thead: 'tr',\n    tfoot: 'tr',\n    colgroup: 'col',\n    select: 'option',\n    optgroup: 'option',\n    audio: 'source',\n    video: 'source',\n    object: 'param',\n    map: 'area'\n};\n\n/**\n * Returns best child node name for given parent node name\n * @param  {String} parentName Name of parent node\n * @return {String}\n */\nfunction resolveImplicitName(parentName) {\n    parentName = (parentName || '').toLowerCase();\n    return elementMap[parentName]\n        || (inlineElements.has(parentName) ? 'span' : 'div');\n}\n\n/**\n * Adds missing tag names for given tree depending on node’s parent name\n */\nvar implicitTags = function(tree) {\n    tree.walk(function (node) {\n        // resolve only nameless nodes without content\n        if (node.name == null && node.attributes.length) {\n            node.name = resolveImplicitName(node.parent.name);\n        }\n    });\n    return tree;\n};\n\n/**\n * Locates all occurances of given `token` which are not escaped (e.g. are not\n * preceded with `\\`) given in `str`\n * @param  {String} str\n * @return {Array}  Array of token ranges\n */\nfunction findUnescapedTokens(str, token) {\n    var result = new Set();\n    var tlen = token.length;\n\n    // 1. Find all occurances of tokens\n    var pos = 0;\n    while ((pos = str.indexOf(token, pos)) !== -1) {\n        result.add(pos);\n        pos += tlen;\n    }\n\n    if (result.size) {\n        // 2. Remove ones that escaped\n        var pos$1 = 0;\n        var len = str.length;\n\n        while (pos$1 < len) {\n            if (str[pos$1++] === '\\\\') {\n                result.delete(pos$1++);\n            }\n        }\n    }\n\n    return Array.from(result).map(function (ix) { return range(ix, tlen); });\n}\n\n/**\n * Replaces `ranges`, generated by `range()` function, with given `value` in `str`\n * @param  {String} str    Where to replace ranges\n * @param  {Array} ranges Ranes, created by `range()` function\n * @param  {String|Function} value  Replacement value. If it’s a function, it\n * will take a range value as argument and should return a new string\n * @return {String}\n */\nfunction replaceRanges(str, ranges, value) {\n\t// should walk from the end of array to keep ranges valid after replacement\n\tfor (var i = ranges.length - 1; i >= 0; i--) {\n\t\tvar r = ranges[i];\n\n        var offset = 0;\n        var offsetLength = 0;\n        var descendingOrder = false;\n\n        if (str.substr(r[0] + r[1], 1) === '@'){\n            if (str.substr(r[0] + r[1] + 1, 1) === '-') {\n                descendingOrder = true;\n            } \n            var matches = str.substr(r[0] + r[1] + 1 + Number(descendingOrder)).match(/^(\\d+)/);\n            if (matches) {\n                offsetLength = matches[1].length + 1 + Number(descendingOrder);\n                offset = parseInt(matches[1]) - 1;\n            } else {\n                offsetLength = 2;\n            }\n        }\n\n\t\tstr = str.substring(0, r[0])\n\t\t\t+ (typeof value === 'function' ? value(str.substr(r[0], r[1]), offset, descendingOrder) : value)\n\t\t\t+ str.substring(r[0] + r[1] + offsetLength);\n\t}\n\n\treturn str;\n}\n\nfunction range(start, length) {\n    return [start, length];\n}\n\nvar numberingToken = '$';\n\n/**\n * Numbering of expanded abbreviation: finds all nodes with `$` in value\n * or attributes and replaces its occurances with repeater value\n */\nvar applyNumbering = function(tree) {\n    tree.walk(applyNumbering$1);\n    return tree;\n};\n\n/**\n * Applies numbering for given node: replaces occurances of numbering token\n * in node’s name, content and attributes\n * @param  {Node} node\n * @return {Node}\n */\nfunction applyNumbering$1(node) {\n    var repeater = findRepeater(node);\n\n    if (repeater && repeater.value != null) {\n        // NB replace numbering in nodes with explicit repeater only:\n        // it solves issues with abbreviations like `xsl:if[test=$foo]` where\n        // `$foo` is preferred output\n        var value = repeater.value;\n        var count = repeater.count;\n\n        node.name = replaceNumbering(node.name, value, count);\n        node.value = replaceNumbering(node.value, value, count);\n        node.attributes.forEach(function (attr) {\n            var copy = node.getAttribute(attr.name).clone();\n            copy.name = replaceNumbering(attr.name, value, count);\n            copy.value = replaceNumbering(attr.value, value, count);\n            node.replaceAttribute(attr.name, copy);\n        });\n    }\n\n    return node;\n}\n\n/**\n * Returns repeater object for given node\n * @param  {Node} node\n * @return {Object}\n */\nfunction findRepeater(node) {\n    while (node) {\n        if (node.repeat) {\n            return node.repeat;\n        }\n\n        node = node.parent;\n    }\n}\n\n/**\n * Replaces numbering in given string\n * @param  {String} str\n * @param  {Number} value\n * @return {String}\n */\nfunction replaceNumbering(str, value, count) {\n    // replace numbering in strings only: skip explicit wrappers that could\n    // contain unescaped numbering tokens\n    if (typeof str === 'string') {\n        var ranges = getNumberingRanges(str);\n        return replaceNumberingRanges(str, ranges, value, count);\n    }\n\n    return str;\n}\n\n/**\n * Returns numbering ranges, e.g. ranges of `$` occurances, in given string.\n * Multiple adjacent ranges are combined\n * @param  {String} str\n * @return {Array}\n */\nfunction getNumberingRanges(str) {\n    return findUnescapedTokens(str || '', numberingToken)\n    .reduce(function (out, range$$1) {\n        // skip ranges that actually belongs to output placeholder or tabstops\n        if (!/[#{]/.test(str[range$$1[0] + 1] || '')) {\n            var lastRange = out[out.length - 1];\n            if (lastRange && lastRange[0] + lastRange[1] === range$$1[0]) {\n                lastRange[1] += range$$1[1];\n            } else {\n                out.push(range$$1);\n            }\n        }\n\n        return out;\n    }, []);\n}\n\n/**\n * @param  {String} str\n * @param  {Array} ranges\n * @param  {Number} value\n * @return {String}\n */\nfunction replaceNumberingRanges(str, ranges, value, count) {\n    var replaced = replaceRanges(str, ranges, function (token, offset, descendingOrder) {\n    var _value = descendingOrder ? String(offset + count - value + 1) : String(value + offset);\n        // pad values for multiple numbering tokens, e.g. 3 for $$$ becomes 003\n        while (_value.length < token.length) {\n            _value = '0' + _value;\n        }\n        return _value;\n    });\n\n    // unescape screened numbering tokens\n    return unescapeString(replaced);\n}\n\n/**\n * Unescapes characters, screened with `\\`, in given string\n * @param  {String} str\n * @return {String}\n */\nfunction unescapeString(str) {\n    var i = 0, result = '';\n    var len = str.length;\n\n    while (i < len) {\n        var ch = str[i++];\n        result += (ch === '\\\\') ? (str[i++] || '') : ch;\n    }\n\n    return result;\n}\n\n/** Placeholder for inserted content */\nvar placeholder = '$#';\n\n/** Placeholder for caret */\nvar caret = '|';\n\nvar reUrl = /^((?:https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/;\nvar reEmail = /^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$/;\nvar reProto = /^([a-z]+:)?\\/\\//i;\n\n/**\n * Inserts content into node with implicit repeat count: this node is then\n * duplicated for each content item and content itself is inserted either into\n * deepest child or instead of a special token.\n *\n * This method uses two distinct steps: `prepare()` and `insert()` since most\n * likely these steps will be used separately to properly insert content\n * with unescaped `$` numbering markers.\n *\n * @param {Node} tree Parsed abbreviation\n * @param {String[]} content Array of content items to insert\n * @return {Node}\n */\n/**\n * Finds nodes with implicit repeat and creates `amount` copies of it in tree\n * @param  {Node} tree\n * @param  {Number} amount\n * @return {Node}\n */\nfunction prepare(tree, amount) {\n    amount = amount || 1;\n    tree.walk(function (node) {\n        if (node.repeat && node.repeat.count === null) {\n            for (var i = 0; i < amount; i++) {\n                var clone = node.clone(true);\n                clone.repeat.implicit = true;\n                clone.repeat.count = amount;\n                clone.repeat.value = i + 1;\n                clone.repeat.index = i;\n                node.parent.insertBefore(clone, node);\n            }\n\n            node.remove();\n        }\n    });\n\n    return tree;\n}\n\n/**\n * Inserts content into implicitly repeated nodes, created by `prepare()` method\n * @param  {Node} tree\n * @param  {String[]} content\n * @return {Node}\n */\nfunction insert(tree, content) {\n    if (Array.isArray(content) && content.length) {\n        var updated = false;\n        tree.walk(function (node) {\n            if (node.repeat && node.repeat.implicit) {\n                updated = true;\n                insertContent(node, content[node.repeat.index]);\n            }\n        });\n\n        if (!updated) {\n            // no node with implicit repeat was found, insert content as\n            // deepest child\n            setNodeContent(findDeepestNode(tree), content.join('\\n'));\n        }\n    }\n\n    return tree;\n}\n\n/**\n * Inserts `content` into given `node`: either replaces output placeholders\n * or inserts it into deepest child node\n * @param  {Node} node\n * @param  {String} content\n * @return {Node}\n */\nfunction insertContent(node, content) {\n\tvar inserted = insertContentIntoPlaceholder(node, content);\n\tnode.walk(function (child) { return inserted |= insertContentIntoPlaceholder(child, content); });\n\n\tif (!inserted) {\n\t\t// no placeholders were found in node, insert content into deepest child\n\t\tsetNodeContent(findDeepestNode(node), content);\n\t}\n\n\treturn node;\n}\n\n/**\n * Inserts given `content` into placeholders for given `node`. Placeholders\n * might be available in attribute values and node content\n * @param  {Node} node\n * @param  {String} content\n * @return {Boolean} Returns `true` if placeholders were found and replaced in node\n */\nfunction insertContentIntoPlaceholder(node, content) {\n\tvar state = {replaced: false};\n\n\tnode.value = replacePlaceholder(node.value, content, state);\n\tnode.attributes.forEach(function (attr) {\n\t\tif (attr.value) {\n\t\t\tnode.setAttribute(attr.name, replacePlaceholder(attr.value, content, state));\n\t\t}\n\t});\n\n\treturn state.replaced;\n}\n\n/**\n * Replaces all placeholder occurances in given `str` with `value`\n * @param  {String} str\n * @param  {String} value\n * @param  {Object} [_state] If provided, set `replaced` property of given\n * object to `true` if placeholder was found and replaced\n * @return {String}\n */\nfunction replacePlaceholder(str, value, _state) {\n\tif (typeof str === 'string') {\n\t\tvar ranges = findUnescapedTokens(str, placeholder);\n\t\tif (ranges.length) {\n\t\t\tif (_state) {\n\t\t\t\t_state.replaced = true;\n\t\t\t}\n\n\t\t\tstr = replaceRanges(str, ranges, value);\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * Finds node which is the deepest for in current node or node iteself.\n * @param  {Node} node\n * @return {Node}\n */\nfunction findDeepestNode(node) {\n\twhile (node.children.length) {\n\t\tnode = node.children[node.children.length - 1];\n\t}\n\n\treturn node;\n}\n\n/**\n * Updates content of given node\n * @param {Node} node\n * @param {String} content\n */\nfunction setNodeContent(node, content) {\n\t// find caret position and replace it with content, if possible\n\tif (node.value) {\n\t\tvar ranges = findUnescapedTokens(node.value, caret);\n\t\tif (ranges.length) {\n\t\t\tnode.value = replaceRanges(node.value, ranges, content);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (node.name.toLowerCase() === 'a' || node.hasAttribute('href')) {\n\t\t// special case: inserting content into `<a>` tag\n\t\tif (reUrl.test(content)) {\n\t\t\tnode.setAttribute('href', (reProto.test(content) ? '' : 'http://') + content);\n\t\t} else if (reEmail.test(content)) {\n\t\t\tnode.setAttribute('href', 'mailto:' + content);\n\t\t}\n\t}\n\n\tnode.value = content;\n}\n\nvar defaultOptions$1 = {\n\telement: '__',\n\tmodifier: '_'\n};\n\nvar reElement  = /^(-+)([a-z0-9]+[a-z0-9-]*)/i;\nvar reModifier = /^(_+)([a-z0-9]+[a-z0-9-_]*)/i;\nvar blockCandidates1 = function (className) { return /^[a-z]\\-/i.test(className); };\nvar blockCandidates2 = function (className) { return /^[a-z]/i.test(className); };\n\n/**\n * BEM transformer: updates class names written as `-element` and\n * `_modifier` into full class names as described in BEM specs. Also adds missing\n * class names: fir example, if node contains `.block_modifier` class, ensures\n * that element contains `.block` class as well\n */\nvar bem = function(tree, options) {\n\toptions = Object.assign({}, defaultOptions$1, options);\n\n\ttree.walk(function (node) { return expandClassNames(node); });\n\n\tvar lookup = createBlockLookup(tree);\n\ttree.walk(function (node) { return expandShortNotation(node, lookup, options); });\n\n\treturn tree;\n};\n\n/**\n * Expands existing class names in BEM notation in given `node`.\n * For example, if node contains `b__el_mod` class name, this method ensures\n * that element contains `b__el` class as well\n * @param  {Node} node\n * @param  {Object} options\n * @return {Set}\n */\nfunction expandClassNames(node, options) {\n\tvar classNames = node.classList.reduce(function (out, cl) {\n\t\t// remove all modifiers and element prefixes from class name to get a base element name\n\t\tvar ix = cl.indexOf('_');\n\t\tif (ix > 0 && !cl.startsWith('-')) {\n\t\t\tout.add(cl.slice(0, ix));\n\t\t    out.add(cl.slice(ix));\n\t\t\treturn out;\n\t\t}\n\n\t\treturn out.add(cl);\n\t}, new Set());\n\n\tif (classNames.size) {\n\t\tnode.setAttribute('class', Array.from(classNames).join(' '));\n\t}\n}\n\n/**\n * Expands short BEM notation, e.g. `-element` and `_modifier`\n * @param  {Node} node      Parsed Emmet abbreviation node\n * @param  {Map} lookup     BEM block name lookup\n * @param  {Object} options\n */\nfunction expandShortNotation(node, lookup, options) {\n\tvar classNames = node.classList.reduce(function (out, cl) {\n\t\tvar prefix, m;\n\t\tvar originalClass = cl;\n\n\t\t// parse element definition (could be only one)\n\t\tif (m = cl.match(reElement)) {\n\t\t\tprefix = getBlockName(node, lookup, m[1]) + options.element + m[2];\n\t\t\tout.add(prefix);\n\t\t\tcl = cl.slice(m[0].length);\n\t\t}\n\n\t\t// parse modifiers definitions \n\t\tif (m = cl.match(reModifier)) {\n\t\t\tif (!prefix) {\n\t\t\t\tprefix = getBlockName(node, lookup, m[1]);\n\t\t\t\tout.add(prefix);\n\t\t\t}\n\n\t\t\tout.add((\"\" + prefix + (options.modifier) + (m[2])));\n\t\t\tcl = cl.slice(m[0].length);\n\t\t}\n\n\t\tif (cl === originalClass) {\n\t\t\t// class name wasn’t modified: it’s not a BEM-specific class,\n\t\t\t// add it as-is into output\n\t\t\tout.add(originalClass);\n\t\t}\n\n\t\treturn out;\n\t}, new Set());\n\n\tvar arrClassNames = Array.from(classNames).filter(Boolean);\n\tif (arrClassNames.length) {\n\t\tnode.setAttribute('class', arrClassNames.join(' '));\n\t}\n}\n\n/**\n * Creates block name lookup for each node in given tree, e.g. finds block\n * name explicitly for each node\n * @param  {Node} tree\n * @return {Map}\n */\nfunction createBlockLookup(tree) {\n\tvar lookup = new Map();\n\n\ttree.walk(function (node) {\n\t\tvar classNames = node.classList;\n\t\tif (classNames.length) {\n\t\t\t// guess best block name from class or use parent’s block name\n\t\t\tlookup.set(node,\n\t\t\t\tfind(classNames, blockCandidates1)\n\t\t\t\t|| find(classNames, blockCandidates2)\n\t\t\t\t|| lookup.get(node.parent)\n\t\t\t);\n\t\t}\n\t});\n\n\treturn lookup;\n}\n\n/**\n * Returns block name for given `node` by `prefix`, which tells the depth of\n * of parent node lookup\n * @param  {Node} node\n * @param  {Map} lookup\n * @param  {String} prefix\n * @return {String}\n */\nfunction getBlockName(node, lookup, prefix) {\n\tvar depth = prefix.length > 1 ? prefix.length : 0;\n\n\t// NB don’t walk up to root node, stay at first root child in case of\n\t// too deep prefix\n\twhile (node.parent && node.parent.parent && depth--) {\n\t\tnode = node.parent;\n\t}\n\n\treturn lookup.get(node) || '';\n}\n\nfunction find(arr, filter) {\n\tfor(var i = 0; i < arr.length; i++){\n\t\tif (reElement.test(arr[i]) || reModifier.test(arr[i])) {\n\t\t\tbreak;\n\t\t}\n\t\tif (filter(arr[i])) {\n\t\t\treturn arr[i];\n\t\t}\n\t}\n}\n\n/**\n * JSX transformer: replaces `class` and `for` attributes with `className` and\n * `htmlFor` attributes respectively\n */\nvar jsx = function(tree) {\n\ttree.walk(function (node) {\n\t\treplace(node, 'class', 'className');\n\t\treplace(node, 'for', 'htmlFor');\n\t});\n\treturn tree;\n};\n\nfunction replace(node, oldName, newName) {\n\tvar attr = node.getAttribute(oldName);\n\tif (attr) {\n\t\tattr.name = newName;\n\t}\n}\n\nvar reSupporterNames = /^xsl:(variable|with\\-param)$/i;\n\n/**\n * XSL transformer: removes `select` attributes from certain nodes that contain\n * children\n */\nvar xsl = function(tree) {\n\ttree.walk(function (node) {\n\t\tif (reSupporterNames.test(node.name || '') && (node.children.length || node.value)) {\n\t\t\tnode.removeAttribute('select');\n\t\t}\n\t});\n\treturn tree;\n};\n\nvar supportedAddons = { bem: bem, jsx: jsx, xsl: xsl };\n\n/**\n * Runs additional transforms on given tree.\n * These transforms may introduce side-effects and unexpected result\n * so they are not applied by default, authors must specify which addons\n * in `addons` argument as `{addonName: addonOptions}`\n * @param {Node} tree Parsed Emmet abbreviation\n * @param {Object} addons Add-ons to apply and their options\n */\nvar addons = function(tree, addons) {\n    Object.keys(addons || {}).forEach(function (key) {\n        if (key in supportedAddons) {\n            var addonOpt = typeof addons[key] === 'object' ? addons[key] : null;\n            tree = tree.use(supportedAddons[key], addonOpt);\n        }\n    });\n\n    return tree;\n};\n\n/**\n * Applies basic HTML-specific transformations for given parsed abbreviation:\n * – resolve implied tag names\n * – insert repeated content\n * – resolve node numbering\n */\nvar index$1 = function(tree, content, appliedAddons) {\n    if (typeof content === 'string') {\n        content = [content];\n    } else if (content && typeof content === 'object' && !Array.isArray(content)) {\n        appliedAddons = content;\n        content = null;\n    }\n\n    return tree\n    .use(implicitTags)\n    .use(prepare, Array.isArray(content) ? content.length : null)\n    .use(applyNumbering)\n    .use(insert, content)\n    .use(addons, appliedAddons);\n};\n\nvar a = \"a[href]\";\nvar abbr = \"abbr[title]\";\nvar base = \"base[href]/\";\nvar basefont = \"basefont/\";\nvar br = \"br/\";\nvar frame = \"frame/\";\nvar hr = \"hr/\";\nvar bdo = \"bdo[dir]\";\nvar col = \"col/\";\nvar link = \"link[rel=stylesheet href]/\";\nvar meta = \"meta/\";\nvar style = \"style\";\nvar script = \"script[!src]\";\nvar img = \"img[src alt]/\";\nvar picture = \"picture\";\nvar iframe = \"iframe[src frameborder=0]\";\nvar embed = \"embed[src type]/\";\nvar object = \"object[data type]\";\nvar param = \"param[name value]/\";\nvar map = \"map[name]\";\nvar area = \"area[shape coords href alt]/\";\nvar form = \"form[action]\";\nvar label = \"label[for]\";\nvar input = \"input[type=${1:text}]/\";\nvar inp = \"input[name=${1} id=${1}]\";\nvar isindex = \"isindex/\";\nvar select = \"select[name=${1} id=${1}]\";\nvar textarea = \"textarea[name=${1} id=${1} cols=${2:30} rows=${3:10}]\";\nvar marquee = \"marquee[behavior direction]\";\nvar video = \"video[src]\";\nvar audio = \"audio[src]\";\nvar keygen = \"keygen/\";\nvar command = \"command/\";\nvar bq = \"blockquote\";\nvar fig = \"figure\";\nvar figc = \"figcaption\";\nvar pic = \"picture\";\nvar ifr = \"iframe\";\nvar emb = \"embed\";\nvar obj = \"object\";\nvar cap = \"caption\";\nvar colg = \"colgroup\";\nvar fst = \"fieldset\";\nvar btn = \"button\";\nvar optg = \"optgroup\";\nvar tarea = \"textarea\";\nvar leg = \"legend\";\nvar sect = \"section\";\nvar art = \"article\";\nvar hdr = \"header\";\nvar ftr = \"footer\";\nvar adr = \"address\";\nvar dlg = \"dialog\";\nvar str = \"strong\";\nvar prog = \"progress\";\nvar mn = \"main\";\nvar tem = \"template\";\nvar fset = \"fieldset\";\nvar datag = \"datagrid\";\nvar datal = \"datalist\";\nvar kg = \"keygen\";\nvar out = \"output\";\nvar det = \"details\";\nvar cmd = \"command\";\nvar doc = \"html[lang=${lang}]>(head>meta[charset=${charset}]+meta:vp+title{${1:Document}})+body\";\nvar c = \"{<!-- ${0} -->}\";\nvar htmlSnippet = {\n\ta: a,\n\t\"a:blank\": \"a[href='http://${0}' target='_blank' rel='noopener noreferrer']\",\n\t\"a:link\": \"a[href='http://${0}']\",\n\t\"a:mail\": \"a[href='mailto:${0}']\",\n\t\"a:tel\": \"a[href='tel:+${0}']\",\n\tabbr: abbr,\n\t\"acr|acronym\": \"acronym[title]\",\n\tbase: base,\n\tbasefont: basefont,\n\tbr: br,\n\tframe: frame,\n\thr: hr,\n\tbdo: bdo,\n\t\"bdo:r\": \"bdo[dir=rtl]\",\n\t\"bdo:l\": \"bdo[dir=ltr]\",\n\tcol: col,\n\tlink: link,\n\t\"link:css\": \"link[href='${1:style}.css']\",\n\t\"link:print\": \"link[href='${1:print}.css' media=print]\",\n\t\"link:favicon\": \"link[rel='shortcut icon' type=image/x-icon href='${1:favicon.ico}']\",\n\t\"link:mf|link:manifest\": \"link[rel='manifest' href='${1:manifest.json}']\",\n\t\"link:touch\": \"link[rel=apple-touch-icon href='${1:favicon.png}']\",\n\t\"link:rss\": \"link[rel=alternate type=application/rss+xml title=RSS href='${1:rss.xml}']\",\n\t\"link:atom\": \"link[rel=alternate type=application/atom+xml title=Atom href='${1:atom.xml}']\",\n\t\"link:im|link:import\": \"link[rel=import href='${1:component}.html']\",\n\tmeta: meta,\n\t\"meta:utf\": \"meta[http-equiv=Content-Type content='text/html;charset=UTF-8']\",\n\t\"meta:vp\": \"meta[name=viewport content='width=${1:device-width}, initial-scale=${2:1.0}']\",\n\t\"meta:compat\": \"meta[http-equiv=X-UA-Compatible content='${1:IE=7}']\",\n\t\"meta:edge\": \"meta:compat[content='${1:ie=edge}']\",\n\t\"meta:redirect\": \"meta[http-equiv=refresh content='0; url=${1:http://example.com}']\",\n\tstyle: style,\n\tscript: script,\n\t\"script:src\": \"script[src]\",\n\timg: img,\n\t\"img:s|img:srcset\": \"img[srcset src alt]\",\n\t\"img:z|img:sizes\": \"img[sizes srcset src alt]\",\n\tpicture: picture,\n\t\"src|source\": \"source/\",\n\t\"src:sc|source:src\": \"source[src type]\",\n\t\"src:s|source:srcset\": \"source[srcset]\",\n\t\"src:t|source:type\": \"source[srcset type='${1:image/}']\",\n\t\"src:z|source:sizes\": \"source[sizes srcset]\",\n\t\"src:m|source:media\": \"source[media='(${1:min-width: })' srcset]\",\n\t\"src:mt|source:media:type\": \"source:media[type='${2:image/}']\",\n\t\"src:mz|source:media:sizes\": \"source:media[sizes srcset]\",\n\t\"src:zt|source:sizes:type\": \"source[sizes srcset type='${1:image/}']\",\n\tiframe: iframe,\n\tembed: embed,\n\tobject: object,\n\tparam: param,\n\tmap: map,\n\tarea: area,\n\t\"area:d\": \"area[shape=default]\",\n\t\"area:c\": \"area[shape=circle]\",\n\t\"area:r\": \"area[shape=rect]\",\n\t\"area:p\": \"area[shape=poly]\",\n\tform: form,\n\t\"form:get\": \"form[method=get]\",\n\t\"form:post\": \"form[method=post]\",\n\tlabel: label,\n\tinput: input,\n\tinp: inp,\n\t\"input:h|input:hidden\": \"input[type=hidden name]\",\n\t\"input:t|input:text\": \"inp[type=text]\",\n\t\"input:search\": \"inp[type=search]\",\n\t\"input:email\": \"inp[type=email]\",\n\t\"input:url\": \"inp[type=url]\",\n\t\"input:p|input:password\": \"inp[type=password]\",\n\t\"input:datetime\": \"inp[type=datetime]\",\n\t\"input:date\": \"inp[type=date]\",\n\t\"input:datetime-local\": \"inp[type=datetime-local]\",\n\t\"input:month\": \"inp[type=month]\",\n\t\"input:week\": \"inp[type=week]\",\n\t\"input:time\": \"inp[type=time]\",\n\t\"input:tel\": \"inp[type=tel]\",\n\t\"input:number\": \"inp[type=number]\",\n\t\"input:color\": \"inp[type=color]\",\n\t\"input:c|input:checkbox\": \"inp[type=checkbox]\",\n\t\"input:r|input:radio\": \"inp[type=radio]\",\n\t\"input:range\": \"inp[type=range]\",\n\t\"input:f|input:file\": \"inp[type=file]\",\n\t\"input:s|input:submit\": \"input[type=submit value]\",\n\t\"input:i|input:image\": \"input[type=image src alt]\",\n\t\"input:b|input:button\": \"input[type=button value]\",\n\t\"input:reset\": \"input:button[type=reset]\",\n\tisindex: isindex,\n\tselect: select,\n\t\"select:d|select:disabled\": \"select[disabled.]\",\n\t\"opt|option\": \"option[value]\",\n\ttextarea: textarea,\n\tmarquee: marquee,\n\t\"menu:c|menu:context\": \"menu[type=context]\",\n\t\"menu:t|menu:toolbar\": \"menu[type=toolbar]\",\n\tvideo: video,\n\taudio: audio,\n\t\"html:xml\": \"html[xmlns=http://www.w3.org/1999/xhtml]\",\n\tkeygen: keygen,\n\tcommand: command,\n\t\"btn:s|button:s|button:submit\": \"button[type=submit]\",\n\t\"btn:r|button:r|button:reset\": \"button[type=reset]\",\n\t\"btn:d|button:d|button:disabled\": \"button[disabled.]\",\n\t\"fst:d|fset:d|fieldset:d|fieldset:disabled\": \"fieldset[disabled.]\",\n\tbq: bq,\n\tfig: fig,\n\tfigc: figc,\n\tpic: pic,\n\tifr: ifr,\n\temb: emb,\n\tobj: obj,\n\tcap: cap,\n\tcolg: colg,\n\tfst: fst,\n\tbtn: btn,\n\toptg: optg,\n\ttarea: tarea,\n\tleg: leg,\n\tsect: sect,\n\tart: art,\n\thdr: hdr,\n\tftr: ftr,\n\tadr: adr,\n\tdlg: dlg,\n\tstr: str,\n\tprog: prog,\n\tmn: mn,\n\ttem: tem,\n\tfset: fset,\n\tdatag: datag,\n\tdatal: datal,\n\tkg: kg,\n\tout: out,\n\tdet: det,\n\tcmd: cmd,\n\t\"ri:d|ri:dpr\": \"img:s\",\n\t\"ri:v|ri:viewport\": \"img:z\",\n\t\"ri:a|ri:art\": \"pic>src:m+img\",\n\t\"ri:t|ri:type\": \"pic>src:t+img\",\n\t\"!!!\": \"{<!DOCTYPE html>}\",\n\tdoc: doc,\n\t\"!|html:5\": \"!!!+doc\",\n\tc: c,\n\t\"cc:ie\": \"{<!--[if IE]>${0}<![endif]-->}\",\n\t\"cc:noie\": \"{<!--[if !IE]><!-->${0}<!--<![endif]-->}\"\n};\n\nvar latin = {\n\t\"common\": [\"lorem\", \"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipisicing\", \"elit\"],\n\t\"words\": [\"exercitationem\", \"perferendis\", \"perspiciatis\", \"laborum\", \"eveniet\",\n\t\t\"sunt\", \"iure\", \"nam\", \"nobis\", \"eum\", \"cum\", \"officiis\", \"excepturi\",\n\t\t\"odio\", \"consectetur\", \"quasi\", \"aut\", \"quisquam\", \"vel\", \"eligendi\",\n\t\t\"itaque\", \"non\", \"odit\", \"tempore\", \"quaerat\", \"dignissimos\",\n\t\t\"facilis\", \"neque\", \"nihil\", \"expedita\", \"vitae\", \"vero\", \"ipsum\",\n\t\t\"nisi\", \"animi\", \"cumque\", \"pariatur\", \"velit\", \"modi\", \"natus\",\n\t\t\"iusto\", \"eaque\", \"sequi\", \"illo\", \"sed\", \"ex\", \"et\", \"voluptatibus\",\n\t\t\"tempora\", \"veritatis\", \"ratione\", \"assumenda\", \"incidunt\", \"nostrum\",\n\t\t\"placeat\", \"aliquid\", \"fuga\", \"provident\", \"praesentium\", \"rem\",\n\t\t\"necessitatibus\", \"suscipit\", \"adipisci\", \"quidem\", \"possimus\",\n\t\t\"voluptas\", \"debitis\", \"sint\", \"accusantium\", \"unde\", \"sapiente\",\n\t\t\"voluptate\", \"qui\", \"aspernatur\", \"laudantium\", \"soluta\", \"amet\",\n\t\t\"quo\", \"aliquam\", \"saepe\", \"culpa\", \"libero\", \"ipsa\", \"dicta\",\n\t\t\"reiciendis\", \"nesciunt\", \"doloribus\", \"autem\", \"impedit\", \"minima\",\n\t\t\"maiores\", \"repudiandae\", \"ipsam\", \"obcaecati\", \"ullam\", \"enim\",\n\t\t\"totam\", \"delectus\", \"ducimus\", \"quis\", \"voluptates\", \"dolores\",\n\t\t\"molestiae\", \"harum\", \"dolorem\", \"quia\", \"voluptatem\", \"molestias\",\n\t\t\"magni\", \"distinctio\", \"omnis\", \"illum\", \"dolorum\", \"voluptatum\", \"ea\",\n\t\t\"quas\", \"quam\", \"corporis\", \"quae\", \"blanditiis\", \"atque\", \"deserunt\",\n\t\t\"laboriosam\", \"earum\", \"consequuntur\", \"hic\", \"cupiditate\",\n\t\t\"quibusdam\", \"accusamus\", \"ut\", \"rerum\", \"error\", \"minus\", \"eius\",\n\t\t\"ab\", \"ad\", \"nemo\", \"fugit\", \"officia\", \"at\", \"in\", \"id\", \"quos\",\n\t\t\"reprehenderit\", \"numquam\", \"iste\", \"fugiat\", \"sit\", \"inventore\",\n\t\t\"beatae\", \"repellendus\", \"magnam\", \"recusandae\", \"quod\", \"explicabo\",\n\t\t\"doloremque\", \"aperiam\", \"consequatur\", \"asperiores\", \"commodi\",\n\t\t\"optio\", \"dolor\", \"labore\", \"temporibus\", \"repellat\", \"veniam\",\n\t\t\"architecto\", \"est\", \"esse\", \"mollitia\", \"nulla\", \"a\", \"similique\",\n\t\t\"eos\", \"alias\", \"dolore\", \"tenetur\", \"deleniti\", \"porro\", \"facere\",\n\t\t\"maxime\", \"corrupti\"]\n};\n\nvar ru = {\n\t\"common\": [\"далеко-далеко\", \"за\", \"словесными\", \"горами\", \"в стране\", \"гласных\", \"и согласных\", \"живут\", \"рыбные\", \"тексты\"],\n\t\"words\": [\"вдали\", \"от всех\", \"они\", \"буквенных\", \"домах\", \"на берегу\", \"семантика\",\n\t\t\"большого\", \"языкового\", \"океана\", \"маленький\", \"ручеек\", \"даль\",\n\t\t\"журчит\", \"по всей\", \"обеспечивает\", \"ее\",\"всеми\", \"необходимыми\",\n\t\t\"правилами\", \"эта\", \"парадигматическая\", \"страна\", \"которой\", \"жаренные\",\n\t\t\"предложения\", \"залетают\", \"прямо\", \"рот\", \"даже\", \"всемогущая\",\n\t\t\"пунктуация\", \"не\", \"имеет\", \"власти\", \"над\", \"рыбными\", \"текстами\",\n\t\t\"ведущими\", \"безорфографичный\", \"образ\", \"жизни\", \"однажды\", \"одна\",\n\t\t\"маленькая\", \"строчка\",\"рыбного\", \"текста\", \"имени\", \"lorem\", \"ipsum\",\n\t\t\"решила\", \"выйти\", \"большой\", \"мир\", \"грамматики\", \"великий\", \"оксмокс\",\n\t\t\"предупреждал\", \"о\", \"злых\", \"запятых\", \"диких\", \"знаках\", \"вопроса\",\n\t\t\"коварных\", \"точках\", \"запятой\", \"но\", \"текст\", \"дал\", \"сбить\",\n\t\t\"себя\", \"толку\", \"он\", \"собрал\", \"семь\", \"своих\", \"заглавных\", \"букв\",\n\t\t\"подпоясал\", \"инициал\", \"за\", \"пояс\", \"пустился\", \"дорогу\",\n\t\t\"взобравшись\", \"первую\", \"вершину\", \"курсивных\", \"гор\", \"бросил\",\n\t\t\"последний\", \"взгляд\", \"назад\", \"силуэт\", \"своего\", \"родного\", \"города\",\n\t\t\"буквоград\", \"заголовок\", \"деревни\", \"алфавит\", \"подзаголовок\", \"своего\",\n\t\t\"переулка\", \"грустный\", \"реторический\", \"вопрос\", \"скатился\", \"его\",\n\t\t\"щеке\", \"продолжил\", \"свой\", \"путь\", \"дороге\", \"встретил\", \"рукопись\",\n\t\t\"она\", \"предупредила\",  \"моей\", \"все\", \"переписывается\", \"несколько\",\n\t\t\"раз\", \"единственное\", \"что\", \"меня\", \"осталось\", \"это\", \"приставка\",\n\t\t\"возвращайся\", \"ты\", \"лучше\", \"свою\", \"безопасную\", \"страну\", \"послушавшись\",\n\t\t\"рукописи\", \"наш\", \"продолжил\", \"свой\", \"путь\", \"вскоре\", \"ему\",\n\t\t\"повстречался\", \"коварный\", \"составитель\", \"рекламных\", \"текстов\",\n\t\t\"напоивший\", \"языком\", \"речью\", \"заманивший\", \"свое\", \"агентство\",\n\t\t\"которое\", \"использовало\", \"снова\", \"снова\", \"своих\", \"проектах\",\n\t\t\"если\", \"переписали\", \"то\", \"живет\", \"там\", \"до\", \"сих\", \"пор\"]\n};\n\nvar sp = {\n\t\"common\": [\"mujer\", \"uno\", \"dolor\", \"más\", \"de\", \"poder\", \"mismo\", \"si\"],\n\t\"words\": [\"ejercicio\", \"preferencia\", \"perspicacia\", \"laboral\", \"paño\",\n\t\t\"suntuoso\", \"molde\", \"namibia\", \"planeador\", \"mirar\", \"demás\", \"oficinista\", \"excepción\",\n\t\t\"odio\", \"consecuencia\", \"casi\", \"auto\", \"chicharra\", \"velo\", \"elixir\",\n\t\t\"ataque\", \"no\", \"odio\", \"temporal\", \"cuórum\", \"dignísimo\",\n\t\t\"facilismo\", \"letra\", \"nihilista\", \"expedición\", \"alma\", \"alveolar\", \"aparte\",\n\t\t\"león\", \"animal\", \"como\", \"paria\", \"belleza\", \"modo\", \"natividad\",\n\t\t\"justo\", \"ataque\", \"séquito\", \"pillo\", \"sed\", \"ex\", \"y\", \"voluminoso\",\n\t\t\"temporalidad\", \"verdades\", \"racional\", \"asunción\", \"incidente\", \"marejada\",\n\t\t\"placenta\", \"amanecer\", \"fuga\", \"previsor\", \"presentación\", \"lejos\",\n\t\t\"necesariamente\", \"sospechoso\", \"adiposidad\", \"quindío\", \"pócima\",\n\t\t\"voluble\", \"débito\", \"sintió\", \"accesorio\", \"falda\", \"sapiencia\",\n\t\t\"volutas\", \"queso\", \"permacultura\", \"laudo\", \"soluciones\", \"entero\",\n\t\t\"pan\", \"litro\", \"tonelada\", \"culpa\", \"libertario\", \"mosca\", \"dictado\",\n\t\t\"reincidente\", \"nascimiento\", \"dolor\", \"escolar\", \"impedimento\", \"mínima\",\n\t\t\"mayores\", \"repugnante\", \"dulce\", \"obcecado\", \"montaña\", \"enigma\",\n\t\t\"total\", \"deletéreo\", \"décima\", \"cábala\", \"fotografía\", \"dolores\",\n\t\t\"molesto\", \"olvido\", \"paciencia\", \"resiliencia\", \"voluntad\", \"molestias\",\n\t\t\"magnífico\", \"distinción\", \"ovni\", \"marejada\", \"cerro\", \"torre\", \"y\",\n\t\t\"abogada\", \"manantial\", \"corporal\", \"agua\", \"crepúsculo\", \"ataque\", \"desierto\",\n\t\t\"laboriosamente\", \"angustia\", \"afortunado\", \"alma\", \"encefalograma\",\n\t\t\"materialidad\", \"cosas\", \"o\", \"renuncia\", \"error\", \"menos\", \"conejo\",\n\t\t\"abadía\", \"analfabeto\", \"remo\", \"fugacidad\", \"oficio\", \"en\", \"almácigo\", \"vos\", \"pan\",\n\t\t\"represión\", \"números\", \"triste\", \"refugiado\", \"trote\", \"inventor\",\n\t\t\"corchea\", \"repelente\", \"magma\", \"recusado\", \"patrón\", \"explícito\",\n\t\t\"paloma\", \"síndrome\", \"inmune\", \"autoinmune\", \"comodidad\",\n\t\t\"ley\", \"vietnamita\", \"demonio\", \"tasmania\", \"repeler\", \"apéndice\",\n\t\t\"arquitecto\", \"columna\", \"yugo\", \"computador\", \"mula\", \"a\", \"propósito\",\n\t\t\"fantasía\", \"alias\", \"rayo\", \"tenedor\", \"deleznable\", \"ventana\", \"cara\",\n\t\t\"anemia\", \"corrupto\"]\n};\n\nvar langs = { latin: latin, ru: ru, sp: sp };\n\nvar defaultOptions = {\n\twordCount: 30,\n\tskipCommon: false,\n\tlang: 'latin'\n};\n\n/**\n * Replaces given parsed Emmet abbreviation node with nodes filled with\n * Lorem Ipsum stub text.\n * @param {Node} node\n * @return {Node}\n */\nvar index = function(node, options) {\n\toptions = Object.assign({}, defaultOptions, options);\n\tvar dict = langs[options.lang] || langs.latin;\n    var startWithCommon = !options.skipCommon && !isRepeating(node);\n\n\tif (!node.repeat && !isRoot(node.parent)) {\n\t\t// non-repeating element, insert text stub as a content of parent node\n\t\t// and remove current one\n\t\tnode.parent.value = paragraph(dict, options.wordCount, startWithCommon);\n\t\tnode.remove();\n\t} else {\n\t\t// Replace named node with generated content\n\t\tnode.value = paragraph(dict, options.wordCount, startWithCommon);\n\t\tnode.name = node.parent.name ? resolveImplicitName(node.parent.name) : null;\n\t}\n\n\treturn node;\n};\n\nfunction isRoot(node) {\n\treturn !node.parent;\n}\n\n/**\n * Returns random integer between <code>from</code> and <code>to</code> values\n * @param {Number} from\n * @param {Number} to\n * @returns {Number}\n */\nfunction rand(from, to) {\n\treturn Math.floor(Math.random() * (to - from) + from);\n}\n\n/**\n * @param {Array} arr\n * @param {Number} count\n * @returns {Array}\n */\nfunction sample(arr, count) {\n\tvar len = arr.length;\n\tvar iterations = Math.min(len, count);\n\tvar result = new Set();\n\n\twhile (result.size < iterations) {\n\t\tresult.add(arr[rand(0, len)]);\n\t}\n\n\treturn Array.from(result);\n}\n\nfunction choice(val) {\n\treturn val[rand(0, val.length - 1)];\n}\n\nfunction sentence(words, end) {\n\tif (words.length) {\n\t\twords = [capitalize(words[0])].concat(words.slice(1));\n\t}\n\n\treturn words.join(' ') + (end || choice('?!...')); // more dots than question marks\n}\n\nfunction capitalize(word) {\n\treturn word[0].toUpperCase() + word.slice(1);\n}\n\n/**\n * Insert commas at randomly selected words. This function modifies values\n * inside <code>words</code> array\n * @param {Array} words\n */\nfunction insertCommas(words) {\n\tif (words.length < 2) {\n\t\treturn words;\n\t}\n\n\twords = words.slice();\n\tvar len = words.length;\n\tvar hasComma = /,$/;\n\tvar totalCommas = 0;\n\n\tif (len > 3 && len <= 6) {\n\t\ttotalCommas = rand(0, 1);\n\t} else if (len > 6 && len <= 12) {\n\t\ttotalCommas = rand(0, 2);\n\t} else {\n\t\ttotalCommas = rand(1, 4);\n\t}\n\n\tfor (var i = 0, pos = (void 0); i < totalCommas; i++) {\n\t\tpos = rand(0, len - 2);\n\t\tif (!hasComma.test(words[pos])) {\n\t\t\twords[pos] += ',';\n\t\t}\n\t}\n\n\treturn words;\n}\n\n/**\n * Generate a paragraph of \"Lorem ipsum\" text\n * @param {Object} dict Words dictionary (see `lang/*.json`)\n * @param {Number} wordCount Words count in paragraph\n * @param {Boolean} startWithCommon Should paragraph start with common\n * \"lorem ipsum\" sentence.\n * @returns {String}\n */\nfunction paragraph(dict, wordCount, startWithCommon) {\n\tvar result = [];\n\tvar totalWords = 0;\n\tvar words;\n\n\tif (startWithCommon && dict.common) {\n\t\twords = dict.common.slice(0, wordCount);\n\t\ttotalWords += words.length;\n\t\tresult.push(sentence(insertCommas(words), '.'));\n\t}\n\n\twhile (totalWords < wordCount) {\n\t\twords = sample(dict.words, Math.min(rand(2, 30), wordCount - totalWords));\n\t\ttotalWords += words.length;\n\t\tresult.push(sentence(insertCommas(words)));\n\t}\n\n\treturn result.join(' ');\n}\n\n/**\n * Check if given node is in repeating context, e.g. node itself or one of its\n * parent is repeated\n * @param  {Node}  node\n * @return {Boolean}\n */\nfunction isRepeating(node) {\n    while (node.parent) {\n        if (node.repeat && node.repeat.value && node.repeat.value > 1) {\n            return true;\n        }\n\n        node = node.parent;\n    }\n\n    return false;\n}\n\n/**\n * Replaces all unescaped ${variable} occurances in given parsed abbreviation\n * `tree` with values provided in `variables` hash. Precede `$` with `\\` to\n * escape it and skip replacement\n * @param {Node} tree Parsed abbreviation tree\n * @param {Object} variables Variables values\n * @return {Node}\n */\nfunction replaceVariables(tree, variables) {\n\tvariables = variables || {};\n    tree.walk(function (node) { return replaceInNode(node, variables); });\n    return tree;\n}\n\nfunction replaceInNode(node, variables) {\n    // Replace variables in attributes.\n    var attrs = node.attributes;\n\n    for (var i = 0, il = attrs.length; i < il; i++) {\n        var attr = attrs[i];\n        if (typeof attr.value === 'string') {\n            node.setAttribute(attr.name, replaceInString(attr.value, variables));\n        }\n    }\n\n    if (node.value != null) {\n        node.value = replaceInString(node.value, variables);\n    }\n\n    return node;\n}\n\n/**\n * Replaces all unescaped `${variable}` occurances in given string with values\n * from `variables` object\n * @param  {String} string\n * @param  {Object} variables\n * @return {String}\n */\nfunction replaceInString(string, variables) {\n    var model = createModel(string);\n    var offset = 0;\n    var output = '';\n\n    for (var i = 0, il = model.variables.length; i < il; i++) {\n        var v = model.variables[i];\n        var value = v.name in variables ? variables[v.name] : v.name;\n        if (typeof value === 'function') {\n            value = value(model.string, v, offset + v.location);\n        }\n\n        output += model.string.slice(offset, v.location) + value;\n        offset = v.location + v.length;\n    }\n\n    return output + model.string.slice(offset);\n}\n\n/**\n * Creates variable model from given string. The model contains a `string` with\n * all escaped variable tokens written without escape symbol and `variables`\n * property with all unescaped variables and their ranges\n * @param  {String} string\n * @return {Object}\n */\nfunction createModel(string) {\n    var reVariable = /\\$\\{([a-z][\\w\\-]*)\\}/ig;\n    var escapeCharCode = 92; // `\\` symbol\n    var variables = [];\n\n    // We have to replace unescaped (e.g. not preceded with `\\`) tokens.\n    // Instead of writing a stream parser, we’ll cut some edges here:\n    // 1. Find all tokens\n    // 2. Walk string char-by-char and resolve only tokens that are not escaped\n    var tokens = new Map();\n    var m;\n    while (m = reVariable.exec(string)) {\n        tokens.set(m.index, m);\n    }\n\n    if (tokens.size) {\n        var start = 0, pos = 0, len = string.length;\n        var output = '';\n        while (pos < len) {\n            if (string.charCodeAt(pos) === escapeCharCode && tokens.has(pos + 1)) {\n                // Found escape symbol that escapes variable: we should\n                // omit this symbol in output string and skip variable\n                var token = tokens.get(pos + 1);\n                output += string.slice(start, pos) + token[0];\n                start = pos = token.index + token[0].length;\n                tokens.delete(pos + 1);\n                continue;\n            }\n\n            pos++;\n        }\n\n        string = output + string.slice(start);\n\n        // Not using `.map()` here to reduce memory allocations\n        var validMatches = Array.from(tokens.values());\n        for (var i = 0, il = validMatches.length; i < il; i++) {\n            var token$1 = validMatches[i];\n            variables.push({\n                name: token$1[1],\n                location: token$1.index,\n                length: token$1[0].length\n            });\n        }\n    }\n\n    return {string: string, variables: variables};\n}\n\n// https://github.com/microsoft/vscode-emmet-helper/blob/dc7ca8f70970cdc2638507c5e886e9bc955bbc52/src/data.ts#L5\nvar htmlData = {\n    \"tags\": [\n        \"body\", \"head\", \"html\",\n        \"address\", \"blockquote\", \"dd\", \"div\", \"section\", \"article\", \"aside\", \"header\", \"footer\", \"nav\", \"menu\", \"dl\", \"dt\", \"fieldset\", \"form\", \"frame\", \"frameset\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"iframe\", \"noframes\", \"object\", \"ol\", \"p\", \"ul\", \"applet\", \"center\", \"dir\", \"hr\", \"pre\",\n        \"a\", \"abbr\", \"acronym\", \"area\", \"b\", \"base\", \"basefont\", \"bdo\", \"big\", \"br\", \"button\", \"caption\", \"cite\", \"code\", \"col\", \"colgroup\", \"del\", \"dfn\", \"em\", \"font\", \"head\", \"html\", \"i\", \"img\", \"input\", \"ins\", \"isindex\", \"kbd\", \"label\", \"legend\", \"li\", \"link\", \"map\", \"meta\", \"noscript\", \"optgroup\", \"option\", \"param\", \"q\", \"s\", \"samp\", \"script\", \"select\", \"small\", \"span\", \"strike\", \"strong\", \"style\", \"sub\", \"sup\", \"table\", \"tbody\", \"td\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"title\", \"tr\", \"tt\", \"u\", \"var\",\n        \"canvas\", \"main\", \"figure\", \"plaintext\"\n    ]\n};\n\nhtmlData.tags.forEach(function (tag) {\n    return (htmlSnippet[tag] =\n        htmlSnippet[tag] || tag);\n});\nvar registry = new SnippetsRegistry(htmlSnippet);\n// add lorem\nvar reLorem = /^lorem([a-z]*)(\\d*)$/i;\nregistry.get(0).set(reLorem, function (node) {\n    var option = {};\n    var _a = node.name.match(reLorem), lang = _a[1], wordCount = _a[2];\n    if (lang)\n        { option.lang = lang; }\n    if (wordCount)\n        { option.wordCount = +wordCount; }\n    return index(node, option);\n});\nvar markupSnippetKeys = registry\n    .all({ type: \"string\" })\n    .map(function (snippet) { return snippet.key; });\n// add extra lorem\nmarkupSnippetKeys.push(\"lorem\");\nvar option = __assign(__assign({}, defaultOption), { snippets: registry, profile: new Profile(), variables: {\n        lang: \"en\",\n        locale: \"en-US\",\n        charset: \"UTF-8\",\n    } });\nfunction expand(abbr) {\n    var tree = index$5(abbr)\n        .use(index$3, option.snippets)\n        .use(replaceVariables, option.variables)\n        .use(index$1, null, null);\n    return index$2(tree, option.profile, option);\n}\nfunction getHTMLLegalEmmetSets(str, isJSX) {\n    if (isJSX === void 0) { isJSX = false; }\n    // empty or ends with white space, illegal\n    if (str === \"\" || str.match(/\\s$/))\n        { return; }\n    str = str.trim();\n    // deal with white space, this determines how many characters needed to be emmeted\n    // e.g. `a span div` => `a span <div></div>` skip `a span `\n    // e.g. `a{111 222}` => `<a href=\"\">111 222</a>`\n    // conclusion: white spaces are only allowed between `[]` or `{}`\n    // note: quotes also allowed white spaces, but quotes must in `[]` or `{}`, so skip it\n    var step = {\n        \"{\": 1,\n        \"}\": -1,\n        \"[\": 1,\n        \"]\": -1,\n    };\n    var pair = 0;\n    for (var i = str.length - 1; i > 0; i--) {\n        pair += step[str[i]] || 0;\n        if (str[i].match(/\\s/) && pair >= 0) {\n            // illegal white space detected\n            str = str.substr(i + 1);\n            break;\n        }\n    }\n    // starts with illegal character\n    // note: emmet self allowed number element like `<1></1>`,\n    // but obviously it's not fit with html standard, so skip it\n    if (!str.match(/^[a-zA-Z[(.#!]/))\n        { return; }\n    // provide all possible abbreviation completions\n    var strlen = str.length;\n    // match all snippet starts with the given `str`\n    var strArr = markupSnippetKeys.filter(function (key) { return key.length >= strlen && key.slice(0, strlen) === str; });\n    // append `str` itself when not all letters and numbers, uppercase letter was allowed in JSX\n    if (!(isJSX ? /^[a-z0-9]+$/ : /^[a-z0-9]+$/i).test(str)) {\n        strArr.push(str);\n    }\n    try {\n        return strArr.map(function (s) { return ({\n            emmetText: s,\n            expandText: expand(s),\n        }); });\n    }\n    catch (_a) {\n        return;\n    }\n}\n/**\n * almost the same behavior as VSCode's builtin emmet.\n * only available when string before text cursor(caret) matches emmet rules.\n */\nfunction emmetHTML(monaco, languages) {\n    if (monaco === void 0) { monaco = window.monaco; }\n    if (languages === void 0) { languages = [\"html\"]; }\n    if (!checkMonacoExists(monaco))\n        { return; }\n    return onCompletion(monaco, languages, true, function (tokens, index) {\n        return (tokens[index].type === \"\" &&\n            (index === 0 || tokens[index - 1].type === \"delimiter.html\")) ||\n            // #7 compatible with https://github.com/NeekSandhu/monaco-textmate\n            tokens[0].type === \"text.html.basic\";\n    }, getHTMLLegalEmmetSets);\n}\n\n/**\n * almost the same behavior as VSCode's builtin emmet.\n * only available when string before text cursor(caret) matches emmet rules.\n */\nfunction emmetJSX(monaco, languages) {\n    if (monaco === void 0) { monaco = window.monaco; }\n    if (languages === void 0) { languages = [\"javascript\"]; }\n    if (!checkMonacoExists(monaco))\n        { return; }\n    return onCompletion(monaco, languages, true, \n    // This is a rough token check, because monaco doesn't have accurate tokens as vscode does\n    function (tokens, index) {\n        return [\n            \"identifier.js\",\n            \"type.identifier.js\",\n            \"identifier.ts\",\n            \"type.identifier.ts\" ].includes(tokens[index].type);\n    }, function (str) { return getHTMLLegalEmmetSets(str, true); });\n}\n\nexport { emmetCSS, emmetHTML, emmetJSX, expand$1 as expandCSS, expand as expandHTML };\n","/* Web Font Loader v1.6.28 - (c) Adobe Systems, Google. License: Apache 2.0 */(function(){function aa(a,b,c){return a.call.apply(a.bind,arguments)}function ba(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}}function p(a,b,c){p=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?aa:ba;return p.apply(null,arguments)}var q=Date.now||function(){return+new Date};function ca(a,b){this.a=a;this.o=b||a;this.c=this.o.document}var da=!!window.FontFace;function t(a,b,c,d){b=a.c.createElement(b);if(c)for(var e in c)c.hasOwnProperty(e)&&(\"style\"==e?b.style.cssText=c[e]:b.setAttribute(e,c[e]));d&&b.appendChild(a.c.createTextNode(d));return b}function u(a,b,c){a=a.c.getElementsByTagName(b)[0];a||(a=document.documentElement);a.insertBefore(c,a.lastChild)}function v(a){a.parentNode&&a.parentNode.removeChild(a)}\nfunction w(a,b,c){b=b||[];c=c||[];for(var d=a.className.split(/\\s+/),e=0;e<b.length;e+=1){for(var f=!1,g=0;g<d.length;g+=1)if(b[e]===d[g]){f=!0;break}f||d.push(b[e])}b=[];for(e=0;e<d.length;e+=1){f=!1;for(g=0;g<c.length;g+=1)if(d[e]===c[g]){f=!0;break}f||b.push(d[e])}a.className=b.join(\" \").replace(/\\s+/g,\" \").replace(/^\\s+|\\s+$/,\"\")}function y(a,b){for(var c=a.className.split(/\\s+/),d=0,e=c.length;d<e;d++)if(c[d]==b)return!0;return!1}\nfunction ea(a){return a.o.location.hostname||a.a.location.hostname}function z(a,b,c){function d(){m&&e&&f&&(m(g),m=null)}b=t(a,\"link\",{rel:\"stylesheet\",href:b,media:\"all\"});var e=!1,f=!0,g=null,m=c||null;da?(b.onload=function(){e=!0;d()},b.onerror=function(){e=!0;g=Error(\"Stylesheet failed to load\");d()}):setTimeout(function(){e=!0;d()},0);u(a,\"head\",b)}\nfunction A(a,b,c,d){var e=a.c.getElementsByTagName(\"head\")[0];if(e){var f=t(a,\"script\",{src:b}),g=!1;f.onload=f.onreadystatechange=function(){g||this.readyState&&\"loaded\"!=this.readyState&&\"complete\"!=this.readyState||(g=!0,c&&c(null),f.onload=f.onreadystatechange=null,\"HEAD\"==f.parentNode.tagName&&e.removeChild(f))};e.appendChild(f);setTimeout(function(){g||(g=!0,c&&c(Error(\"Script load timeout\")))},d||5E3);return f}return null};function B(){this.a=0;this.c=null}function C(a){a.a++;return function(){a.a--;D(a)}}function E(a,b){a.c=b;D(a)}function D(a){0==a.a&&a.c&&(a.c(),a.c=null)};function F(a){this.a=a||\"-\"}F.prototype.c=function(a){for(var b=[],c=0;c<arguments.length;c++)b.push(arguments[c].replace(/[\\W_]+/g,\"\").toLowerCase());return b.join(this.a)};function G(a,b){this.c=a;this.f=4;this.a=\"n\";var c=(b||\"n4\").match(/^([nio])([1-9])$/i);c&&(this.a=c[1],this.f=parseInt(c[2],10))}function fa(a){return H(a)+\" \"+(a.f+\"00\")+\" 300px \"+I(a.c)}function I(a){var b=[];a=a.split(/,\\s*/);for(var c=0;c<a.length;c++){var d=a[c].replace(/['\"]/g,\"\");-1!=d.indexOf(\" \")||/^\\d/.test(d)?b.push(\"'\"+d+\"'\"):b.push(d)}return b.join(\",\")}function J(a){return a.a+a.f}function H(a){var b=\"normal\";\"o\"===a.a?b=\"oblique\":\"i\"===a.a&&(b=\"italic\");return b}\nfunction ga(a){var b=4,c=\"n\",d=null;a&&((d=a.match(/(normal|oblique|italic)/i))&&d[1]&&(c=d[1].substr(0,1).toLowerCase()),(d=a.match(/([1-9]00|normal|bold)/i))&&d[1]&&(/bold/i.test(d[1])?b=7:/[1-9]00/.test(d[1])&&(b=parseInt(d[1].substr(0,1),10))));return c+b};function ha(a,b){this.c=a;this.f=a.o.document.documentElement;this.h=b;this.a=new F(\"-\");this.j=!1!==b.events;this.g=!1!==b.classes}function ia(a){a.g&&w(a.f,[a.a.c(\"wf\",\"loading\")]);K(a,\"loading\")}function L(a){if(a.g){var b=y(a.f,a.a.c(\"wf\",\"active\")),c=[],d=[a.a.c(\"wf\",\"loading\")];b||c.push(a.a.c(\"wf\",\"inactive\"));w(a.f,c,d)}K(a,\"inactive\")}function K(a,b,c){if(a.j&&a.h[b])if(c)a.h[b](c.c,J(c));else a.h[b]()};function ja(){this.c={}}function ka(a,b,c){var d=[],e;for(e in b)if(b.hasOwnProperty(e)){var f=a.c[e];f&&d.push(f(b[e],c))}return d};function M(a,b){this.c=a;this.f=b;this.a=t(this.c,\"span\",{\"aria-hidden\":\"true\"},this.f)}function N(a){u(a.c,\"body\",a.a)}function O(a){return\"display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:\"+I(a.c)+\";\"+(\"font-style:\"+H(a)+\";font-weight:\"+(a.f+\"00\")+\";\")};function P(a,b,c,d,e,f){this.g=a;this.j=b;this.a=d;this.c=c;this.f=e||3E3;this.h=f||void 0}P.prototype.start=function(){var a=this.c.o.document,b=this,c=q(),d=new Promise(function(d,e){function f(){q()-c>=b.f?e():a.fonts.load(fa(b.a),b.h).then(function(a){1<=a.length?d():setTimeout(f,25)},function(){e()})}f()}),e=null,f=new Promise(function(a,d){e=setTimeout(d,b.f)});Promise.race([f,d]).then(function(){e&&(clearTimeout(e),e=null);b.g(b.a)},function(){b.j(b.a)})};function Q(a,b,c,d,e,f,g){this.v=a;this.B=b;this.c=c;this.a=d;this.s=g||\"BESbswy\";this.f={};this.w=e||3E3;this.u=f||null;this.m=this.j=this.h=this.g=null;this.g=new M(this.c,this.s);this.h=new M(this.c,this.s);this.j=new M(this.c,this.s);this.m=new M(this.c,this.s);a=new G(this.a.c+\",serif\",J(this.a));a=O(a);this.g.a.style.cssText=a;a=new G(this.a.c+\",sans-serif\",J(this.a));a=O(a);this.h.a.style.cssText=a;a=new G(\"serif\",J(this.a));a=O(a);this.j.a.style.cssText=a;a=new G(\"sans-serif\",J(this.a));a=\nO(a);this.m.a.style.cssText=a;N(this.g);N(this.h);N(this.j);N(this.m)}var R={D:\"serif\",C:\"sans-serif\"},S=null;function T(){if(null===S){var a=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent);S=!!a&&(536>parseInt(a[1],10)||536===parseInt(a[1],10)&&11>=parseInt(a[2],10))}return S}Q.prototype.start=function(){this.f.serif=this.j.a.offsetWidth;this.f[\"sans-serif\"]=this.m.a.offsetWidth;this.A=q();U(this)};\nfunction la(a,b,c){for(var d in R)if(R.hasOwnProperty(d)&&b===a.f[R[d]]&&c===a.f[R[d]])return!0;return!1}function U(a){var b=a.g.a.offsetWidth,c=a.h.a.offsetWidth,d;(d=b===a.f.serif&&c===a.f[\"sans-serif\"])||(d=T()&&la(a,b,c));d?q()-a.A>=a.w?T()&&la(a,b,c)&&(null===a.u||a.u.hasOwnProperty(a.a.c))?V(a,a.v):V(a,a.B):ma(a):V(a,a.v)}function ma(a){setTimeout(p(function(){U(this)},a),50)}function V(a,b){setTimeout(p(function(){v(this.g.a);v(this.h.a);v(this.j.a);v(this.m.a);b(this.a)},a),0)};function W(a,b,c){this.c=a;this.a=b;this.f=0;this.m=this.j=!1;this.s=c}var X=null;W.prototype.g=function(a){var b=this.a;b.g&&w(b.f,[b.a.c(\"wf\",a.c,J(a).toString(),\"active\")],[b.a.c(\"wf\",a.c,J(a).toString(),\"loading\"),b.a.c(\"wf\",a.c,J(a).toString(),\"inactive\")]);K(b,\"fontactive\",a);this.m=!0;na(this)};\nW.prototype.h=function(a){var b=this.a;if(b.g){var c=y(b.f,b.a.c(\"wf\",a.c,J(a).toString(),\"active\")),d=[],e=[b.a.c(\"wf\",a.c,J(a).toString(),\"loading\")];c||d.push(b.a.c(\"wf\",a.c,J(a).toString(),\"inactive\"));w(b.f,d,e)}K(b,\"fontinactive\",a);na(this)};function na(a){0==--a.f&&a.j&&(a.m?(a=a.a,a.g&&w(a.f,[a.a.c(\"wf\",\"active\")],[a.a.c(\"wf\",\"loading\"),a.a.c(\"wf\",\"inactive\")]),K(a,\"active\")):L(a.a))};function oa(a){this.j=a;this.a=new ja;this.h=0;this.f=this.g=!0}oa.prototype.load=function(a){this.c=new ca(this.j,a.context||this.j);this.g=!1!==a.events;this.f=!1!==a.classes;pa(this,new ha(this.c,a),a)};\nfunction qa(a,b,c,d,e){var f=0==--a.h;(a.f||a.g)&&setTimeout(function(){var a=e||null,m=d||null||{};if(0===c.length&&f)L(b.a);else{b.f+=c.length;f&&(b.j=f);var h,l=[];for(h=0;h<c.length;h++){var k=c[h],n=m[k.c],r=b.a,x=k;r.g&&w(r.f,[r.a.c(\"wf\",x.c,J(x).toString(),\"loading\")]);K(r,\"fontloading\",x);r=null;if(null===X)if(window.FontFace){var x=/Gecko.*Firefox\\/(\\d+)/.exec(window.navigator.userAgent),xa=/OS X.*Version\\/10\\..*Safari/.exec(window.navigator.userAgent)&&/Apple/.exec(window.navigator.vendor);\nX=x?42<parseInt(x[1],10):xa?!1:!0}else X=!1;X?r=new P(p(b.g,b),p(b.h,b),b.c,k,b.s,n):r=new Q(p(b.g,b),p(b.h,b),b.c,k,b.s,a,n);l.push(r)}for(h=0;h<l.length;h++)l[h].start()}},0)}function pa(a,b,c){var d=[],e=c.timeout;ia(b);var d=ka(a.a,c,a.c),f=new W(a.c,b,e);a.h=d.length;b=0;for(c=d.length;b<c;b++)d[b].load(function(b,d,c){qa(a,f,b,d,c)})};function ra(a,b){this.c=a;this.a=b}\nra.prototype.load=function(a){function b(){if(f[\"__mti_fntLst\"+d]){var c=f[\"__mti_fntLst\"+d](),e=[],h;if(c)for(var l=0;l<c.length;l++){var k=c[l].fontfamily;void 0!=c[l].fontStyle&&void 0!=c[l].fontWeight?(h=c[l].fontStyle+c[l].fontWeight,e.push(new G(k,h))):e.push(new G(k))}a(e)}else setTimeout(function(){b()},50)}var c=this,d=c.a.projectId,e=c.a.version;if(d){var f=c.c.o;A(this.c,(c.a.api||\"https://fast.fonts.net/jsapi\")+\"/\"+d+\".js\"+(e?\"?v=\"+e:\"\"),function(e){e?a([]):(f[\"__MonotypeConfiguration__\"+\nd]=function(){return c.a},b())}).id=\"__MonotypeAPIScript__\"+d}else a([])};function sa(a,b){this.c=a;this.a=b}sa.prototype.load=function(a){var b,c,d=this.a.urls||[],e=this.a.families||[],f=this.a.testStrings||{},g=new B;b=0;for(c=d.length;b<c;b++)z(this.c,d[b],C(g));var m=[];b=0;for(c=e.length;b<c;b++)if(d=e[b].split(\":\"),d[1])for(var h=d[1].split(\",\"),l=0;l<h.length;l+=1)m.push(new G(d[0],h[l]));else m.push(new G(d[0]));E(g,function(){a(m,f)})};function ta(a,b){a?this.c=a:this.c=ua;this.a=[];this.f=[];this.g=b||\"\"}var ua=\"https://fonts.googleapis.com/css\";function va(a,b){for(var c=b.length,d=0;d<c;d++){var e=b[d].split(\":\");3==e.length&&a.f.push(e.pop());var f=\"\";2==e.length&&\"\"!=e[1]&&(f=\":\");a.a.push(e.join(f))}}\nfunction wa(a){if(0==a.a.length)throw Error(\"No fonts to load!\");if(-1!=a.c.indexOf(\"kit=\"))return a.c;for(var b=a.a.length,c=[],d=0;d<b;d++)c.push(a.a[d].replace(/ /g,\"+\"));b=a.c+\"?family=\"+c.join(\"%7C\");0<a.f.length&&(b+=\"&subset=\"+a.f.join(\",\"));0<a.g.length&&(b+=\"&text=\"+encodeURIComponent(a.g));return b};function ya(a){this.f=a;this.a=[];this.c={}}\nvar za={latin:\"BESbswy\",\"latin-ext\":\"\\u00e7\\u00f6\\u00fc\\u011f\\u015f\",cyrillic:\"\\u0439\\u044f\\u0416\",greek:\"\\u03b1\\u03b2\\u03a3\",khmer:\"\\u1780\\u1781\\u1782\",Hanuman:\"\\u1780\\u1781\\u1782\"},Aa={thin:\"1\",extralight:\"2\",\"extra-light\":\"2\",ultralight:\"2\",\"ultra-light\":\"2\",light:\"3\",regular:\"4\",book:\"4\",medium:\"5\",\"semi-bold\":\"6\",semibold:\"6\",\"demi-bold\":\"6\",demibold:\"6\",bold:\"7\",\"extra-bold\":\"8\",extrabold:\"8\",\"ultra-bold\":\"8\",ultrabold:\"8\",black:\"9\",heavy:\"9\",l:\"3\",r:\"4\",b:\"7\"},Ba={i:\"i\",italic:\"i\",n:\"n\",normal:\"n\"},\nCa=/^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/;\nfunction Da(a){for(var b=a.f.length,c=0;c<b;c++){var d=a.f[c].split(\":\"),e=d[0].replace(/\\+/g,\" \"),f=[\"n4\"];if(2<=d.length){var g;var m=d[1];g=[];if(m)for(var m=m.split(\",\"),h=m.length,l=0;l<h;l++){var k;k=m[l];if(k.match(/^[\\w-]+$/)){var n=Ca.exec(k.toLowerCase());if(null==n)k=\"\";else{k=n[2];k=null==k||\"\"==k?\"n\":Ba[k];n=n[1];if(null==n||\"\"==n)n=\"4\";else var r=Aa[n],n=r?r:isNaN(n)?\"4\":n.substr(0,1);k=[k,n].join(\"\")}}else k=\"\";k&&g.push(k)}0<g.length&&(f=g);3==d.length&&(d=d[2],g=[],d=d?d.split(\",\"):\ng,0<d.length&&(d=za[d[0]])&&(a.c[e]=d))}a.c[e]||(d=za[e])&&(a.c[e]=d);for(d=0;d<f.length;d+=1)a.a.push(new G(e,f[d]))}};function Ea(a,b){this.c=a;this.a=b}var Fa={Arimo:!0,Cousine:!0,Tinos:!0};Ea.prototype.load=function(a){var b=new B,c=this.c,d=new ta(this.a.api,this.a.text),e=this.a.families;va(d,e);var f=new ya(e);Da(f);z(c,wa(d),C(b));E(b,function(){a(f.a,f.c,Fa)})};function Ga(a,b){this.c=a;this.a=b}Ga.prototype.load=function(a){var b=this.a.id,c=this.c.o;b?A(this.c,(this.a.api||\"https://use.typekit.net\")+\"/\"+b+\".js\",function(b){if(b)a([]);else if(c.Typekit&&c.Typekit.config&&c.Typekit.config.fn){b=c.Typekit.config.fn;for(var e=[],f=0;f<b.length;f+=2)for(var g=b[f],m=b[f+1],h=0;h<m.length;h++)e.push(new G(g,m[h]));try{c.Typekit.load({events:!1,classes:!1,async:!0})}catch(l){}a(e)}},2E3):a([])};function Ha(a,b){this.c=a;this.f=b;this.a=[]}Ha.prototype.load=function(a){var b=this.f.id,c=this.c.o,d=this;b?(c.__webfontfontdeckmodule__||(c.__webfontfontdeckmodule__={}),c.__webfontfontdeckmodule__[b]=function(b,c){for(var g=0,m=c.fonts.length;g<m;++g){var h=c.fonts[g];d.a.push(new G(h.name,ga(\"font-weight:\"+h.weight+\";font-style:\"+h.style)))}a(d.a)},A(this.c,(this.f.api||\"https://f.fontdeck.com/s/css/js/\")+ea(this.c)+\"/\"+b+\".js\",function(b){b&&a([])})):a([])};var Y=new oa(window);Y.a.c.custom=function(a,b){return new sa(b,a)};Y.a.c.fontdeck=function(a,b){return new Ha(b,a)};Y.a.c.monotype=function(a,b){return new ra(b,a)};Y.a.c.typekit=function(a,b){return new Ga(b,a)};Y.a.c.google=function(a,b){return new Ea(b,a)};var Z={load:p(Y.load,Y)};\"function\"===typeof define&&define.amd?define(function(){return Z}):\"undefined\"!==typeof module&&module.exports?module.exports=Z:(window.WebFont=Z,window.WebFontConfig&&Y.load(window.WebFontConfig));}());\n","var map = {\n\t\"./dawn.json\": \"./src/gutenberg/blocks/custom-code/themes/dawn.json\",\n\t\"./monokai.json\": \"./src/gutenberg/blocks/custom-code/themes/monokai.json\",\n\t\"./tomorrow.json\": \"./src/gutenberg/blocks/custom-code/themes/tomorrow.json\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/gutenberg/blocks/custom-code/themes sync recursive ^\\\\.\\\\/.*\\\\.json$\";","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"primitives\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * @WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { registerBlockType } from '@wordpress/blocks';\nimport { useState, RawHTML } from '@wordpress/element';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport { ResizableBox, Button } from '@wordpress/components';\nimport { Icon, globe, mobile, tablet, desktop, arrowUp, arrowDown, edit } from '@wordpress/icons';\n\n/**\n * @Internal dependencies\n */\nimport metadata from './block.json';\nimport variations from './variations';\nimport { blockIcon, cssIcon, jsIcon } from './icon';\nimport Editor from './components/Editor';\nimport { DynamicStyles } from '@components';\n\nconst IS_PRO = !!window.arkbSettings?.pfkey || false;\n\n/**\n * 設定項目\n */\nconst minHeight = 100;\nconst maxHeight = 1000;\n\nconst DEVICES = [\n\t{\n\t\tname: 'all',\n\t\ticon: globe,\n\t\tarrow: null,\n\t\tdesc: '',\n\t},\n\t{\n\t\tname: 'pc',\n\t\ticon: desktop,\n\t\tarrow: arrowUp,\n\t\tdesc: '@media (width >= 1000px)',\n\t},\n\t{\n\t\tname: 'sp',\n\t\ticon: tablet,\n\t\tarrow: arrowDown,\n\t\tdesc: '@media (width < 1000px)',\n\t},\n\t{\n\t\tname: 'mb',\n\t\ticon: mobile,\n\t\tarrow: arrowDown,\n\t\tdesc: '@media (width < 600px)',\n\t},\n\t{\n\t\tname: 'editor',\n\t\ticon: edit,\n\t\tarrow: null,\n\t\tdesc: __('CSS for Editor', 'arkhe-blocks'),\n\t},\n];\n\n/**\n * styleタグの中身を生成\n */\nfunction joinCustomCSS(code) {\n\tlet css = '';\n\tif (code?.all) {\n\t\tcss += code.all;\n\t}\n\tif (code?.editor) {\n\t\tcss += code.editor;\n\t}\n\tif (code?.pc) {\n\t\tcss += `\n\t\t\t@media (min-width: 1000px) {\n\t\t\t\t${code.pc}\n\t\t\t}`;\n\t}\n\tif (code?.sp) {\n\t\tcss += `\n\t\t\t@media not all and (min-width: 1000px) {\n\t\t\t\t${code.sp}\n\t\t\t}`;\n\t}\n\tif (code?.mb) {\n\t\tcss += `\n\t\t\t@media not all and (min-width: 600px) {\n\t\t\t\t${code.mb}\n\t\t\t}`;\n\t}\n\n\treturn css;\n}\n/**\n * Register Block\n */\nconst blockName = 'ark-block-custom-code';\nregisterBlockType(metadata.name, {\n\ttitle: __('Custom Code', 'arkhe-blocks'),\n\tdescription: __('Create advanced code editor', 'arkhe-blocks'),\n\ticon: blockIcon,\n\tvariations,\n\tedit: ({ attributes, setAttributes, isSelected, toggleSelection }) => {\n\t\t// content: css用 / code: js用\n\t\tconst { variation, content, code, height } = attributes;\n\n\t\tconst [deviceMode, setDeviceMode] = useState('all');\n\t\tconst [deviceQuery, setDeviceQuery] = useState('');\n\n\t\tconst isCSS = 'css' === variation;\n\t\tconst isJS = 'javascript' === variation;\n\n\t\tlet variationIcon = blockIcon;\n\t\tlet variationText = 'Code';\n\n\t\tif (isCSS) {\n\t\t\tvariationIcon = cssIcon;\n\t\t\tvariationText = 'CSS';\n\t\t} else if (isJS) {\n\t\t\tvariationIcon = jsIcon;\n\t\t\tvariationText = 'JS';\n\t\t\tif (!IS_PRO) variationText += ' (only PRO)';\n\t\t}\n\n\t\tconst blockProps = useBlockProps({ className: `${blockName} -${variation}` });\n\n\t\tconst deviceBtns = window.arkbSettings?.isArkhe && isCSS && (\n\t\t\t<>\n\t\t\t\t<div className='__now_query'>{deviceQuery}</div>\n\t\t\t\t<fieldset className='__deviceBtns'>\n\t\t\t\t\t{DEVICES.map((device) => {\n\t\t\t\t\t\tconst hasCode = !!(content[device.name] || '');\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tisPrimary={deviceMode === device.name}\n\t\t\t\t\t\t\t\tdata-has-code={hasCode}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tsetDeviceMode(device.name);\n\t\t\t\t\t\t\t\t\tsetDeviceQuery(device.desc);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tkey={`devicemode_${device.name}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Icon icon={device.icon} size='1em' className='__deviceIcon' />\n\t\t\t\t\t\t\t\t{device.arrow && (\n\t\t\t\t\t\t\t\t\t<Icon icon={device.arrow} size='1em' className='__arrowIcon' />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</fieldset>\n\t\t\t</>\n\t\t);\n\n\t\tlet setCode;\n\t\tif (isCSS) {\n\t\t\tsetCode = (newCode) => {\n\t\t\t\tsetAttributes({ content: { ...content, [deviceMode]: newCode } });\n\t\t\t};\n\t\t} else {\n\t\t\tsetCode = (newCode) => {\n\t\t\t\tsetAttributes({ code: newCode });\n\t\t\t};\n\t\t}\n\n\t\tlet currentCode;\n\t\tif (isCSS) {\n\t\t\tcurrentCode = content[deviceMode] || '';\n\t\t} else {\n\t\t\tcurrentCode = code || '';\n\t\t}\n\n\t\tconst dynamicStyles = isCSS && joinCustomCSS(content);\n\n\t\tlet availavle = true;\n\t\tif (!IS_PRO) {\n\t\t\tif (isJS || (isCSS && 'editor' === deviceMode)) {\n\t\t\t\tavailavle = false;\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<div {...blockProps}>\n\t\t\t\t{dynamicStyles && <DynamicStyles style={dynamicStyles} />}\n\t\t\t\t<div className={`${blockName}__label`}>\n\t\t\t\t\t<span className='__title'>\n\t\t\t\t\t\t<Icon icon={variationIcon} className='__icon' />\n\t\t\t\t\t\t<span>{variationText}</span>\n\t\t\t\t\t</span>\n\t\t\t\t\t{deviceBtns}\n\t\t\t\t</div>\n\t\t\t\t<ResizableBox\n\t\t\t\t\tsize={{ height }}\n\t\t\t\t\tminHeight={minHeight}\n\t\t\t\t\tenable={{\n\t\t\t\t\t\ttop: false,\n\t\t\t\t\t\tright: false,\n\t\t\t\t\t\tbottom: true,\n\t\t\t\t\t\tleft: false,\n\t\t\t\t\t\ttopRight: false,\n\t\t\t\t\t\tbottomRight: false,\n\t\t\t\t\t\tbottomLeft: false,\n\t\t\t\t\t\ttopLeft: false,\n\t\t\t\t\t}}\n\t\t\t\t\tonResizeStart={toggleSelection}\n\t\t\t\t\tonResizeStop={(event, direction, elt, delta) => {\n\t\t\t\t\t\t// エディターの値が最小値・最大値の間におさまるように調整\n\t\t\t\t\t\tconst newHeight = Math.min(\n\t\t\t\t\t\t\tMath.max(parseInt(height + delta.height, 10), minHeight),\n\t\t\t\t\t\t\tmaxHeight\n\t\t\t\t\t\t);\n\t\t\t\t\t\tsetAttributes({ height: newHeight });\n\t\t\t\t\t}}\n\t\t\t\t\tshowHandle={isSelected}\n\t\t\t\t>\n\t\t\t\t\t<Editor\n\t\t\t\t\t\tblockName={blockName}\n\t\t\t\t\t\tlang={variation}\n\t\t\t\t\t\tvalue={currentCode}\n\t\t\t\t\t\tonChange={setCode}\n\t\t\t\t\t\tdeviceMode={deviceMode}\n\t\t\t\t\t\tisSelected={isSelected}\n\t\t\t\t\t\tavailavle={availavle}\n\t\t\t\t\t/>\n\t\t\t\t</ResizableBox>\n\t\t\t</div>\n\t\t);\n\t},\n\n\tsave: ({ attributes }) => {\n\t\tconst { variation, code } = attributes;\n\t\tif ('css' === variation) {\n\t\t\treturn null;\n\t\t}\n\t\treturn <RawHTML>{code}</RawHTML>;\n\t},\n});\n"],"names":["webfontloader","emmetCSS","useEffect","useState","useRef","Spinner","useResizeObserver","loader","themes","ArkbProOnly","DEFAULT_OPTIONS","fontFamily","fontSize","lineHeight","wordWrap","hover","minimap","enabled","padding","top","_ref","blockName","value","lang","deviceMode","onChange","isSelected","availavle","currentCode","createElement","Fragment","type","className","style","height","containerRef","monacoRef","editorRef","resizeListener","size","isMonacoMounted","setIsMonacoMounted","isEditorReady","setIsEditorReady","onChangeDisposable","setOnChangeDisposable","setCode","newContent","current","getValue","defaultView","ownerDocument","cancelable","init","then","monaco","interval","setInterval","editor","clearInterval","getModel","dispose","cancel","CURRENT_MONACO__EDITOR","create","CURRENT_EDITOR","setModelLanguage","theme","setTheme","targetTheme","find","data","defineTheme","disposable","onDidChangeModelContent","fontFamilies","window","arkbBlockVars","console","log","font","val","webfontConfig","timeout","custom","families","active","remeasureFonts","inactive","context","link","querySelector","stylesheet","urls","load","arkbEmmetIsInitialized","addCommand","KeyMod","CtrlCmd","KeyCode","KEY_X","selection","getSelection","lineNumber","getPosition","isEmptySelection","startLineNumber","endLineNumber","startColumn","endColumn","setSelection","Selection","execCommand","KEY_C","setValue","width","layout","ref","blockIcon","viewBox","d","cssIcon","jsIcon","__","loaderConfig","paths","vs","makeCancelable","promise","hasCanceled_","canceledMessage","msg","wrappedPromise","Promise","resolve","reject","catch","targetWindow","arguments","length","undefined","setTimeout","arkbMonacoIsInitialized","clearTimeout","script","document","src","onload","require","config","onerror","body","appendChild","themeList","dawn","monokai","tomorrow","Object","keys","forEach","key","push","label","IS_PRO","arkbSettings","pfkey","variations","name","title","attributes","variation","keywords","icon","scope","isDefault","isActive","blockAttributes","variationAttributes","onlyProMessage","href","target","rel","onlyProEditMessage","passCheck","children","BlockList","useContext","createPortal","Platform","DynamicStyles","isWeb","styleElement","__unstableElementContext","TheStyle","registerBlockType","RawHTML","useBlockProps","ResizableBox","Button","Icon","globe","mobile","tablet","desktop","arrowUp","arrowDown","edit","metadata","Editor","minHeight","maxHeight","DEVICES","arrow","desc","joinCustomCSS","code","css","all","pc","sp","mb","description","setAttributes","toggleSelection","content","setDeviceMode","deviceQuery","setDeviceQuery","isCSS","isJS","variationIcon","variationText","blockProps","deviceBtns","isArkhe","map","device","hasCode","isPrimary","onClick","newCode","dynamicStyles","enable","right","bottom","left","topRight","bottomRight","bottomLeft","topLeft","onResizeStart","onResizeStop","event","direction","elt","delta","newHeight","Math","min","max","parseInt","showHandle","save","_ref2"],"sourceRoot":""}